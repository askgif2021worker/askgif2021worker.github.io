{"id":1265,"title":"Installing a Free SSL certificate on the Ubuntu server using Certbot and nginx.","imageUrl":"24151bce-2a18-41c5-b326-5353c1669cda_certbot-OG.jpg","dateCreated":"2020-04-27T13:57:30.283Z","dateModified":"2020-04-27T13:57:47.483Z","contributedBy":"AskGif","content":"<p>A wildcard certificate is a certificate that covers one or more names starting with *. and that will be accepted by a web browser for any subdomain name with any label in place of the * character. for example, a certificate for *.example.com will be valid for www.example.com, mail.example.com, hello.example.com, or goodbye.example.com, but not for example.com.</p>\r\n<p>&nbsp;</p>\r\n<p>1. SSH into the server</p>\r\n<p>SSH into the server running your HTTP website as a user with sudo privileges.</p>\r\n<p>&nbsp;</p>\r\n<p>2. Add Certbot PPA</p>\r\n<p>You'll need to add the Certbot PPA to your list of repositories. To do so, run the following commands on the command line on the machine:</p>\r\n<pre class=\"language-markup\"><code>sudo apt-get update\r\n\r\nsudo apt-get install software-properties-common\r\n\r\nsudo add-apt-repository universe\r\n\r\nsudo add-apt-repository ppa:certbot/certbot\r\n\r\nsudo apt-get update</code></pre>\r\n<p>&nbsp;</p>\r\n<p>3. Install Certbot</p>\r\n<p>Run this command on the command line on the machine to install Certbot.</p>\r\n<pre class=\"language-markup\"><code>sudo apt-get install certbot python-certbot-nginx</code></pre>\r\n<p>&nbsp;</p>\r\n<p>4. Choose how you'd like to run Certbot</p>\r\n<p>Either get and install your certificates...</p>\r\n<p>Run this command to get a certificate and have Certbot edit your Nginx configuration automatically to serve it, turning on HTTPS access in a single step.</p>\r\n<pre class=\"language-markup\"><code>sudo certbot --nginx</code></pre>\r\n<p>Or, just get a certificate</p>\r\n<p>If you're feeling more conservative and would like to make the changes to your Nginx configuration by hand, run this command.</p>\r\n<pre class=\"language-markup\"><code>sudo certbot certonly --nginx</code></pre>\r\n<p>&nbsp;</p>\r\n<p>5. Test automatic renewal</p>\r\n<p>The Certbot packages on your system come with a cron job or systemd timer that will renew your certificates automatically before they expire. You will not need to run Certbot again, unless you change your configuration. You can test automatic renewal for your certificates by running this command:</p>\r\n<pre class=\"language-markup\"><code>sudo certbot renew --dry-run\r\n\r\nThe command to renew certbot is installed in one of the following locations:\r\n\r\n/etc/crontab/\r\n\r\n/etc/cron.*/*\r\n\r\nsystemctl list-timers</code></pre>\r\n<p>&nbsp;</p>\r\n<p>6. Confirm that Certbot worked</p>\r\n<p>To confirm that your site is set up properly, visit https://yourwebsite.com/ in your browser and look for the lock icon in the URL bar. If you want to check that you have the top-of-the-line installation, you can head to https://www.ssllabs.com/ssltest/.</p>\r\n<p>&nbsp;</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/24151bce-2a18-41c5-b326-5353c1669cda_certbot-OG.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"installing-a-free-ssl-certificate-on-the-ubuntu-server-using-certbot-and-nginx","tags":[{"name":"ssl","slug":"ssl"},{"name":"फ्री-सर्वर","slug":"free-server"},{"name":"nginx","slug":"nginx"},{"name":"certbot","slug":"certbot"}],"recommendations":[{"id":405,"title":"Nginx Reverse Proxy to ASP.NET Core In Same Docker Container","imageUrl":"851b560d-0263-4e5d-9426-f7dad119ba6c_target-architecture-docker-nginx-ketrel.png","dateCreated":"2019-06-25T02:25:00.552Z","dateModified":"2019-06-26T08:34:17.75Z","contributedBy":"AskGif","content":"As mentioned in the <a title=\"Hosting ASP.NET Core in Docker\" href=\"../../../../blog/404/hosting-asp-net-core-in-docker/\" target=\"_blank\" rel=\"noopener\">previous post (Hosting ASP.NET Core in Docker)</a>, it is recommended to use something other than Kestrel as the front-line web server. In this ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/851b560d-0263-4e5d-9426-f7dad119ba6c_target-architecture-docker-nginx-ketrel.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"nginx","slug":"nginx"},{"name":"dotnet-core","slug":"dotnet-core"},{"name":"asp-dot-net","slug":"asp-dot-net"},{"name":"docker","slug":"docker"}],"slug":"nginx-reverse-proxy-to-asp.net-core-in-same-docker-container","total":0},{"id":404,"title":"Hosting ASP.NET Core in Docker","imageUrl":"f952156f-643a-4dff-8c46-88129bed8ede_dockerise-aspnetcore-app.jpg","dateCreated":"2019-06-24T15:35:42.674Z","dateModified":"2019-06-25T02:57:20.863Z","contributedBy":"AskGif","content":"The containerization trend has been growing for a while now in the industry. The idea is to &ldquo;containerize&rdquo; (or package) any application into a well-defined container. This allows the same packaged application to be deployed to run on any infrastructure.\r\n&nbsp;\r\nIn other","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/f952156f-643a-4dff-8c46-88129bed8ede_dockerise-aspnetcore-app.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"docker","slug":"docker"},{"name":"asp-dot-net","slug":"asp-dot-net"},{"name":"dotnet-core","slug":"dotnet-core"},{"name":"nginx","slug":"nginx"}],"slug":"hosting-asp.net-core-in-docker","total":0},{"id":3,"title":"एडब्ल्यूएस फ्री टियर योजना पर ईसी 2 उदाहरण कैसे बनाएं।","imageUrl":"b1b8d6b7-4b5c-425f-b380-10d5ea302e3e_f8157768-33eb-454f-b892-1ba29b2b3b4a.png","dateCreated":"2018-06-22T06:14:32.45Z","dateModified":"2018-07-09T15:45:18.048Z","contributedBy":"AskGif","content":"एडब्ल्यूएस फ्री टियर योजना पर ईसी 2 उदाहरण कैसे बनाएं।\r\nयह ब्लॉग एडब्ल्यूएस मुफ्त टायर खाता बनाने के लिए कैसे जारी है। यदि आप इसे याद कर चुके हैं तो कृपया पुनरीक्षण करें।\r\nएक बार आपका एडब्ल्यूएस खाता सक्रिय हो जाने पर आप लॉगिन के बाद निम्नलिखित स्क्रीन देख सकते हैं।","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/b1b8d6b7-4b5c-425f-b380-10d5ea302e3e_f8157768-33eb-454f-b892-1ba29b2b3b4a.png","category":{"name":"शिक्षण","slug":"tutorials"},"tags":[{"name":"AWS","slug":"aws"},{"name":"EC2","slug":"ec2"},{"name":"फ्री-सर्वर","slug":"free-server"}],"slug":"how-to-create-ec2-instance-on-aws-free-tier-plan","total":0},{"id":2,"title":"AWS मुफ्त स्तरीय खाता कैसे बनाएं","imageUrl":"6476345a-5b48-4ce1-926b-deccd5e32610_fi_aws_free_tier.jpg","dateCreated":"2018-06-21T16:46:26.687Z","dateModified":"2018-08-02T10:27:06.092Z","contributedBy":"AskGif","content":"एडब्ल्यूएस सीखने के उद्देश्य के लिए नए उपयोगकर्ताओं के लिए 1 साल का मुफ्त उपयोग प्रदान करता है। आप सीखने के उद्देश्य के लिए aws का उपयोग कर सकते हैं।\r\n&nbsp;\r\nनिम्नलिखित चरणों का पालन करें:","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/6476345a-5b48-4ce1-926b-deccd5e32610_fi_aws_free_tier.jpg","category":{"name":"शिक्षण","slug":"tutorials"},"tags":[{"name":"फ्री-सर्वर","slug":"free-server"},{"name":"AWS","slug":"aws"}],"slug":"how-to-create-aws-free-tier-account","total":0}]}