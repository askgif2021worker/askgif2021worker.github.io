{"id":1272,"title":"Reformat The String","imageUrl":"37d8030f-c9c6-4cca-bc30-0472a5e2c641-q3.jpg","dateCreated":"2020-05-03T03:41:06.538Z","dateModified":"2020-05-03T07:59:08.995Z","contributedBy":"AskGif","content":"<p>Given alphanumeric string s. (Alphanumeric string is a string consisting of lowercase English letters and digits).</p>\r\n<p>You have to find a permutation of the string where no letter is followed by another letter and no digit is followed by another digit. That is, no two adjacent characters have the same type.</p>\r\n<p>Return the reformatted string or return an empty string if it is impossible to reformat the string.</p>\r\n<p>&nbsp;</p>\r\n<p>Example 1:</p>\r\n<pre class=\"language-markup\"><code>Input: s = \"a0b1c2\"\r\n\r\nOutput: \"0a1b2c\"\r\n\r\nExplanation: No two adjacent characters have the same type in \"0a1b2c\". \"a0b1c2\", \"0a1b2c\", \"0c2a1b\" are also valid permutations.</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Example 2:</p>\r\n<pre class=\"language-markup\"><code>Input: s = \"leetcode\"\r\n\r\nOutput: \"\"\r\n\r\nExplanation: \"leetcode\" has only characters so we cannot separate them by digits.</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Example 3:</p>\r\n<pre class=\"language-markup\"><code>Input: s = \"1229857369\"\r\n\r\nOutput: \"\"\r\n\r\nExplanation: \"1229857369\" has only digits so we cannot separate them by characters.</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Example 4:</p>\r\n<pre class=\"language-markup\"><code>Input: s = \"covid2019\"\r\n\r\nOutput: \"c2o0v1i9d\"</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Example 5:</p>\r\n<pre class=\"language-markup\"><code>Input: s = \"ab123\"\r\n\r\nOutput: \"1a2b3\"</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Constraints:</p>\r\n<pre class=\"language-markup\"><code>1 &lt;= s.length &lt;= 500\r\n\r\ns consists of only lowercase English letters and/or digits.</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Solution:</p>\r\n<pre class=\"language-csharp\"><code>using System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace LeetCode.AskGif.Easy.String\r\n{\r\n    class ReformatString\r\n    {\r\n        public void execute()\r\n        {\r\n            string s = \"covid2019\";\r\n\r\n            var res = Reformat(s);\r\n        }\r\n\r\n        public string Reformat(string s)\r\n        {\r\n            var number = new List&lt;char&gt;();\r\n            var alphabet = new List&lt;char&gt;();\r\n            for(int i = 0; i &lt; s.Length; i++)\r\n            {\r\n                if (isNumber(s[i]))\r\n                {\r\n                    number.Add(s[i]);\r\n                }\r\n                else\r\n                {\r\n                    alphabet.Add(s[i]);\r\n                }\r\n            }\r\n\r\n            if( Math.Abs(number.Count - alphabet.Count) &gt; 1)\r\n            {\r\n                return \"\";\r\n            }\r\n            else\r\n            {\r\n                StringBuilder res = new StringBuilder();\r\n                if(number.Count &gt; alphabet.Count)\r\n                {\r\n                    for (int i = 0; i &lt; (s.Length/2)+1; i++)\r\n                    {\r\n                        if (i &lt; number.Count)\r\n                        {\r\n                            res.Append(number[i]);\r\n                        }\r\n                        if (i &lt; alphabet.Count)\r\n                        {\r\n                            res.Append(alphabet[i]);\r\n                        }\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    for (int i = 0; i &lt; (s.Length/2)+1; i++)\r\n                    {\r\n                        if (i &lt; alphabet.Count)\r\n                        {\r\n                            res.Append(alphabet[i]);\r\n                        }\r\n                        if (i &lt; number.Count)\r\n                        {\r\n                            res.Append(number[i]);\r\n                        }                        \r\n                    }\r\n                }\r\n                return res.ToString();\r\n            }\r\n        }\r\n\r\n        private bool isNumber(char v)\r\n        {\r\n            return v &gt;= 48 &amp;&amp; v &lt;= 57;\r\n        }\r\n    }\r\n}\r\n</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Time Complexity: O(n) - For one pass</p>\r\n<p>Space Complexity: O(n) - For Storing in List.</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/37d8030f-c9c6-4cca-bc30-0472a5e2c641-q3.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"reformat-the-string","tags":[{"name":"आसान","slug":"easy"},{"name":"string","slug":"string"},{"name":"algorithm","slug":"algorithm"},{"name":"leetcode","slug":"leetcode"}],"recommendations":[{"id":1723,"title":"Beautiful Arrangement II - Maths - Medium - LeetCode","imageUrl":"icon_b2d502bc-0983-4102-b87f-e37eff0ed0db.jpg","dateCreated":"2021-01-26T13:09:40.384Z","dateModified":"2021-01-26T13:09:46.827Z","contributedBy":"sumitc91","content":"Given two integers n and k, you need to construct a list that contains n different positive integers ranging from 1 to n and obeys the following requirement:<br />Suppose this list is [a1, a2, a3, ... , an], then the list [|a1 - a2|, |a2 - a3|, |a3 - a4|, ... , |an-1 - an|] has exactly k distinct","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/b2d502bc-0983-4102-b87f-e37eff0ed0db.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"गणित","slug":"maths"},{"name":"मध्यम","slug":"medium"}],"slug":"beautiful-arrangement-ii-maths-medium-leetcode","total":0},{"id":1634,"title":"3Sum Closest - Array - Medium - LeetCode","imageUrl":"icon_981f57b3-a4c6-4c16-baeb-a49e75fe9497.jpg","dateCreated":"2020-10-23T07:22:34.29Z","dateModified":"2020-10-23T07:22:55.266Z","contributedBy":"sumitc91","content":"Given an array nums of n integers and an integer target, find three integers in nums such that the sum is closest to target. Return the sum of the three integers. You may assume that each input would have exactly one solution.\n&nbsp;\nExample 1:\nInput: nums = [-1,2,1,-4], targ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/981f57b3-a4c6-4c16-baeb-a49e75fe9497.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"3sum-closest-array-medium-leetcode","total":0},{"id":1627,"title":"Number of Days Between Two Dates - Maths - Easy - LeetCode","imageUrl":"icon_c8c70ab5-92c2-4bfd-ad83-d0a6afbe3ded.jpg","dateCreated":"2020-10-18T06:18:04.266Z","dateModified":"2020-10-18T06:18:17.665Z","contributedBy":"sumitc91","content":"Write a program to count the number of days between two dates.\nThe two dates are given as strings, their format is YYYY-MM-DD as shown in the examples.\n&nbsp;\nExample 1:\nInput: date1 = \"2019-06-29\", date2 = \"2019-06-30\"<br />Output: 1<br />Example 2:\nInput: date","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/c8c70ab5-92c2-4bfd-ad83-d0a6afbe3ded.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"गणित","slug":"maths"}],"slug":"number-of-days-between-two-dates-maths-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}