{"id":1275,"title":"Generate a String With Characters That Have Odd Counts","imageUrl":"e2140856-0339-41e1-9279-f41a8357bea5-q3.jpg","dateCreated":"2020-05-03T08:00:18.993Z","dateModified":"2020-05-03T08:00:33.233Z","contributedBy":"AskGif","content":"<p>Given an integer n, return a string with n characters such that each character in such string occurs an odd number of times.</p>\r\n<p>The returned string must contain only lowercase English letters. If there are multiples valid strings, return any of them.&nbsp;&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>Example 1:</p>\r\n<pre class=\"language-markup\"><code>Input: n = 4\r\n\r\nOutput: \"pppz\"\r\n\r\nExplanation: \"pppz\" is a valid string since the character 'p' occurs three times and the character 'z' occurs once. Note that there are many other valid strings such as \"ohhh\" and \"love\".</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Example 2:</p>\r\n<pre class=\"language-markup\"><code>Input: n = 2\r\n\r\nOutput: \"xy\"\r\n\r\nExplanation: \"xy\" is a valid string since the characters 'x' and 'y' occur once. Note that there are many other valid strings such as \"ag\" and \"ur\".\r\n\r\n</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Example 3:</p>\r\n<pre class=\"language-markup\"><code>Input: n = 7\r\n\r\nOutput: \"holasss\"</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Constraints:</p>\r\n<pre class=\"language-markup\"><code>1 &lt;= n &lt;= 500</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Solution:</p>\r\n<pre class=\"language-csharp\"><code>using System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace LeetCode.AskGif.Easy.String\r\n{\r\n    class GenerateTheStringSoln\r\n    {\r\n        public void execute()\r\n        {\r\n            var res = GenerateTheString(5);\r\n        }\r\n\r\n        public string GenerateTheString(int n)\r\n        {\r\n            StringBuilder str = new StringBuilder();\r\n            if (n % 2 == 0)\r\n            {\r\n                for(int i = 0; i &lt; n - 1; i++)\r\n                {\r\n                    str.Append(\"a\");\r\n                }\r\n                str.Append(\"b\");\r\n            }\r\n            else\r\n            {\r\n                for (int i = 0; i &lt; n; i++)\r\n                    str.Append(\"c\");\r\n            }\r\n\r\n            return str.ToString();\r\n        }\r\n    }\r\n}\r\n</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Time Complexity: O(n) - For appending n characters in the string</p>\r\n<p>Space Complexity: O(1) - No Extra space</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/e2140856-0339-41e1-9279-f41a8357bea5-q3.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"generate-a-string-with-characters-that-have-odd-counts","tags":[{"name":"leetcode","slug":"leetcode"},{"name":"आसान","slug":"easy"},{"name":"algorithm","slug":"algorithm"},{"name":"string","slug":"string"}],"recommendations":[{"id":1661,"title":"Get Maximum in Generated Array - Array - Easy - LeetCode","imageUrl":"icon_6268cd06-1d1b-409d-9665-cbe40d65c81d.jpg","dateCreated":"2020-11-08T08:10:40.511Z","dateModified":"2020-11-08T08:10:45.589Z","contributedBy":"sumitc91","content":"You are given an integer n. An array nums of length n + 1 is generated in the following way:\nnums[0] = 0<br />nums[1] = 1<br />nums[2 * i] = nums[i] when 2 &lt;= 2 * i &lt;= n<br />nums[2 * i + 1] = nums[i] + nums[i + 1] when 2 &lt;= 2 * i + 1 &lt;= n<br />Return the maximum integer in the","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/6268cd06-1d1b-409d-9665-cbe40d65c81d.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"get-maximum-in-generated-array-array-easy-leetcode","total":0},{"id":1625,"title":"Print in Order - Multi Threading - Easy - LeetCode","imageUrl":"icon_3e17a90d-8d3d-4655-9ad5-34bee8157e21.jpg","dateCreated":"2020-10-18T04:04:15.138Z","dateModified":"2020-10-18T04:04:52.636Z","contributedBy":"sumitc91","content":"Suppose we have a class:\npublic class Foo {<br />&nbsp; public void first() { print(\"first\"); }<br />&nbsp; public void second() { print(\"second\"); }<br />&nbsp; public void third() { print(\"third\"); }<br />}<br />The same instance of Foo will be passed to three different threads. Thread A","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/3e17a90d-8d3d-4655-9ad5-34bee8157e21.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"multi-threading","slug":"multi-threading"}],"slug":"print-in-order-multi-threading-easy-leetcode","total":0},{"id":1615,"title":"License Key Formatting - String - Easy - LeetCode","imageUrl":"icon_168f3a9d-b3aa-4758-a48d-b2e53a3ad538.jpg","dateCreated":"2020-10-17T04:06:23.384Z","dateModified":"2020-10-17T04:06:32.538Z","contributedBy":"sumitc91","content":"You are given a license key represented as a string S which consists of only alphanumeric character and dashes. The string is separated into N+1 groups by N dashes.\nGiven a number K, we would want to reformat the strings such that each group contains exactly K characters, except for the fi","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/168f3a9d-b3aa-4758-a48d-b2e53a3ad538.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"string","slug":"string"}],"slug":"license-key-formatting-string-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}