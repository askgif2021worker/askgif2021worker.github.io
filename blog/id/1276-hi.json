{"id":1276,"title":"Increasing Decreasing String Problem With Solution","imageUrl":"a72514f6-0723-4ed7-a6bb-688ce62ca025-q3.jpg","dateCreated":"2020-05-03T09:31:48.011Z","dateModified":"2020-05-03T09:32:04.887Z","contributedBy":"AskGif","content":"<p>Given a string s. You should re-order the string using the following algorithm:</p>\r\n<pre class=\"language-markup\"><code>Pick the smallest character from s and append it to the result.\r\n\r\nPick the smallest character from s which is greater than the last appended character to the result and append it.\r\n\r\nRepeat step 2 until you cannot pick more characters.\r\n\r\nPick the largest character from s and append it to the result.\r\n\r\nPick the largest character from s which is smaller than the last appended character to the result and append it.\r\n\r\nRepeat step 5 until you cannot pick more characters.\r\n\r\nRepeat the steps from 1 to 6 until you pick all characters from s.\r\n\r\nIn each step, If the smallest or the largest character appears more than once you can choose any occurrence and append it to the result.</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Return the result string after sorting s with this algorithm.</p>\r\n<p>&nbsp;</p>\r\n<p>Example 1:</p>\r\n<pre class=\"language-markup\"><code>Input: s = \"aaaabbbbcccc\"\r\n\r\nOutput: \"abccbaabccba\"\r\n\r\nExplanation: After steps 1, 2 and 3 of the first iteration, result = \"abc\"\r\n\r\nAfter steps 4, 5 and 6 of the first iteration, result = \"abccba\"\r\n\r\nFirst iteration is done. Now s = \"aabbcc\" and we go back to step 1\r\n\r\nAfter steps 1, 2 and 3 of the second iteration, result = \"abccbaabc\"\r\n\r\nAfter steps 4, 5 and 6 of the second iteration, result = \"abccbaabccba\"</code></pre>\r\n<p>Example 2:</p>\r\n<pre class=\"language-markup\"><code>Input: s = \"rat\"\r\n\r\nOutput: \"art\"\r\n\r\nExplanation: The word \"rat\" becomes \"art\" after re-ordering it with the mentioned algorithm.</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Example 3:</p>\r\n<pre class=\"language-markup\"><code>Input: s = \"leetcode\"\r\n\r\nOutput: \"cdelotee\"</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Example 4:</p>\r\n<pre class=\"language-markup\"><code>Input: s = \"ggggggg\"\r\n\r\nOutput: \"ggggggg\"</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Example 5:</p>\r\n<pre class=\"language-markup\"><code>Input: s = \"spo\"\r\n\r\nOutput: \"ops\"</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Constraints:</p>\r\n<pre class=\"language-markup\"><code>1 &lt;= s.length &lt;= 500\r\n\r\ns contains only lower-case English letters.</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Solution:</p>\r\n<pre class=\"language-csharp\"><code>using System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace LeetCode.AskGif.Easy.String\r\n{\r\n    class SortStringSoln\r\n    {\r\n        public void execute()\r\n        {\r\n            var res = SortString(\"aaaabbbbcccc\");\r\n        }\r\n\r\n        public string SortString(string s)\r\n        {\r\n            var dict = new Dictionary&lt;char, int&gt;();\r\n            var set = new SortedSet&lt;char&gt;();\r\n            var str = new StringBuilder();\r\n            foreach (var c in s)\r\n            {\r\n                if (dict.ContainsKey(c))\r\n                    dict[c]++;\r\n                else\r\n                    dict[c] = 1;\r\n                set.Add(c);\r\n            }\r\n\r\n            var prevStack = new Stack&lt;char&gt;();\r\n            var currentStack = new Stack&lt;char&gt;();\r\n            foreach (var item in set)\r\n            {\r\n                prevStack.Push(item);\r\n            }\r\n\r\n            while (prevStack.Count != 0)\r\n            {\r\n                currentStack.Push(prevStack.Pop());\r\n            }\r\n\r\n            while (dict.Count != 0)\r\n            {\r\n                while (currentStack.Count != 0)\r\n                {\r\n                    var item = currentStack.Pop();\r\n                    if (!dict.ContainsKey(item)) continue;\r\n                    str.Append(item);\r\n                    if (dict[item] == 1)\r\n                    {\r\n                        dict.Remove(item);\r\n                    }\r\n                    else\r\n                    {\r\n                        dict[item]--;\r\n                    }\r\n                    prevStack.Push(item);\r\n                }\r\n                currentStack = prevStack;\r\n                prevStack = new Stack&lt;char&gt;();\r\n            }\r\n\r\n            return str.ToString();\r\n        }\r\n\r\n    }\r\n}\r\n</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Time Complexity: O(u*n) where u will be unique elements in the string and n will be total number of elements. If we consider those unique elements are very limited in numbers then the time complexity of the solution will be O(n).</p>\r\n<p>Space Complexity: O(n) - for dictionary and HashSet.</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a72514f6-0723-4ed7-a6bb-688ce62ca025-q3.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"increasing-decreasing-string-problem-with-solution","tags":[{"name":"string","slug":"string"},{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"आसान","slug":"easy"}],"recommendations":[{"id":1724,"title":"Maximum Number of Balls in a Box - Maths - Easy - LeetCode","imageUrl":"icon_2c5a52f4-2d58-4245-8e1c-47060f1505b8.jpg","dateCreated":"2021-02-13T12:35:08.09Z","dateModified":"2021-02-13T12:35:13.637Z","contributedBy":"sumitc91","content":"You are working in a ball factory where you have n balls numbered from lowLimit up to highLimit inclusive (i.e., n == highLimit - lowLimit + 1), and an infinite number of boxes numbered from 1 to infinity.\nYour job at this factory is to put each ball in the box with a number equal to the s","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/2c5a52f4-2d58-4245-8e1c-47060f1505b8.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"गणित","slug":"maths"}],"slug":"maximum-number-of-balls-in-a-box-maths-easy-leetcode","total":0},{"id":1677,"title":"Find the Duplicate Number - Array - Medium - LeetCode","imageUrl":"icon_85d20211-e54a-42fd-9300-e83bc02b7ffe.jpg","dateCreated":"2020-11-18T13:09:40.526Z","dateModified":"2020-11-18T13:09:46.723Z","contributedBy":"sumitc91","content":"Given an array of integers nums containing n + 1 integers where each integer is in the range [1, n] inclusive.\nThere is only one duplicate number in nums, return this duplicate number.\nFollow-ups:\nHow can we prove that at least one duplicate number must exist in nums?&nbsp;<b","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/85d20211-e54a-42fd-9300-e83bc02b7ffe.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"find-the-duplicate-number-array-medium-leetcode","total":0},{"id":1674,"title":"Combination Sum III - Array - Medium - LeetCode","imageUrl":"icon_becf4b84-69f9-4582-a8d7-d32b8422353a.jpg","dateCreated":"2020-11-18T11:38:07.946Z","dateModified":"2020-11-18T11:38:14.249Z","contributedBy":"sumitc91","content":"Find all valid combinations of k numbers that sum up to n such that the following conditions are true:\nOnly numbers 1 through 9 are used.<br />Each number is used at most once.<br />Return a list of all possible valid combinations. The list must not contain the same combination twice, and ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/becf4b84-69f9-4582-a8d7-d32b8422353a.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"combination-sum-iii-array-medium-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}