{"id":1277,"title":"Remove Palindromic Subsequences Question with Solution.","imageUrl":"a2ddf27e-2bf9-408f-88c0-f2c43cfacb54-q3.jpg","dateCreated":"2020-05-03T10:13:43.687Z","dateModified":"2020-05-03T10:25:17.39Z","contributedBy":"AskGif","content":"<p>Given a string s consisting only of letters 'a' and 'b'. In a single step, you can remove one palindromic subsequence from s.</p>\r\n<p>Return the minimum number of steps to make the given string empty.</p>\r\n<p>A string is a subsequence of a given string if it is generated by deleting some characters of a given string without changing its order.</p>\r\n<p>A string is called palindrome if it is one that reads the same backward as well as forward.</p>\r\n<p>&nbsp;</p>\r\n<p>Example 1:</p>\r\n<pre class=\"language-markup\"><code>Input: s = \"ababa\"\r\n\r\nOutput: 1\r\n\r\nExplanation: String is already a palindrome</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Example 2:</p>\r\n<pre class=\"language-markup\"><code>Input: s = \"abb\"\r\n\r\nOutput: 2\r\n\r\nExplanation: \"abb\" -&gt; \"bb\" -&gt; \"\". \r\n\r\nRemove palindromic subsequence \"a\" then \"bb\".</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Example 3:</p>\r\n<pre class=\"language-markup\"><code>Input: s = \"baabb\"\r\n\r\nOutput: 2\r\n\r\nExplanation: \"baabb\" -&gt; \"b\" -&gt; \"\". \r\n\r\nRemove palindromic subsequence \"baab\" then \"b\".</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Example 4:</p>\r\n<pre class=\"language-markup\"><code>Input: s = \"\"\r\n\r\nOutput: 0</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Constraints:</p>\r\n<pre class=\"language-markup\"><code>0 &lt;= s.length &lt;= 1000\r\n\r\ns only consists of letters 'a' and 'b'</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Solution:</p>\r\n<pre class=\"language-csharp\"><code>using System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace LeetCode.AskGif.Easy.String\r\n{\r\n    class RemovePalindromeSubSol\r\n    {\r\n        public void execute()\r\n        {\r\n            var res = RemovePalindromeSub(\"ababa\");\r\n        }\r\n        public int RemovePalindromeSub(string s)\r\n        {\r\n            if (s == null || s == \"\")\r\n                return 0;\r\n\r\n            for (int i = 0,j = s.Length - 1; i &lt;= j; i++, j--)\r\n            {\r\n                if (s[i] != s[j])\r\n                    return 2;\r\n            }\r\n            return 1;\r\n        }\r\n    }\r\n}\r\n</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Time Complexity: O(n) - to check if the given string is palindrome or not in a single pass.</p>\r\n<p>Space Complexity: O(1) - no extra space used.</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a2ddf27e-2bf9-408f-88c0-f2c43cfacb54-q3.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"remove-palindromic-subsequences-question-with-solution","tags":[{"name":"leetcode","slug":"leetcode"},{"name":"string","slug":"string"},{"name":"algorithm","slug":"algorithm"},{"name":"आसान","slug":"easy"},{"name":"डेटा-संरचना","slug":"data-structure"}],"recommendations":[{"id":1711,"title":"Count of Matches in Tournament - String - Easy - LeetCode","imageUrl":"icon_d4fba4b6-ab89-4548-aaf7-f9918522d7dd.jpg","dateCreated":"2020-12-28T14:11:46.984Z","dateModified":"2020-12-28T14:11:55.184Z","contributedBy":"sumitc91","content":"You are given an integer n, the number of teams in a tournament that has strange rules:\nIf the current number of teams is even, each team gets paired with another team. A total of n / 2 matches are played, and n / 2 teams advance to the next round.<br />If the current number of teams is od","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/d4fba4b6-ab89-4548-aaf7-f9918522d7dd.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"string","slug":"string"}],"slug":"count-of-matches-in-tournament-string-easy-leetcode","total":0},{"id":1675,"title":"Majority Element II - Array - Medium - LeetCode","imageUrl":"icon_17b104bf-91b6-48b5-a7b8-2d58b5ba4b4e.jpg","dateCreated":"2020-11-18T12:22:28.829Z","dateModified":"2020-11-18T12:22:35.442Z","contributedBy":"sumitc91","content":"Given an integer array of size n, find all elements that appear more than &lfloor; n/3 &rfloor; times.\nFollow-up: Could you solve the problem in linear time and in O(1) space?\n&nbsp;\nExample 1:\nInput: nums = [3,2,3]<br />Output: [3]<br />Example 2:\nInput: nums =","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/17b104bf-91b6-48b5-a7b8-2d58b5ba4b4e.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"majority-element-ii-array-medium-leetcode","total":0},{"id":1640,"title":"Find First and Last Position of Element in Sorted Array - Array - Medium - LeetCode","imageUrl":"icon_4dd548b4-7f64-4384-8000-de99e5e3a765.jpg","dateCreated":"2020-10-25T13:25:33.524Z","dateModified":"2020-10-25T13:25:43.128Z","contributedBy":"sumitc91","content":"Given an array of integers nums sorted in ascending order, find the starting and ending position of a given target value.\nIf the target is not found in the array, return [-1, -1].\nFollow up: Could you write an algorithm with O(log n) runtime complexity?\n&nbsp;\nExample ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/4dd548b4-7f64-4384-8000-de99e5e3a765.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"find-first-and-last-position-of-element-in-sorted-array-array-medium-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}