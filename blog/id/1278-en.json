{"id":1278,"title":"Decrypt String from Alphabet to Integer Mapping","imageUrl":"9be62224-a6e7-43a4-9850-dd4590e45021-q3.jpg","dateCreated":"2020-05-03T12:58:12.411Z","dateModified":"2020-05-03T12:58:43.088Z","contributedBy":"AskGif","content":"<p>Given a string s formed by digits ('0' - '9') and '#' . We want to map s to English lowercase characters as follows:</p>\r\n<p>Characters ('a' to 'i') are represented by ('1' to '9') respectively.</p>\r\n<p>Characters ('j' to 'z') are represented by ('10#' to '26#') respectively.&nbsp;</p>\r\n<p>Return the string formed after mapping.</p>\r\n<p>It's guaranteed that a unique mapping will always exist.</p>\r\n<p>&nbsp;</p>\r\n<p>Example 1:</p>\r\n<pre class=\"language-markup\"><code>Input: s = \"10#11#12\"\r\n\r\nOutput: \"jkab\"\r\n\r\nExplanation: \"j\" -&gt; \"10#\" , \"k\" -&gt; \"11#\" , \"a\" -&gt; \"1\" , \"b\" -&gt; \"2\".</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Example 2:</p>\r\n<pre class=\"language-markup\"><code>Input: s = \"1326#\"\r\n\r\nOutput: \"acz\"</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Example 3:</p>\r\n<pre class=\"language-markup\"><code>Input: s = \"25#\"\r\n\r\nOutput: \"y\"</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Example 4:</p>\r\n<pre class=\"language-markup\"><code>Input: s = \"12345678910#11#12#13#14#15#16#17#18#19#20#21#22#23#24#25#26#\"\r\n\r\nOutput: \"abcdefghijklmnopqrstuvwxyz\"</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Constraints:</p>\r\n<pre class=\"language-markup\"><code>1 &lt;= s.length &lt;= 1000\r\n\r\ns[i] only contains digits letters ('0'-'9') and '#' letter.\r\n\r\ns will be valid string such that mapping is always possible.</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Solution:</p>\r\n<pre class=\"language-csharp\"><code>using System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace LeetCode.AskGif.Easy.String\r\n{\r\n    class FreqAlphabetsSol\r\n    {\r\n        public void execute()\r\n        {\r\n            var res = FreqAlphabets(\"10#11#12\");\r\n        }\r\n        public string FreqAlphabets(string s)\r\n        {\r\n            string[] alphabet = {\"\",\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\",\r\n                               \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"};\r\n            var str = new StringBuilder();\r\n            for (int i = 0; i &lt; s.Length; i++)\r\n            {\r\n                if(i+2 &lt; s.Length &amp;&amp; s[i+2] == '#')\r\n                {\r\n                    str.Append(alphabet[Int32.Parse(s.Substring(i, 2))]);\r\n                    i += 2;\r\n                }\r\n                else\r\n                {\r\n                    str.Append(alphabet[Int32.Parse(s.Substring(i, 1))]);\r\n                }\r\n            }\r\n\r\n            return str.ToString();\r\n        }\r\n    }\r\n}\r\n</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Time Complexity: O(n) - for traversing the string</p>\r\n<p>Space Complexity: O(1)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/9be62224-a6e7-43a4-9850-dd4590e45021-q3.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"decrypt-string-from-alphabet-to-integer-mapping","tags":[{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"algorithm","slug":"algorithm"},{"name":"string","slug":"string"},{"name":"leetcode","slug":"leetcode"}],"recommendations":[{"id":1726,"title":"Maximum Swap - Array - Medium - LeetCode","imageUrl":"icon_16589057-204a-4929-8beb-ec745719515b.jpg","dateCreated":"2021-03-04T10:15:19.693Z","dateModified":"2021-03-04T10:16:54.289Z","contributedBy":"sumitc91","content":"Given a non-negative integer, you could swap two digits at most once to get the maximum valued number. Return the maximum valued number you could get.\nExample 1:<br />Input: 2736<br />Output: 7236<br />Explanation: Swap the number 2 and the number 7.<br />Example 2:<br />Input: 9973<br />O","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/16589057-204a-4929-8beb-ec745719515b.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"maximum-swap-array-medium-leetcode","total":0},{"id":1673,"title":"Minimum Size Subarray Sum - Array - Medium - LeetCode","imageUrl":"icon_9cd5847f-8b41-455d-8ac3-9b66f2dcb47e.jpg","dateCreated":"2020-11-18T09:07:17.833Z","dateModified":"2020-11-18T09:07:23.659Z","contributedBy":"sumitc91","content":"Given an array of n positive integers and a positive integer s, find the minimal length of a contiguous subarray of which the sum &ge; s. If there isn't one, return 0 instead.\nExample:&nbsp;\nInput: s = 7, nums = [2,3,1,2,4,3]<br />Output: 2<br />Explanation: the subarray [4,3] has t","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/9cd5847f-8b41-455d-8ac3-9b66f2dcb47e.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"minimum-size-subarray-sum-array-medium-leetcode","total":0},{"id":1662,"title":"Search in Rotated Sorted Array II - Array - Medium - LeetCode","imageUrl":"icon_f90b9cf1-f98d-483f-9cb6-f0ccc23c9c57.jpg","dateCreated":"2020-11-10T06:51:27.488Z","dateModified":"2020-11-10T06:51:33.729Z","contributedBy":"sumitc91","content":"Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.\n(i.e., [0,0,1,2,2,5,6] might become [2,5,6,0,0,1,2]).\nYou are given a target value to search. If found in the array return true, otherwise return false.\nExample 1:\nInput: num","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/f90b9cf1-f98d-483f-9cb6-f0ccc23c9c57.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"search-in-rotated-sorted-array-ii-array-medium-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}