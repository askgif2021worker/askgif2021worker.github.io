{"id":1280,"title":"Maximum Number of Balloons","imageUrl":"d10cc017-7b99-4b71-b1da-5e9d6793db5d-prog.jpg","dateCreated":"2020-05-03T18:43:40.939Z","dateModified":"2020-05-03T18:43:59.551Z","contributedBy":"AskGif","content":"<p>Given a string text, you want to use the characters of text to form as many instances of the word \"balloon\" as possible.</p>\r\n<p>You can use each character in text at most once. Return the maximum number of instances that can be formed.</p>\r\n<p>&nbsp;</p>\r\n<p>Example 1:</p>\r\n<pre class=\"language-markup\"><code>Input: text = \"nlaebolko\"\r\n\r\nOutput: 1</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Example 2:</p>\r\n<pre class=\"language-markup\"><code>Input: text = \"loonbalxballpoon\"\r\n\r\nOutput: 2</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Example 3:</p>\r\n<pre class=\"language-markup\"><code>Input: text = \"leetcode\"\r\n\r\nOutput: 0</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Constraints:</p>\r\n<pre class=\"language-markup\"><code>1 &lt;= text.length &lt;= 10^4\r\n\r\ntext consists of lower case English letters only.</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Solution:</p>\r\n<pre class=\"language-csharp\"><code>using System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace LeetCode.AskGif.Easy.String\r\n{\r\n    class MaxNumberOfBalloonsSln\r\n    {\r\n        public void execute()\r\n        {\r\n            var res = MaxNumberOfBalloons(\"leetcode\");\r\n        }\r\n\r\n        public int MaxNumberOfBalloons(string text)\r\n        {\r\n            var dict = new Dictionary&lt;char, int&gt;();\r\n            char[] word = new char[] {'b', 'a', 'l', 'l', 'o', 'o', 'n' };\r\n            foreach (var ch in text)\r\n            {\r\n                if(dict.ContainsKey(ch))\r\n                {\r\n                    dict[ch]++;\r\n                }\r\n                else\r\n                {\r\n                    dict[ch] = 1;\r\n                }\r\n            }\r\n\r\n            int min = Int16.MaxValue;\r\n\r\n            //since l and o appear twice, lets divide it by two in dictionary if they exists\r\n            if(dict.ContainsKey('l'))\r\n                dict['l'] = dict['l'] / 2;\r\n            if (dict.ContainsKey('o'))\r\n                dict['o'] = dict['o'] / 2;\r\n\r\n            foreach (var ch in word)\r\n            {\r\n                if (dict.ContainsKey(ch))\r\n                {\r\n                    if(dict[ch]&lt;min)\r\n                    {\r\n                        min = dict[ch];\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    return 0;\r\n                }\r\n            }\r\n\r\n            return min;\r\n        }\r\n    }\r\n}\r\n</code></pre>\r\n<p>Time Complexity: O(n)</p>\r\n<p>Space Complexity: O(n)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/d10cc017-7b99-4b71-b1da-5e9d6793db5d-prog.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"maximum-number-of-balloons","tags":[{"name":"leetcode","slug":"leetcode"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"algorithm","slug":"algorithm"},{"name":"string","slug":"string"},{"name":"आसान","slug":"easy"}],"recommendations":[{"id":1726,"title":"Maximum Swap - Array - Medium - LeetCode","imageUrl":"icon_16589057-204a-4929-8beb-ec745719515b.jpg","dateCreated":"2021-03-04T10:15:19.693Z","dateModified":"2021-03-04T10:16:54.289Z","contributedBy":"sumitc91","content":"Given a non-negative integer, you could swap two digits at most once to get the maximum valued number. Return the maximum valued number you could get.\nExample 1:<br />Input: 2736<br />Output: 7236<br />Explanation: Swap the number 2 and the number 7.<br />Example 2:<br />Input: 9973<br />O","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/16589057-204a-4929-8beb-ec745719515b.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"maximum-swap-array-medium-leetcode","total":0},{"id":1664,"title":"Design an Ordered Stream - Array - Easy - LeetCode","imageUrl":"icon_ee2c2f78-fadb-4eec-b972-5425cc0c84b8.jpg","dateCreated":"2020-11-16T03:10:10.642Z","dateModified":"2020-11-16T03:10:15.886Z","contributedBy":"sumitc91","content":"There are n (id, value) pairs, where id is an integer between 1 and n and value is a string. No two pairs have the same id.\nDesign a stream that takes the n pairs in an arbitrary order, and returns the values over several calls in increasing order of their ids.\nImplement the Ordered","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/ee2c2f78-fadb-4eec-b972-5425cc0c84b8.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"design-an-ordered-stream-array-easy-leetcode","total":0},{"id":1592,"title":"Increasing Order Search Tree - Tree - Easy - LeetCode","imageUrl":"icon_32836fb6-9705-48a7-be70-4bd66b1c621e.jpg","dateCreated":"2020-10-09T07:45:00.338Z","dateModified":"2020-10-09T07:45:33.127Z","contributedBy":"sumitc91","content":"Given a binary search tree, rearrange the tree in in-order so that the leftmost node in the tree is now the root of the tree, and every node has no left child and only 1 right child.\nExample 1:<br />Input: [5,3,6,2,4,null,8,1,null,null,null,7,9]\n&nbsp; &nbsp; &nbsp; &nbsp;5<br />&nb","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/32836fb6-9705-48a7-be70-4bd66b1c621e.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"increasing-order-search-tree-tree-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}