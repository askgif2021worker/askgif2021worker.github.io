{"id":1283,"title":"Greatest Common Divisor of Strings","imageUrl":"4eea03fb-c8a9-42d8-a39e-0b9c487b1801-q3.jpg","dateCreated":"2020-05-05T08:09:35.185Z","dateModified":"2020-05-05T08:10:04.298Z","contributedBy":"AskGif","content":"<p>For strings S and T, we say \"T divides S\" if and only if S = T + ... + T&nbsp; (T concatenated with itself 1 or more times)</p>\r\n<p>Return the largest string X such that X divides str1 and X divides str2.</p>\r\n<p>&nbsp;</p>\r\n<p>Example 1:</p>\r\n<pre class=\"language-markup\"><code>Input: str1 = \"ABCABC\", str2 = \"ABC\"\r\n\r\nOutput: \"ABC\"</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Example 2:</p>\r\n<pre class=\"language-markup\"><code>Input: str1 = \"ABABAB\", str2 = \"ABAB\"\r\n\r\nOutput: \"AB\"</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Example 3:</p>\r\n<pre class=\"language-markup\"><code>Input: str1 = \"LEET\", str2 = \"CODE\"\r\n\r\nOutput: \"\"</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Note:</p>\r\n<pre class=\"language-markup\"><code>1 &lt;= str1.length &lt;= 1000\r\n\r\n1 &lt;= str2.length &lt;= 1000\r\n\r\nstr1[i] and str2[i] are English uppercase letters.</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Solution:</p>\r\n<pre class=\"language-csharp\"><code>using System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace LeetCode.AskGif.Easy.String\r\n{\r\n    class GcdOfStringsSln\r\n    {\r\n        public void execute()\r\n        {\r\n            var str1 = \"ABABAB\";\r\n            var str2 = \"ABAB\";\r\n            var res = GcdOfStrings(str1, str2);\r\n        }\r\n\r\n        public string GcdOfStrings(string str1, string str2)\r\n        {\r\n            if (str1 + str2 != str2 + str1) return \"\";\r\n            if (str1 == str2) return str1;\r\n            int len1 = str1.Length;\r\n            int len2 = str2.Length;\r\n\r\n            while (len2 &gt; 0)\r\n            {\r\n                int temp = len2;\r\n                len2 = len1 % len2;\r\n                len1 = temp;\r\n            }\r\n\r\n            return str1.Substring(0, len1);\r\n        }\r\n    }\r\n}\r\n</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Time Complexity: O(m+n) where m and n are the lengths of the string.</p>\r\n<p>Space Complexity: O(1)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/4eea03fb-c8a9-42d8-a39e-0b9c487b1801-q3.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"greatest-common-divisor-of-strings","tags":[{"name":"euclidean","slug":"euclidean"},{"name":"आसान","slug":"easy"},{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"string","slug":"string"},{"name":"leetcode","slug":"leetcode"}],"recommendations":[{"id":1625,"title":"Print in Order - Multi Threading - Easy - LeetCode","imageUrl":"icon_3e17a90d-8d3d-4655-9ad5-34bee8157e21.jpg","dateCreated":"2020-10-18T04:04:15.138Z","dateModified":"2020-10-18T04:04:52.636Z","contributedBy":"sumitc91","content":"Suppose we have a class:\npublic class Foo {<br />&nbsp; public void first() { print(\"first\"); }<br />&nbsp; public void second() { print(\"second\"); }<br />&nbsp; public void third() { print(\"third\"); }<br />}<br />The same instance of Foo will be passed to three different threads. Thread A","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/3e17a90d-8d3d-4655-9ad5-34bee8157e21.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"multi-threading","slug":"multi-threading"}],"slug":"print-in-order-multi-threading-easy-leetcode","total":0},{"id":1607,"title":"Employees Earning More Than Their Managers - Sql - Easy - LeetCode","imageUrl":"icon_0a6cfc7c-14b2-43e5-8538-b4498ef0b5c3.jpg","dateCreated":"2020-10-16T06:26:34.794Z","dateModified":"2020-10-16T06:26:46.282Z","contributedBy":"sumitc91","content":"The Employee table holds all employees including their managers. Every employee has an Id, and there is also a column for the manager Id.\n+----+-------+--------+-----------+<br />| Id | Name &nbsp;| Salary | ManagerId |<br />+----+-------+--------+-----------+<br />| 1 &nbsp;| Joe &nbsp; |","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/0a6cfc7c-14b2-43e5-8538-b4498ef0b5c3.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"mysql","slug":"mysql"},{"name":"sql","slug":"sql"}],"slug":"employees-earning-more-than-their-managers-sql-easy-leetcode","total":0},{"id":1606,"title":"Combine Two Tables - Sql - Easy - LeetCode","imageUrl":"icon_88b1c8bf-74b6-45d3-8314-cbd4ac4ead29.jpg","dateCreated":"2020-10-16T05:53:11.599Z","dateModified":"2020-10-16T05:53:36.309Z","contributedBy":"sumitc91","content":"Write a SQL query for a report that provides the following information for each person in the Person table, regardless if there is an address for each of those people:\nTable: Person\n+-------------+---------+<br />| Column Name | Type &nbsp; &nbsp;|<br />+-------------+---------+<br ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/5b6e96ac-0881-4845-bd1a-6f2f1cbcf99e.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"mysql","slug":"mysql"},{"name":"sql","slug":"sql"}],"slug":"combine-two-tables-sql-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}