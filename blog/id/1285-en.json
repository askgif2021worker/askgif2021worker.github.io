{"id":1285,"title":"Unique Email Addresses","imageUrl":"0ca418f4-39d4-48b9-9452-a6c21c8c1214-q3.jpg","dateCreated":"2020-05-05T13:48:14.778Z","dateModified":"2020-05-05T13:48:56.884Z","contributedBy":"AskGif","content":"<p>Every email consists of a local name and a domain name, separated by the @ sign.</p>\r\n<p>For example, in alice@leetcode.com, alice is the local name, and leetcode.com is the domain name.</p>\r\n<p>Besides lowercase letters, these emails may contain '.'s or '+'s.</p>\r\n<p>If you add periods ('.') between some characters in the local name part of an email address, mail sent there will be forwarded to the same address without dots in the local name.&nbsp; For example, \"alice.z@leetcode.com\" and \"alicez@leetcode.com\" forward to the same email address.&nbsp; (Note that this rule does not apply for domain names.)</p>\r\n<p>If you add a plus ('+') in the local name, everything after the first plus sign will be ignored. This allows certain emails to be filtered, for example m.y+name@email.com will be forwarded to my@email.com.&nbsp; (Again, this rule does not apply for domain names.)</p>\r\n<p>It is possible to use both of these rules at the same time.</p>\r\n<p>Given a list of emails, we send one email to each address in the list.&nbsp; How many different addresses actually receive mails?&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>Example 1:</p>\r\n<pre class=\"language-markup\"><code>Input: [\"test.email+alex@leetcode.com\",\"test.e.mail+bob.cathy@leetcode.com\",\"testemail+david@lee.tcode.com\"]\r\n\r\nOutput: 2\r\n\r\nExplanation: \"testemail@leetcode.com\" and \"testemail@lee.tcode.com\" actually receive mails</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Note:</p>\r\n<pre class=\"language-markup\"><code>1 &lt;= emails[i].length &lt;= 100\r\n\r\n1 &lt;= emails.length &lt;= 100\r\n\r\nEach emails[i] contains exactly one '@' character.\r\n\r\nAll local and domain names are non-empty.\r\n\r\nLocal names do not start with a '+' character.</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Solution:</p>\r\n<pre class=\"language-csharp\"><code>using System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace LeetCode.AskGif.Easy.String\r\n{\r\n    class NumUniqueEmailsSoln\r\n    {\r\n        public void execute()\r\n        {\r\n            var input = new string[] { \r\n                \"test.email+alex@leetcode.com\", \r\n                \"test.e.mail+bob.cathy@leetcode.com\", \r\n                \"testemail+david@lee.tcode.com\"\r\n            };\r\n            var res = NumUniqueEmails(input);\r\n        }\r\n\r\n        public int NumUniqueEmails(string[] emails)\r\n        {\r\n            var set = new HashSet&lt;string&gt;();\r\n            for (int i = 0; i &lt; emails.Length; i++)\r\n            {\r\n                set.Add(ReturnUniqueEmail(emails[i]));\r\n            }\r\n            return set.Count;\r\n        }\r\n\r\n        private string ReturnUniqueEmail(string email)\r\n        {\r\n            var split = email.Split(\"@\");\r\n            var local = split[0];\r\n            //ignore everything after +\r\n            local = local.Split('+')[0];\r\n\r\n            //remove all dots (.)\r\n            local = local.Replace(\".\", \"\");\r\n            return local + \"@\" + split[1];\r\n        }\r\n    }\r\n}\r\n</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Time Complexity: O(n)</p>\r\n<p>Space Complexity: O(n)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/0ca418f4-39d4-48b9-9452-a6c21c8c1214-q3.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"unique-email-addresses","tags":[{"name":"string","slug":"string"},{"name":"leetcode","slug":"leetcode"},{"name":"easy","slug":"easy"},{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"}],"recommendations":[{"id":1713,"title":"Reformat Phone Number - String - Easy - LeetCode","imageUrl":"icon_716c7816-48e6-45e6-840e-df068e41c6f6.jpg","dateCreated":"2021-01-05T04:21:52.889Z","dateModified":"2021-01-05T04:22:00.273Z","contributedBy":"sumitc91","content":"You are given a phone number as a string number. number consists of digits, spaces ' ', and/or dashes '-'.\nYou would like to reformat the phone number in a certain manner. Firstly, remove all spaces and dashes. Then, group the digits from left to right into blocks of length 3 until there a","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/716c7816-48e6-45e6-840e-df068e41c6f6.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"string","slug":"string"}],"slug":"reformat-phone-number-string-easy-leetcode","total":0},{"id":1669,"title":"Maximum Product Subarray - Array - Medium - LeetCode","imageUrl":"icon_7f1afad0-6986-4b75-b8b1-48cc2da5b308.jpg","dateCreated":"2020-11-17T12:27:09.279Z","dateModified":"2020-11-17T12:27:13.842Z","contributedBy":"sumitc91","content":"Given an integer array nums, find the contiguous subarray within an array (containing at least one number) which has the largest product.\nExample 1:\nInput: [2,3,-2,4]<br />Output: 6<br />Explanation: [2,3] has the largest product 6.<br />Example 2:\nInput: [-2,0,-1]<br />Outpu","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/7f1afad0-6986-4b75-b8b1-48cc2da5b308.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"maximum-product-subarray-array-medium-leetcode","total":0},{"id":1638,"title":"Next Permutation - Array - Medium - LeetCode","imageUrl":"icon_467cc3d1-390e-4bc6-a589-9f2b2a7b6f67.jpg","dateCreated":"2020-10-24T11:58:46.632Z","dateModified":"2020-10-24T11:59:00.039Z","contributedBy":"sumitc91","content":"Implement next permutation, which rearranges numbers into the lexicographically next greater permutation of numbers.\nIf such an arrangement is not possible, it must rearrange it as the lowest possible order (i.e., sorted in ascending order).\nThe replacement must be in place and use ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/467cc3d1-390e-4bc6-a589-9f2b2a7b6f67.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"next-permutation-array-medium-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}