{"id":1287,"title":"Reverse Only Letters","imageUrl":"0a413f06-ad44-46c4-9e39-191c265874fc-q3.jpg","dateCreated":"2020-05-06T12:35:08.572Z","dateModified":"2020-05-06T12:35:32.187Z","contributedBy":"AskGif","content":"<p>Given a string S, return the \"reversed\" string where all characters that are not a letter stay in the same place, and all letters reverse their positions.</p>\r\n<p>&nbsp;</p>\r\n<p>Example 1:</p>\r\n<pre class=\"language-markup\"><code>Input: \"ab-cd\"\r\n\r\nOutput: \"dc-ba\"</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Example 2:</p>\r\n<pre class=\"language-markup\"><code>Input: \"a-bC-dEf-ghIj\"\r\n\r\nOutput: \"j-Ih-gfE-dCba\"</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Example 3:</p>\r\n<pre class=\"language-markup\"><code>Input: \"Test1ng-Leet=code-Q!\"\r\n\r\nOutput: \"Qedo1ct-eeLg=ntse-T!\"</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Note:</p>\r\n<pre class=\"language-markup\"><code>S.length &lt;= 100\r\n\r\n33 &lt;= S[i].ASCIIcode &lt;= 122 \r\n\r\nS doesn't contain \\ or \"</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Solution:</p>\r\n<pre class=\"language-csharp\"><code>using System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace LeetCode.AskGif.Easy.String\r\n{\r\n    class ReverseOnlyLettersSoln\r\n    {\r\n        public void execute()\r\n        {            \r\n            var res = ReverseOnlyLetters(\"a-bC-dEf-ghIj\");\r\n        }\r\n\r\n        public string ReverseOnlyLetters(string S)\r\n        {\r\n            char[] str = new char[S.Length];\r\n            for (int i = 0, j = S.Length-1; i &lt; S.Length;)\r\n            {\r\n                if (IsLetter(S[i]) &amp;&amp; IsLetter(S[j]))\r\n                {\r\n                    str[i] = S[j];\r\n                    i++;\r\n                    j--;\r\n                }\r\n                else if (!IsLetter(S[i]))\r\n                {\r\n                    str[i] = S[i];\r\n                    i++;\r\n                }\r\n                else if (!IsLetter(S[j]))\r\n                {\r\n                    j--;\r\n                }\r\n            }\r\n\r\n            return new string(str);\r\n        }\r\n\r\n        private bool IsLetter(char v)\r\n        {\r\n            return (v &gt;= 97 &amp;&amp; v &lt;= 122) || (v &gt;= 65 &amp;&amp; v &lt;= 90);\r\n        }\r\n    }\r\n}\r\n</code></pre>\r\n<p>Time Complexity: O(n)</p>\r\n<p>Space Complexity: O(n)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/0a413f06-ad44-46c4-9e39-191c265874fc-q3.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"reverse-only-letters","tags":[{"name":"leetcode","slug":"leetcode"},{"name":"data-structure","slug":"data-structure"},{"name":"string","slug":"string"},{"name":"easy","slug":"easy"},{"name":"algorithm","slug":"algorithm"}],"recommendations":[{"id":1668,"title":"Triangle - Array - Medium - LeetCode","imageUrl":"icon_40571e99-73c8-48d0-aa94-4a53cb2adbce.jpg","dateCreated":"2020-11-17T12:18:25.997Z","dateModified":"2020-11-17T12:18:30.576Z","contributedBy":"sumitc91","content":"Given a triangle, find the minimum path sum from top to bottom. Each step you may move to adjacent numbers on the row below.\nFor example, given the following triangle\n[<br />&nbsp; &nbsp; &nbsp;[2],<br />&nbsp; &nbsp; [3,4],<br />&nbsp; &nbsp;[6,5,7],<br />&nbsp; [4,1,8,3]<br />]<br","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/40571e99-73c8-48d0-aa94-4a53cb2adbce.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"triangle-array-medium-leetcode","total":0},{"id":1653,"title":"Set Matrix Zeroes - Array - Medium - LeetCode","imageUrl":"icon_42006195-6b88-4b4d-a2d3-c695139d16b7.jpg","dateCreated":"2020-10-31T09:17:26.973Z","dateModified":"2020-10-31T09:17:33.085Z","contributedBy":"sumitc91","content":"Given an m x n matrix. If an element is 0, set its entire row and column to 0. Do it in-place.\nFollow up:\nA straight forward solution using O(mn) space is probably a bad idea.<br />A simple improvement uses O(m + n) space, but still not the best solution.<br />Could you devise a con","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/42006195-6b88-4b4d-a2d3-c695139d16b7.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"set-matrix-zeroes-array-medium-leetcode","total":0},{"id":1652,"title":"Minimum Path Sum - Array - Medium - LeetCode","imageUrl":"icon_d9f5ff7a-791f-41b0-89b0-f12760706d99.jpg","dateCreated":"2020-10-31T09:04:08.041Z","dateModified":"2020-10-31T09:04:16.725Z","contributedBy":"sumitc91","content":"Given a m x n grid filled with non-negative numbers, find a path from top left to bottom right which minimizes the sum of all numbers along its path.\nNote: You can only move either down or right at any point in time.\nExample:\nInput:<br />[<br />&nbsp; [1,3,1],<br />&nbsp; [1,","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/d9f5ff7a-791f-41b0-89b0-f12760706d99.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"minimum-path-sum-array-medium-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}