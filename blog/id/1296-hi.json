{"id":1296,"title":"Valid Palindrome II","imageUrl":"e38ac653-0e88-46b9-9776-7d2113d4687a-q3.jpg","dateCreated":"2020-05-11T08:26:48.606Z","dateModified":"2020-05-11T08:27:03.261Z","contributedBy":"AskGif","content":"<p>Given a non-empty string s, you may delete at most one character. Judge whether you can make it a palindrome.</p>\r\n<p>&nbsp;</p>\r\n<p>Example 1:</p>\r\n<pre class=\"language-markup\"><code>Input: \"aba\"\r\n\r\nOutput: True</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Example 2:</p>\r\n<pre class=\"language-markup\"><code>Input: \"abca\"\r\n\r\nOutput: True\r\n\r\nExplanation: You could delete the character 'c'.</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Note:</p>\r\n<pre class=\"language-markup\"><code>The string will only contain lowercase characters a-z. The maximum length of the string is 50000.</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Solution:</p>\r\n<pre class=\"language-csharp\"><code>using System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace LeetCode.AskGif.Easy.String\r\n{\r\n    public class ValidPalindromeSoln\r\n    {\r\n        public bool ValidPalindrome(string s)\r\n        {\r\n            int diff = 0;\r\n            for (int i = 0, j= s.Length-1; i &lt; j;)\r\n            {\r\n                if (s[i] == s[j])\r\n                {\r\n                    i++;\r\n                    j--;\r\n                }\r\n                else\r\n                {\r\n                    return IsValid(s.Substring(i, j - i)) || IsValid(s.Substring(i + 1, j-i));\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n\r\n        private bool IsValid(string v)\r\n        {\r\n            for (int i = 0, j = v.Length-1; i &lt; j; i++,j--)\r\n            {\r\n                if (v[i] != v[j])\r\n                    return false;\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n}\r\n</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Time Complexity: O(n)</p>\r\n<p>Space Complexity: O(1)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/e38ac653-0e88-46b9-9776-7d2113d4687a-q3.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"valid-palindrome-ii","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"string","slug":"string"},{"name":"leetcode","slug":"leetcode"},{"name":"आसान","slug":"easy"}],"recommendations":[{"id":1721,"title":"Find the Highest Altitude - Array - Easy - LeetCode","imageUrl":"icon_0cd60e05-bb63-481c-ac68-c3417eabb1cb.jpg","dateCreated":"2021-01-26T09:15:18.731Z","dateModified":"2021-01-26T09:15:23.937Z","contributedBy":"sumitc91","content":"There is a biker going on a road trip. The road trip consists of n + 1 points at different altitudes. The biker starts his trip on point 0 with altitude equal 0.\nYou are given an integer array gain of length n where gain[i] is the net gain in altitude between points i​​​​​​ and i + 1 for a","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/0cd60e05-bb63-481c-ac68-c3417eabb1cb.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"find-the-highest-altitude-array-easy-leetcode","total":0},{"id":1715,"title":"Determine if String Halves Are Alike - String - Easy - LeetCode","imageUrl":"icon_8d5b87e0-0bd8-47c9-8f55-cfff94e5858d.jpg","dateCreated":"2021-01-08T09:24:14.63Z","dateModified":"2021-01-08T09:24:20.084Z","contributedBy":"sumitc91","content":"You are given a string s of even length. Split this string into two halves of equal lengths, and let a be the first half and b be the second half.\nTwo strings are alike if they have the same number of vowels ('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'). Notice that s contains upperca","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/8d5b87e0-0bd8-47c9-8f55-cfff94e5858d.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"string","slug":"string"}],"slug":"determine-if-string-halves-are-alike-string-easy-leetcode","total":0},{"id":1659,"title":"बढ़ती आवृत्ति द्वारा क्रमबद्ध सरणी - सरणी - मध्यम - LeetCode","imageUrl":"icon_0607b46b-96fe-470e-a316-ee8bf5aeee8e.jpg","dateCreated":"2020-11-03T05:02:58.417Z","dateModified":"2020-11-03T05:10:52.862Z","contributedBy":"sumitc91","content":"Given an array of integers nums, sort the array in increasing order based on the frequency of the values. If multiple values have the same frequency, sort them in decreasing order.\nReturn the sorted array.\n&nbsp;\nExample 1:\nInput: nums = [1,1,2,2,2,3]<br />Output: [3,1","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/0607b46b-96fe-470e-a316-ee8bf5aeee8e.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"sort-array-by-increasing-frequency-array-medium-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}