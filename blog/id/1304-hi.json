{"id":1304,"title":"Student Attendance Record I","imageUrl":"23658f8c-7957-4dd2-8aa8-c9e2196bbcad-q3.jpg","dateCreated":"2020-05-11T14:22:55.838Z","dateModified":"2020-05-11T14:23:33.207Z","contributedBy":"AskGif","content":"<p>You are given a string representing an attendance record for a student. The record only contains the following three characters:</p>\r\n<p>'A' : Absent.</p>\r\n<p>'L': Late.</p>\r\n<p>'P' : Present.</p>\r\n<p>A student could be rewarded if his attendance record doesn't contain more than one 'A' (absent) or more than two continuous 'L' (late).</p>\r\n<p>You need to return whether the student could be rewarded according to his attendance record.</p>\r\n<p>&nbsp;</p>\r\n<p>Example 1:</p>\r\n<pre class=\"language-markup\"><code>Input: \"PPALLP\"\r\n\r\nOutput: True\r\n\r\n</code></pre>\r\n<p>Example 2:</p>\r\n<pre class=\"language-markup\"><code>Input: \"PPALLL\"\r\n\r\nOutput: False</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Solution:</p>\r\n<pre class=\"language-csharp\"><code>using System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace LeetCode.AskGif.Easy.String\r\n{\r\n    public class CheckRecordSoln\r\n    {\r\n        public bool CheckRecord(string s)\r\n        {\r\n            int absent = 0;            \r\n            for (int i = 0; i &lt; s.Length; i++)\r\n            {\r\n                if(s[i] == 'A')\r\n                {\r\n                    absent++;\r\n                }\r\n                else\r\n                {\r\n                    if (i &lt; s.Length - 2)\r\n                    {\r\n                        if(s[i] == 'L' &amp;&amp; s[i+1] == 'L' &amp;&amp; s[i+2] == 'L')\r\n                        {\r\n                            return false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return absent &lt;= 1;\r\n        }\r\n    }\r\n}\r\n</code></pre>\r\n<p>Time Complexity: O(n)</p>\r\n<p>Space Complexity: O(1)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/23658f8c-7957-4dd2-8aa8-c9e2196bbcad-q3.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"student-attendance-record-i","tags":[{"name":"leetcode","slug":"leetcode"},{"name":"string","slug":"string"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"algorithm","slug":"algorithm"},{"name":"आसान","slug":"easy"}],"recommendations":[{"id":1648,"title":"Insert Interval - Array - Medium - LeetCode","imageUrl":"icon_5a35d970-95af-493c-9aca-0b4bed037719.jpg","dateCreated":"2020-10-31T06:40:08.43Z","dateModified":"2020-10-31T06:40:18.214Z","contributedBy":"sumitc91","content":"Given a set of non-overlapping intervals, insert a new interval into the intervals (merge if necessary).\nYou may assume that the intervals were initially sorted according to their start times.\n&nbsp;\nExample 1:\nInput: intervals = [[1,3],[6,9]], newInterval = [2,5]<br /","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/5a35d970-95af-493c-9aca-0b4bed037719.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"insert-interval-array-medium-leetcode","total":0},{"id":1632,"title":"Container With Most Water - Array - Medium - LeetCode","imageUrl":"icon_fc25ea42-813c-4de4-be8b-eb874d415c58.jpg","dateCreated":"2020-10-18T15:53:55.445Z","dateModified":"2020-10-18T15:54:07.342Z","contributedBy":"sumitc91","content":"Given n non-negative integers a1, a2, ..., an , where each represents a point at coordinate (i, ai). n vertical lines are drawn such that the two endpoints of line i is at (i, ai) and (i, 0). Find two lines, which, together with the x-axis forms a container, such that the container contains the m","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/fc25ea42-813c-4de4-be8b-eb874d415c58.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"container-with-most-water-array-medium-leetcode","total":0},{"id":1600,"title":"Design Parking System - Design - Easy - LeetCode","imageUrl":"icon_2c48fcf9-50ff-4bd1-9d59-5a5807a0e9ab.jpg","dateCreated":"2020-10-15T05:28:49.957Z","dateModified":"2020-10-15T05:49:22.82Z","contributedBy":"sumitc91","content":"Design a parking system for a parking lot. The parking lot has three kinds of parking spaces: big, medium, and small, with a fixed number of slots for each size.\nImplement the ParkingSystem class:\nParkingSystem(int big, int medium, int small) Initializes object of the ParkingSystem ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/2c48fcf9-50ff-4bd1-9d59-5a5807a0e9ab.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"डिज़ाइन","slug":"design"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"design-parking-system-design-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}