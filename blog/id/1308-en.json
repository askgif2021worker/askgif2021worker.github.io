{"id":1308,"title":"Detect Capital","imageUrl":"0d288d6f-a8e0-4be1-96e1-e945c388e72a-q3.jpg","dateCreated":"2020-05-15T12:22:00.353Z","dateModified":"2020-05-16T11:17:30.692Z","contributedBy":"AskGif","content":"<p>Given a word, you need to judge whether the usage of capitals in it is right or not.</p>\r\n<p>We define the usage of capitals in a word to be right when one of the following cases holds:</p>\r\n<p>All letters in this word are capitals, like \"USA\".</p>\r\n<p>All letters in this word are not capitals, like \"leetcode\".</p>\r\n<p>Only the first letter in this word is capital, like \"Google\".</p>\r\n<p>Otherwise, we define that this word doesn't use capitals in a right way.</p>\r\n<p>&nbsp;</p>\r\n<p>Example 1:</p>\r\n<pre class=\"language-markup\"><code>Input: \"USA\"\r\n\r\nOutput: True</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Example 2:</p>\r\n<pre class=\"language-markup\"><code>Input: \"FlaG\"\r\n\r\nOutput: False</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Note: The input will be a non-empty word consisting of uppercase and lowercase latin letters.</p>\r\n<p>Accepted</p>\r\n<p>&nbsp;</p>\r\n<p>Solution:</p>\r\n<pre class=\"language-csharp\"><code>using System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace LeetCode.AskGif.Easy.String\r\n{\r\n    public class DetectCapitalUseSoln\r\n    {\r\n        public bool DetectCapitalUse(string word)\r\n        {\r\n            var lower = 0;\r\n            var upper = 0;\r\n            for (int i = 0; i &lt; word.Length; i++)\r\n            {\r\n                if (IsUpper(word[i]))\r\n                {\r\n                    upper++;\r\n                }\r\n                else\r\n                {\r\n                    lower++;\r\n                }\r\n            }\r\n\r\n            if (upper == 1 &amp;&amp; IsUpper(word[0]))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            return lower == 0 || upper == 0;\r\n        }\r\n\r\n        private bool IsUpper(char v)\r\n        {\r\n            if (v &gt;= 65 &amp;&amp; v &lt;= 90)\r\n                return true;\r\n            return false;\r\n        }\r\n    }\r\n}\r\n</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Time Complexity: O(n)</p>\r\n<p>Space Complexity: O(1)</p>\r\n<p>&nbsp;</p>\r\n<p>Test Case:&nbsp;</p>\r\n<pre class=\"language-csharp\"><code>using LeetCode.AskGif.Easy.String;\r\nusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace CodingUnitTest.Easy.String\r\n{\r\n    [TestClass]\r\n    public class DetectCapitalUseSolnTests\r\n    {\r\n        [TestMethod]\r\n        public void DetectCapitalUseSoln_First()\r\n        {\r\n            var a = \"USA\";            \r\n            var output = true;\r\n            var res = new DetectCapitalUseSoln().DetectCapitalUse(a);\r\n\r\n            Assert.AreEqual(res, output);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void DetectCapitalUseSoln_Second()\r\n        {\r\n            var a = \"FlaG\";\r\n            var output = false;\r\n            var res = new DetectCapitalUseSoln().DetectCapitalUse(a);\r\n\r\n            Assert.AreEqual(res, output);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void DetectCapitalUseSoln_Third()\r\n        {\r\n            var a = \"leetcode\";\r\n            var output = true;\r\n            var res = new DetectCapitalUseSoln().DetectCapitalUse(a);\r\n\r\n            Assert.AreEqual(res, output);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void DetectCapitalUseSoln_Fourth()\r\n        {\r\n            var a = \"Google\";\r\n            var output = true;\r\n            var res = new DetectCapitalUseSoln().DetectCapitalUse(a);\r\n\r\n            Assert.AreEqual(res, output);\r\n        }\r\n    }\r\n}\r\n</code></pre>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/0d288d6f-a8e0-4be1-96e1-e945c388e72a-q3.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"detect-capital","tags":[{"name":"leetcode","slug":"leetcode"},{"name":"data-structure","slug":"data-structure"},{"name":"string","slug":"string"},{"name":"algorithm","slug":"algorithm"},{"name":"easy","slug":"easy"}],"recommendations":[{"id":1727,"title":"Check if Array Is Sorted and Rotated - Array - Easy - LeetCode","imageUrl":"icon_2110d383-81cb-448a-8e4f-3773ff37294d.jpg","dateCreated":"2021-03-31T05:53:14.382Z","dateModified":"2021-03-31T05:53:27.431Z","contributedBy":"sumitc91","content":"Given an array nums, return true if the array was originally sorted in non-decreasing order, then rotated some number of positions (including zero). Otherwise, return false.\nThere may be duplicates in the original array.\nNote: An array A rotated by x positions results in an array B ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/2110d383-81cb-448a-8e4f-3773ff37294d.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"check-if-array-is-sorted-and-rotated-array-easy-leetcode","total":0},{"id":1709,"title":"Goal Parser Interpretation - String - Easy - LeetCode","imageUrl":"icon_1a301e38-c33f-42ee-b91b-84f1471554f8.jpg","dateCreated":"2020-12-07T04:02:11.892Z","dateModified":"2020-12-07T04:02:17.242Z","contributedBy":"sumitc91","content":"You own a Goal Parser that can interpret a string command. The command consists of an alphabet of \"G\", \"()\" and/or \"(al)\" in some order. The Goal Parser will interpret \"G\" as the string \"G\", \"()\" as the string \"o\", and \"(al)\" as the string \"al\". The interpreted strings are then concatenated in th","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/1a301e38-c33f-42ee-b91b-84f1471554f8.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"string","slug":"string"}],"slug":"goal-parser-interpretation-string-easy-leetcode","total":0},{"id":1593,"title":"Range Sum of BST - Tree - Easy - LeetCode","imageUrl":"icon_2d446765-9ada-4072-93c3-eedfb56f7794.jpg","dateCreated":"2020-10-09T08:49:41.585Z","dateModified":"2020-10-09T08:49:55.954Z","contributedBy":"sumitc91","content":"Given the root node of a binary search tree, return the sum of values of all nodes with value between L and R (inclusive).\nThe binary search tree is guaranteed to have unique values.\n&nbsp;\nExample 1:\nInput: root = [10,5,15,3,7,null,18], L = 7, R = 15<br />Output: 32<b","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/2d446765-9ada-4072-93c3-eedfb56f7794.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"range-sum-of-bst-tree-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}