{"id":1311,"title":"String Compression","imageUrl":"dca61cdd-a186-46ce-bdee-60a1e2febdd4-q3.jpg","dateCreated":"2020-05-21T16:38:51.76Z","dateModified":"2020-05-21T16:39:04.845Z","contributedBy":"AskGif","content":"<p>Given an array of characters, compress it in-place.</p>\r\n<p>The length after compression must always be smaller than or equal to the original array.</p>\r\n<p>Every element of the array should be a character (not int) of length 1.</p>\r\n<p>After you are done modifying the input array in-place, return the new length of the array.</p>\r\n<p>&nbsp;</p>\r\n<p>Follow up:</p>\r\n<p>Could you solve it using only O(1) extra space?</p>\r\n<p>&nbsp;</p>\r\n<p>Example 1:</p>\r\n<pre class=\"language-markup\"><code>Input:\r\n\r\n[\"a\",\"a\",\"b\",\"b\",\"c\",\"c\",\"c\"]\r\n\r\nOutput:\r\n\r\nReturn 6, and the first 6 characters of the input array should be: [\"a\",\"2\",\"b\",\"2\",\"c\",\"3\"]\r\n\r\nExplanation:\r\n\r\n\"aa\" is replaced by \"a2\". \"bb\" is replaced by \"b2\". \"ccc\" is replaced by \"c3\".</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Example 2:</p>\r\n<pre class=\"language-markup\"><code>Input:\r\n\r\n[\"a\"]\r\n\r\nOutput:\r\n\r\nReturn 1, and the first 1 characters of the input array should be: [\"a\"]\r\n\r\nExplanation:\r\n\r\nNothing is replaced.</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Example 3:</p>\r\n<pre class=\"language-markup\"><code>Input:\r\n\r\n[\"a\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\"]\r\n\r\nOutput:\r\n\r\nReturn 4, and the first 4 characters of the input array should be: [\"a\",\"b\",\"1\",\"2\"].\r\n\r\nExplanation:\r\n\r\nSince the character \"a\" does not repeat, it is not compressed. \"bbbbbbbbbbbb\" is replaced by \"b12\".\r\n\r\nNotice each digit has its own entry in the array.</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Note:</p>\r\n<pre class=\"language-markup\"><code>All characters have an ASCII value in [35, 126].\r\n\r\n1 &lt;= len(chars) &lt;= 1000.</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Solution:</p>\r\n<pre class=\"language-csharp\"><code>using System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace LeetCode.AskGif.Easy.String\r\n{\r\n    public class CompressSoln\r\n    {\r\n        public int Compress(char[] chars)\r\n        {\r\n            if (chars==null)\r\n                return 0;\r\n            if (chars.Length == 1)\r\n                return 1;\r\n\r\n            int slow = 0;\r\n            int fast = 1;\r\n            int index = 0;\r\n            while(fast &lt;= chars.Length)\r\n            {\r\n                if ( fast &lt; chars.Length &amp;&amp; chars[slow] == chars[fast])\r\n                {\r\n                    fast++;\r\n                }\r\n                else if(fast == chars.Length)\r\n                {\r\n                    slow = UpdateSlowFastPointer(chars, slow, fast,ref index);\r\n                    break;\r\n                }\r\n                else\r\n                {\r\n                    slow = UpdateSlowFastPointer(chars, slow, fast,ref index);\r\n                }                \r\n            }\r\n\r\n            return index;\r\n        }\r\n\r\n        private static int UpdateSlowFastPointer(char[] chars, int slow, int fast,ref int index)\r\n        {\r\n            if (fast - slow == 1)\r\n            {\r\n                chars[index] = chars[slow];\r\n                if (chars.Length != fast)\r\n                {\r\n                    slow++;\r\n                }                \r\n            }\r\n            else\r\n            {\r\n                int diff = fast - slow;\r\n                var charArr = diff.ToString().ToCharArray();\r\n                chars[index] = chars[slow];\r\n                foreach (var item in charArr)\r\n                {                    \r\n                    index++;\r\n                    chars[index] = item;                    \r\n                }\r\n                slow=fast;                \r\n            }\r\n            index++;\r\n\r\n            return slow;\r\n        }\r\n    }\r\n}\r\n</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Time Complexity: O(n)</p>\r\n<p>Space Complexity: O(1)</p>\r\n<p>&nbsp;</p>\r\n<p>Test Cases:</p>\r\n<pre class=\"language-csharp\"><code>using LeetCode.AskGif.Easy.String;\r\nusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace CodingUnitTest.Easy.String\r\n{\r\n    [TestClass]\r\n    public class CompressSolnTests\r\n    {\r\n        [TestMethod]\r\n        public void RepeatedSubstringPatternSoln_First()\r\n        {\r\n            var input = new char[] { 'a', 'a', 'b', 'b', 'c', 'c', 'c' };\r\n            var output = 6;\r\n            var res = new CompressSoln().Compress(input);\r\n\r\n            Assert.AreEqual(res, output);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void RepeatedSubstringPatternSoln_Second()\r\n        {\r\n            var input = new char[] { 'a' };\r\n            var output = 1;\r\n            var res = new CompressSoln().Compress(input);\r\n\r\n            Assert.AreEqual(res, output);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void RepeatedSubstringPatternSoln_Third()\r\n        {\r\n            var input = new char[] { 'a', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b' };\r\n            var output = 4;\r\n            var res = new CompressSoln().Compress(input);\r\n\r\n            Assert.AreEqual(res, output);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void RepeatedSubstringPatternSoln_Fourth()\r\n        {\r\n            var input = new char[] {'a', 'a', 'a', 'b', 'b', 'a', 'a'};\r\n            var output = 6;\r\n            var res = new CompressSoln().Compress(input);\r\n\r\n            Assert.AreEqual(res, output);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void RepeatedSubstringPatternSoln_Fifth()\r\n        {\r\n            var input = new char[]{'a', 'a', 'a', 'a', 'a', 'b'};\r\n            var output = 3;\r\n            var res = new CompressSoln().Compress(input);\r\n\r\n            Assert.AreEqual(res, output);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void RepeatedSubstringPatternSoln_Sixth()\r\n        {\r\n            var input = new char[] {'a', 'a', 'a', 'a', 'b', 'a'};\r\n            var output = 4;\r\n            var res = new CompressSoln().Compress(input);\r\n\r\n            Assert.AreEqual(res, output);\r\n        }\r\n    }\r\n}\r\n</code></pre>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/dca61cdd-a186-46ce-bdee-60a1e2febdd4-q3.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"string-compression","tags":[{"name":"leetcode","slug":"leetcode"},{"name":"algorithm","slug":"algorithm"},{"name":"string","slug":"string"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"}],"recommendations":[{"id":1662,"title":"Search in Rotated Sorted Array II - Array - Medium - LeetCode","imageUrl":"icon_f90b9cf1-f98d-483f-9cb6-f0ccc23c9c57.jpg","dateCreated":"2020-11-10T06:51:27.488Z","dateModified":"2020-11-10T06:51:33.729Z","contributedBy":"sumitc91","content":"Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.\n(i.e., [0,0,1,2,2,5,6] might become [2,5,6,0,0,1,2]).\nYou are given a target value to search. If found in the array return true, otherwise return false.\nExample 1:\nInput: num","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/f90b9cf1-f98d-483f-9cb6-f0ccc23c9c57.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"search-in-rotated-sorted-array-ii-array-medium-leetcode","total":0},{"id":1604,"title":"Second Highest Salary - Sql - Easy - LeetCode","imageUrl":"icon_cbe876f9-f816-4e65-800b-bbc50dec92d4.jpg","dateCreated":"2020-10-16T06:01:26.855Z","dateModified":"2020-10-16T06:01:35.503Z","contributedBy":"sumitc91","content":"Write a SQL query to get the second highest salary from the Employee table.\n+----+--------+<br />| Id | Salary |<br />+----+--------+<br />| 1 &nbsp;| 100 &nbsp; &nbsp;|<br />| 2 &nbsp;| 200 &nbsp; &nbsp;|<br />| 3 &nbsp;| 300 &nbsp; &nbsp;|<br />+----+--------+<br />For example, given the","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/cbe876f9-f816-4e65-800b-bbc50dec92d4.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"mysql","slug":"mysql"},{"name":"sql","slug":"sql"}],"slug":"second-highest-salary-sql-easy-leetcode","total":0},{"id":1594,"title":"Univalued Binary Tree - Tree - Easy - LeetCode","imageUrl":"icon_932c5fe4-9686-4df3-9d52-28ee24f22cf5.jpg","dateCreated":"2020-10-09T08:57:56.154Z","dateModified":"2020-10-09T08:58:09.124Z","contributedBy":"sumitc91","content":"A binary tree is univalued if every node in the tree has the same value.\nReturn true if and only if the given tree is univalued.\n&nbsp;\nExample 1:\n<br />Input: [1,1,1,1,1,null,1]<br />Output: true<br />Example 2:\n<br />Input: [2,2,2,5,2]<br />Output: false<br />","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/932c5fe4-9686-4df3-9d52-28ee24f22cf5.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"univalued-binary-tree-tree-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}