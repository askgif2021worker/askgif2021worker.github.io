{"id":1312,"title":"Reverse String","imageUrl":"ff0f2d92-95b0-4efa-9c16-c691a4b5511e-q3.jpg","dateCreated":"2020-05-25T06:58:06.925Z","dateModified":"2020-05-25T06:58:21.49Z","contributedBy":"AskGif","content":"<p>Write a function that reverses a string. The input string is given as an array of characters char[].</p>\r\n<p>Do not allocate extra space for another array, you must do this by modifying the input array in-place with O(1) extra memory.</p>\r\n<p>You may assume all the characters consist of printable ASCII characters.</p>\r\n<p>&nbsp;</p>\r\n<p>Example 1:</p>\r\n<p>Input: [\"h\",\"e\",\"l\",\"l\",\"o\"]</p>\r\n<p>Output: [\"o\",\"l\",\"l\",\"e\",\"h\"]</p>\r\n<p>&nbsp;</p>\r\n<p>Example 2:</p>\r\n<p>Input: [\"H\",\"a\",\"n\",\"n\",\"a\",\"h\"]</p>\r\n<p>Output: [\"h\",\"a\",\"n\",\"n\",\"a\",\"H\"]</p>\r\n<p>&nbsp;</p>\r\n<p>Solution:</p>\r\n<pre class=\"language-csharp\"><code>using System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace LeetCode.AskGif.Easy.String\r\n{\r\n    public class ReverseStringSoln\r\n    {\r\n        public void ReverseString(ref char[] s)\r\n        {\r\n            for(int i=0, j = s.Length - 1; i &lt; j; i++, j--)\r\n            {\r\n                char temp = s[i];\r\n                s[i] = s[j];\r\n                s[j] = temp;\r\n            }\r\n        }\r\n    }\r\n}\r\n</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Time Complexity: O(n)</p>\r\n<p>Space Complexity: O(1)</p>\r\n<p>&nbsp;</p>\r\n<p>Unit Tests:</p>\r\n<pre class=\"language-csharp\"><code>using CodingUnitTest.Util;\r\nusing LeetCode.AskGif.Easy.String;\r\nusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace CodingUnitTest.Easy.String\r\n{    \r\n    [TestClass]\r\n    public class ReverseStringSolnTests\r\n    {\r\n        [TestMethod]\r\n        public void ReverseStringSoln_First()\r\n        {\r\n            var input = new char[] { 'h', 'e', 'l', 'l', 'o' };\r\n            var output = new char[]{'o', 'l', 'l', 'e', 'h'};\r\n            new ReverseStringSoln().ReverseString(ref input);\r\n\r\n            ContractAssert.AreEqual(input, output);\r\n        }\r\n    }\r\n}\r\n</code></pre>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/ff0f2d92-95b0-4efa-9c16-c691a4b5511e-q3.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"reverse-string","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"leetcode","slug":"leetcode"},{"name":"easy","slug":"easy"},{"name":"data-structure","slug":"data-structure"},{"name":"string","slug":"string"}],"recommendations":[{"id":1726,"title":"Maximum Swap - Array - Medium - LeetCode","imageUrl":"icon_16589057-204a-4929-8beb-ec745719515b.jpg","dateCreated":"2021-03-04T10:15:19.693Z","dateModified":"2021-03-04T10:16:54.289Z","contributedBy":"sumitc91","content":"Given a non-negative integer, you could swap two digits at most once to get the maximum valued number. Return the maximum valued number you could get.\nExample 1:<br />Input: 2736<br />Output: 7236<br />Explanation: Swap the number 2 and the number 7.<br />Example 2:<br />Input: 9973<br />O","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/16589057-204a-4929-8beb-ec745719515b.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"maximum-swap-array-medium-leetcode","total":0},{"id":1676,"title":"Product of Array Except Self - Array - Medium - LeetCode","imageUrl":"icon_454cf76b-ed84-4192-9a20-cb564088e9c1.jpg","dateCreated":"2020-11-18T12:44:47.018Z","dateModified":"2020-11-18T12:44:53.26Z","contributedBy":"sumitc91","content":"Given an array nums of n integers where n &gt; 1, &nbsp;return an array output such that output[i] is equal to the product of all the elements of nums except nums[i].\nExample:\nInput: &nbsp;[1,2,3,4]<br />Output: [24,12,8,6]<br />Constraint: It's guaranteed that the product of the el","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/454cf76b-ed84-4192-9a20-cb564088e9c1.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"product-of-array-except-self-array-medium-leetcode","total":0},{"id":1630,"title":"Mean of Array After Removing Some Elements - Array - Easy - LeetCode","imageUrl":"icon_9f50a4a2-b70b-453a-934d-064ef9684592.jpg","dateCreated":"2020-10-18T09:36:20.32Z","dateModified":"2020-10-18T09:36:35.59Z","contributedBy":"sumitc91","content":"1619. Mean of Array After Removing Some Elements<br />Easy\n30\n5\nAdd to List\nShare<br />Given an integer array arr, return the mean of the remaining integers after removing the smallest 5% and the largest 5% of the elements.\nAnswers within 10-5 of the actual answ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/9f50a4a2-b70b-453a-934d-064ef9684592.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"mean-of-array-after-removing-some-elements-array-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}