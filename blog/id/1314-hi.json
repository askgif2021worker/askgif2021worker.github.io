{"id":1314,"title":"Consecutive Characters","imageUrl":"27ae34b5-a24e-4c78-a9f8-819f317e7b67-q3.jpg","dateCreated":"2020-05-31T06:01:12.379Z","dateModified":"2020-05-31T06:01:25.529Z","contributedBy":"AskGif","content":"<p>Given a string s, the power of the string is the maximum length of a non-empty substring that contains only one unique character.</p>\r\n<p>Return the power of the string.</p>\r\n<p>&nbsp;</p>\r\n<p>Example 1:</p>\r\n<p>Input: s = \"leetcode\"</p>\r\n<p>Output: 2</p>\r\n<p>Explanation: The substring \"ee\" is of length 2 with the character 'e' only.</p>\r\n<p>&nbsp;</p>\r\n<p>Example 2:</p>\r\n<p>Input: s = \"abbcccddddeeeeedcba\"</p>\r\n<p>Output: 5</p>\r\n<p>Explanation: The substring \"eeeee\" is of length 5 with the character 'e' only.</p>\r\n<p>&nbsp;</p>\r\n<p>Example 3:</p>\r\n<p>Input: s = \"triplepillooooow\"</p>\r\n<p>Output: 5</p>\r\n<p>&nbsp;</p>\r\n<p>Example 4:</p>\r\n<p>Input: s = \"hooraaaaaaaaaaay\"</p>\r\n<p>Output: 11</p>\r\n<p>&nbsp;</p>\r\n<p>Example 5:</p>\r\n<p>Input: s = \"tourist\"</p>\r\n<p>Output: 1</p>\r\n<p>&nbsp;</p>\r\n<p>Constraints:</p>\r\n<p>1 &lt;= s.length &lt;= 500</p>\r\n<p>s contains only lowercase English letters.</p>\r\n<p>&nbsp;</p>\r\n<p>Solution:</p>\r\n<pre class=\"language-csharp\"><code>using System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace LeetCode.AskGif.Easy.String\r\n{\r\n    public class MaxPowerSoln\r\n    {\r\n        public int MaxPower(string s)\r\n        {\r\n            if (s.Length == 0) return 0;\r\n\r\n            int max = 1;\r\n            int count = 1;\r\n            for(int i=1; i&lt;s.Length; i++)\r\n            {\r\n                if (s[i - 1] == s[i])\r\n                {\r\n                    count++;\r\n                }\r\n                else\r\n                {\r\n                    if(count&gt;max)\r\n                    {\r\n                        max = count;\r\n                    }\r\n                    count = 1;\r\n                }\r\n            }\r\n\r\n            if (count &gt; max)\r\n            {\r\n                max = count;\r\n            }\r\n\r\n            return max;\r\n        }\r\n    }\r\n}\r\n</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Time Complexity: O(n)</p>\r\n<p>Space Complexity: O(1)</p>\r\n<p>&nbsp;</p>\r\n<p>Unit Tests:</p>\r\n<pre class=\"language-csharp\"><code>using LeetCode.AskGif.Easy.String;\r\nusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace CodingUnitTest.Easy.String\r\n{\r\n    [TestClass]\r\n    public class MaxPowerSolnTests\r\n    {\r\n        [TestMethod]\r\n        public void MaxPowerSoln_First()\r\n        {\r\n            var s = \"leetcode\";            \r\n            var output = 2;\r\n            var res = new MaxPowerSoln().MaxPower(s);\r\n\r\n            Assert.AreEqual(res, output);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void MaxPowerSoln_Second()\r\n        {\r\n            var s = \"abbcccddddeeeeedcba\";\r\n            var output = 5;\r\n            var res = new MaxPowerSoln().MaxPower(s);\r\n\r\n            Assert.AreEqual(res, output);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void MaxPowerSoln_Third()\r\n        {\r\n            var s = \"triplepillooooow\";\r\n            var output = 5;\r\n            var res = new MaxPowerSoln().MaxPower(s);\r\n\r\n            Assert.AreEqual(res, output);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void MaxPowerSoln_Fourth()\r\n        {\r\n            var s = \"hooraaaaaaaaaaay\";\r\n            var output = 11;\r\n            var res = new MaxPowerSoln().MaxPower(s);\r\n\r\n            Assert.AreEqual(res, output);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void MaxPowerSoln_Fifth()\r\n        {\r\n            var s = \"tourist\";\r\n            var output = 1;\r\n            var res = new MaxPowerSoln().MaxPower(s);\r\n\r\n            Assert.AreEqual(res, output);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void MaxPowerSoln_Sixth()\r\n        {\r\n            var s = \"cc\";\r\n            var output = 2;\r\n            var res = new MaxPowerSoln().MaxPower(s);\r\n\r\n            Assert.AreEqual(res, output);\r\n        }\r\n    }\r\n}\r\n</code></pre>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/27ae34b5-a24e-4c78-a9f8-819f317e7b67-q3.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"consecutive-characters","tags":[{"name":"string","slug":"string"},{"name":"algorithm","slug":"algorithm"},{"name":"आसान","slug":"easy"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"c-sharp","slug":"c-sharp"},{"name":"leetcode","slug":"leetcode"}],"recommendations":[{"id":1675,"title":"Majority Element II - Array - Medium - LeetCode","imageUrl":"icon_17b104bf-91b6-48b5-a7b8-2d58b5ba4b4e.jpg","dateCreated":"2020-11-18T12:22:28.829Z","dateModified":"2020-11-18T12:22:35.442Z","contributedBy":"sumitc91","content":"Given an integer array of size n, find all elements that appear more than &lfloor; n/3 &rfloor; times.\nFollow-up: Could you solve the problem in linear time and in O(1) space?\n&nbsp;\nExample 1:\nInput: nums = [3,2,3]<br />Output: [3]<br />Example 2:\nInput: nums =","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/17b104bf-91b6-48b5-a7b8-2d58b5ba4b4e.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"majority-element-ii-array-medium-leetcode","total":0},{"id":1667,"title":"Construct Binary Tree from Inorder and Postorder Traversal - Array - Medium - LeetCode","imageUrl":"icon_eeacf71f-bde9-47d7-bf9d-4f6212eb787e.jpg","dateCreated":"2020-11-17T10:15:10.097Z","dateModified":"2020-11-17T10:15:16.628Z","contributedBy":"sumitc91","content":"Given inorder and postorder traversal of a tree, construct the binary tree.\nNote:<br />You may assume that duplicates do not exist in the tree.\nFor example, given\ninorder = [9,3,15,20,7]<br />postorder = [9,15,7,20,3]<br />Return the following binary tree:\n&nbsp; &nbsp","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/eeacf71f-bde9-47d7-bf9d-4f6212eb787e.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"construct-binary-tree-from-inorder-and-postorder-traversal-array-medium-leetcode","total":0},{"id":1612,"title":"Delete Duplicate Emails - SQL - Easy - LeetCode","imageUrl":"icon_a8c368b1-ddbd-45ca-96b4-7558b7166a74.jpg","dateCreated":"2020-10-16T11:31:27.16Z","dateModified":"2020-10-16T11:31:37.404Z","contributedBy":"sumitc91","content":"Write a SQL query to delete all duplicate email entries in a table named Person, keeping only unique emails based on its smallest Id.\n+----+------------------+<br />| Id | Email &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />+----+------------------+<br />| 1 &nbsp;| john@example.com |<br","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a8c368b1-ddbd-45ca-96b4-7558b7166a74.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"mysql","slug":"mysql"},{"name":"sql","slug":"sql"}],"slug":"delete-duplicate-emails-sql-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}