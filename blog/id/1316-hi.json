{"id":1316,"title":"Add Strings","imageUrl":"aa48a98e-318a-4781-a71f-d662a241209a-q3.jpg","dateCreated":"2020-06-04T05:18:37.529Z","dateModified":"2020-06-04T05:19:03.505Z","contributedBy":"AskGif","content":"<p>Given two non-negative integers, num1 and num2 represented as a string, return the sum of num1 and num2.</p>\r\n<p>&nbsp;</p>\r\n<p>Note:</p>\r\n<p>The length of both num1 and num2 is &lt; 5100.</p>\r\n<p>Both num1 and num2 contains only digits 0-9.</p>\r\n<p>Both num1 and num2 does not contain any leading zero.</p>\r\n<p>You must not use any built-in BigInteger library or convert the inputs to integer directly.</p>\r\n<p>&nbsp;</p>\r\n<p>Solution:</p>\r\n<pre class=\"language-csharp\"><code>using System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Text;\r\n\r\nnamespace LeetCode.AskGif.Easy.String\r\n{\r\n    public class AddStringsSoln\r\n    {\r\n        public string AddStrings(string num1, string num2)\r\n        {\r\n            int len1 = num1.Length;\r\n            int len2 = num2.Length;\r\n            int diff = 0;\r\n            var diffStr = new StringBuilder();\r\n            if (len1 &gt; len2)\r\n            {\r\n                diff = len1 - len2;\r\n                for (int i = 0; i &lt; diff; i++)\r\n                {\r\n                    diffStr.Append(\"0\");\r\n                }\r\n                num2 = diffStr.ToString() + num2;\r\n            }\r\n            else\r\n            {\r\n                diff = len2 - len1;\r\n                for (int i = 0; i &lt; diff; i++)\r\n                {\r\n                    diffStr.Append(\"0\");\r\n                }\r\n                num1 = diffStr.ToString() + num1;\r\n            }\r\n\r\n            int carry = 0;\r\n            int val = 0;\r\n            var res = new StringBuilder();\r\n            for (int i = num1.Length-1; i &gt;= 0; i--)\r\n            {\r\n                int n = AsciiToNum(num1[i]) + AsciiToNum(num2[i]) + carry;\r\n                if (n &gt; 9)\r\n                {\r\n                    val = n % 10;\r\n                    res.Append(val.ToString());\r\n                    carry = n / 10;\r\n                }\r\n                else\r\n                {\r\n                    res.Append(n.ToString());\r\n                    carry = 0;\r\n                }\r\n            }\r\n            if (carry &gt; 0)\r\n            {\r\n                res.Append(carry);\r\n            }\r\n\r\n            return new string(res.ToString().Reverse().ToArray());            \r\n        }\r\n\r\n        private int AsciiToNum(char ch)\r\n        {\r\n            return ch - 48;\r\n        }\r\n\r\n    }\r\n}\r\n</code></pre>\r\n<p>Time Complexity: O(n)</p>\r\n<p>Space Complexity: O(n)</p>\r\n<p>&nbsp;</p>\r\n<p>Unit Tests:</p>\r\n<pre class=\"language-csharp\"><code>using LeetCode.AskGif.Easy.String;\r\nusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace CodingUnitTest.Easy.String\r\n{\r\n    [TestClass]\r\n    public class AddStringsSolnTests\r\n    {\r\n        [TestMethod]\r\n        public void AddStringsSoln_First()\r\n        {\r\n            var num1 = \"12\";\r\n            var num2 = \"18\";\r\n            var output = \"30\";\r\n            var res = new AddStringsSoln().AddStrings(num1, num2);\r\n\r\n            Assert.AreEqual(res, output);\r\n        }\r\n    }\r\n}\r\n</code></pre>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/aa48a98e-318a-4781-a71f-d662a241209a-q3.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"add-strings","tags":[{"name":"leetcode","slug":"leetcode"},{"name":"algorithm","slug":"algorithm"},{"name":"आसान","slug":"easy"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"c-sharp","slug":"c-sharp"},{"name":"string","slug":"string"}],"recommendations":[{"id":1654,"title":"Search a 2D Matrix - Array - Medium - LeetCode","imageUrl":"icon_4ecd9aac-a00a-4a8f-ad7b-e7e4a75307ac.jpg","dateCreated":"2020-10-31T10:10:06.758Z","dateModified":"2020-10-31T10:10:15.329Z","contributedBy":"sumitc91","content":"Write an efficient algorithm that searches for a value in an m x n matrix. This matrix has the following properties:\nIntegers in each row are sorted from left to right.<br />The first integer of each row is greater than the last integer of the previous row.<br />&nbsp;\nExample 1:</p","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/4ecd9aac-a00a-4a8f-ad7b-e7e4a75307ac.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"search-a-2d-matrix-array-medium-leetcode","total":0},{"id":1648,"title":"Insert Interval - Array - Medium - LeetCode","imageUrl":"icon_5a35d970-95af-493c-9aca-0b4bed037719.jpg","dateCreated":"2020-10-31T06:40:08.43Z","dateModified":"2020-10-31T06:40:18.214Z","contributedBy":"sumitc91","content":"Given a set of non-overlapping intervals, insert a new interval into the intervals (merge if necessary).\nYou may assume that the intervals were initially sorted according to their start times.\n&nbsp;\nExample 1:\nInput: intervals = [[1,3],[6,9]], newInterval = [2,5]<br /","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/5a35d970-95af-493c-9aca-0b4bed037719.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"insert-interval-array-medium-leetcode","total":0},{"id":1632,"title":"Container With Most Water - Array - Medium - LeetCode","imageUrl":"icon_fc25ea42-813c-4de4-be8b-eb874d415c58.jpg","dateCreated":"2020-10-18T15:53:55.445Z","dateModified":"2020-10-18T15:54:07.342Z","contributedBy":"sumitc91","content":"Given n non-negative integers a1, a2, ..., an , where each represents a point at coordinate (i, ai). n vertical lines are drawn such that the two endpoints of line i is at (i, ai) and (i, 0). Find two lines, which, together with the x-axis forms a container, such that the container contains the m","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/fc25ea42-813c-4de4-be8b-eb874d415c58.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"container-with-most-water-array-medium-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}