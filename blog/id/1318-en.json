{"id":1318,"title":"Ransom Note","imageUrl":"8c033b7a-afd0-49d1-8cfe-da7217b7e5f5-q3.jpg","dateCreated":"2020-06-04T06:25:46.127Z","dateModified":"2020-06-04T06:25:59.781Z","contributedBy":"AskGif","content":"<p>Given an arbitrary ransom note string and another string containing letters from all the magazines, write a function that will return true if the ransom note can be constructed from the magazines; otherwise, it will return false.</p>\r\n<p>Each letter in the magazine string can only be used once in your ransom note.</p>\r\n<p>&nbsp;</p>\r\n<p>Example 1:</p>\r\n<p>Input: ransomNote = \"a\", magazine = \"b\"</p>\r\n<p>Output: false</p>\r\n<p>&nbsp;</p>\r\n<p>Example 2:</p>\r\n<p>Input: ransomNote = \"aa\", magazine = \"ab\"</p>\r\n<p>Output: false</p>\r\n<p>&nbsp;</p>\r\n<p>Example 3:</p>\r\n<p>Input: ransomNote = \"aa\", magazine = \"aab\"</p>\r\n<p>Output: true</p>\r\n<p>&nbsp;</p>\r\n<p>Constraints:</p>\r\n<p>You may assume that both strings contain only lowercase letters.</p>\r\n<p>&nbsp;</p>\r\n<p>Solution:</p>\r\n<pre class=\"language-csharp\"><code>using System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace LeetCode.AskGif.Easy.String\r\n{\r\n    public class CanConstructSoln\r\n    {\r\n        public bool CanConstruct(string ransomNote, string magazine)\r\n        {\r\n            var map = new Dictionary&lt;char, int&gt;();\r\n            for (int i = 0; i &lt; magazine.Length; i++)\r\n            {\r\n                if (map.ContainsKey(magazine[i]))\r\n                {\r\n                    map[magazine[i]]++;\r\n                }\r\n                else\r\n                {\r\n                    map.Add(magazine[i], 1);\r\n                }\r\n            }\r\n\r\n            for (int i = 0; i &lt; ransomNote.Length; i++)\r\n            {\r\n                if (!map.ContainsKey(ransomNote[i]))\r\n                {\r\n                    return false;\r\n                }\r\n                else\r\n                {\r\n                    map[ransomNote[i]]--;\r\n                    if (map[ransomNote[i]] == 0)\r\n                    {\r\n                        map.Remove(ransomNote[i]);\r\n                    }\r\n                }\r\n            }\r\n\r\n            return true;\r\n        }\r\n    }\r\n}\r\n</code></pre>\r\n<p>Time Complexity: O(n)</p>\r\n<p>Space Complexity: O(n)</p>\r\n<p>&nbsp;</p>\r\n<p>Unit Tests:</p>\r\n<pre class=\"language-csharp\"><code>using LeetCode.AskGif.Easy.String;\r\nusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace CodingUnitTest.Easy.String\r\n{\r\n    [TestClass]\r\n    public class CanConstructSolnTests\r\n    {\r\n        [TestMethod]\r\n        public void CanConstructSoln_First()\r\n        {\r\n            var ransomNote = \"a\";\r\n            var magazine = \"b\";\r\n            var output = false;\r\n            var res = new CanConstructSoln().CanConstruct(ransomNote, magazine);\r\n\r\n            Assert.AreEqual(res, output);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void CanConstructSoln_Second()\r\n        {\r\n            var ransomNote = \"aa\";\r\n            var magazine = \"ab\";\r\n            var output = false;\r\n            var res = new CanConstructSoln().CanConstruct(ransomNote, magazine);\r\n\r\n            Assert.AreEqual(res, output);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void CanConstructSoln_Third()\r\n        {\r\n            var ransomNote = \"aa\";\r\n            var magazine = \"aab\";\r\n            var output = true;\r\n            var res = new CanConstructSoln().CanConstruct(ransomNote, magazine);\r\n\r\n            Assert.AreEqual(res, output);\r\n        }\r\n    }\r\n}\r\n</code></pre>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/8c033b7a-afd0-49d1-8cfe-da7217b7e5f5-q3.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"ransom-note","tags":[{"name":"easy","slug":"easy"},{"name":"data-structure","slug":"data-structure"},{"name":"c-sharp","slug":"c-sharp"},{"name":"leetcode","slug":"leetcode"},{"name":"string","slug":"string"},{"name":"algorithm","slug":"algorithm"}],"recommendations":[{"id":1676,"title":"Product of Array Except Self - Array - Medium - LeetCode","imageUrl":"icon_454cf76b-ed84-4192-9a20-cb564088e9c1.jpg","dateCreated":"2020-11-18T12:44:47.018Z","dateModified":"2020-11-18T12:44:53.26Z","contributedBy":"sumitc91","content":"Given an array nums of n integers where n &gt; 1, &nbsp;return an array output such that output[i] is equal to the product of all the elements of nums except nums[i].\nExample:\nInput: &nbsp;[1,2,3,4]<br />Output: [24,12,8,6]<br />Constraint: It's guaranteed that the product of the el","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/454cf76b-ed84-4192-9a20-cb564088e9c1.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"product-of-array-except-self-array-medium-leetcode","total":0},{"id":1607,"title":"Employees Earning More Than Their Managers - Sql - Easy - LeetCode","imageUrl":"icon_0a6cfc7c-14b2-43e5-8538-b4498ef0b5c3.jpg","dateCreated":"2020-10-16T06:26:34.794Z","dateModified":"2020-10-16T06:26:46.282Z","contributedBy":"sumitc91","content":"The Employee table holds all employees including their managers. Every employee has an Id, and there is also a column for the manager Id.\n+----+-------+--------+-----------+<br />| Id | Name &nbsp;| Salary | ManagerId |<br />+----+-------+--------+-----------+<br />| 1 &nbsp;| Joe &nbsp; |","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/0a6cfc7c-14b2-43e5-8538-b4498ef0b5c3.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"mysql","slug":"mysql"},{"name":"sql","slug":"sql"}],"slug":"employees-earning-more-than-their-managers-sql-easy-leetcode","total":0},{"id":1600,"title":"Design Parking System - Design - Easy - LeetCode","imageUrl":"icon_2c48fcf9-50ff-4bd1-9d59-5a5807a0e9ab.jpg","dateCreated":"2020-10-15T05:28:49.957Z","dateModified":"2020-10-15T05:49:22.82Z","contributedBy":"sumitc91","content":"Design a parking system for a parking lot. The parking lot has three kinds of parking spaces: big, medium, and small, with a fixed number of slots for each size.\nImplement the ParkingSystem class:\nParkingSystem(int big, int medium, int small) Initializes object of the ParkingSystem ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/2c48fcf9-50ff-4bd1-9d59-5a5807a0e9ab.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"design","slug":"design"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"design-parking-system-design-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}