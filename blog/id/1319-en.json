{"id":1319,"title":"Valid Palindrome - String - Easy - LeetCode","imageUrl":"facc84c3-721e-4699-ac4b-b6b3ee86d491-q3.jpg","dateCreated":"2020-06-04T06:49:25.323Z","dateModified":"2020-06-04T06:49:38.514Z","contributedBy":"AskGif","content":"<p>Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.</p>\r\n<p>Note: For the purpose of this problem, we define empty string as valid palindrome.</p>\r\n<p>&nbsp;</p>\r\n<p>Example 1:</p>\r\n<p>Input: \"A man, a plan, a canal: Panama\"</p>\r\n<p>Output: true</p>\r\n<p>&nbsp;</p>\r\n<p>Example 2:</p>\r\n<p>Input: \"race a car\"</p>\r\n<p>Output: false</p>\r\n<p>&nbsp;</p>\r\n<p>Solution:</p>\r\n<pre class=\"language-csharp\"><code>using System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace LeetCode.AskGif.Easy.String\r\n{\r\n    public class IsPalindromeSoln\r\n    {\r\n        public bool IsPalindrome(string s)\r\n        {\r\n            int i = 0;\r\n            int j = s.Length - 1;\r\n            while (i &lt; j)\r\n            {\r\n                if (!IsAlphaNumeric(s[i]))\r\n                {\r\n                    i++;\r\n                    continue;\r\n                }\r\n\r\n                if (!IsAlphaNumeric(s[j]))\r\n                {\r\n                    j--;\r\n                    continue;\r\n                }\r\n\r\n                if(char.ToLower(s[i]) != char.ToLower(s[j]))\r\n                {\r\n                    return false;                    \r\n                }\r\n                i++;\r\n                j--;\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        private bool IsAlphaNumeric(char v)\r\n        {\r\n            if( ( v&gt;= 48 &amp;&amp; v &lt;= 57 ) || (v &gt;= 65 &amp;&amp; v &lt;= 90) || (v &gt;= 97 &amp;&amp; v &lt;= 122))\r\n            {\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n}\r\n</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Time Complexity: O(n)</p>\r\n<p>Space Complexity: O(1)</p>\r\n<p>&nbsp;</p>\r\n<p>Unit Tests:</p>\r\n<pre class=\"language-csharp\"><code>using LeetCode.AskGif.Easy.String;\r\nusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace CodingUnitTest.Easy.String\r\n{\r\n    [TestClass]\r\n    public class IsPalindromeSolnTests\r\n    {\r\n        [TestMethod]\r\n        public void IsPalindromeSoln_First()\r\n        {\r\n            var s = \"A man, a plan, a canal: Panama\";            \r\n            var output = true;\r\n            var res = new IsPalindromeSoln().IsPalindrome(s);\r\n\r\n            Assert.AreEqual(res, output);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void IsPalindromeSoln_Second()\r\n        {\r\n            var s = \"race a car\";\r\n            var output = false;\r\n            var res = new IsPalindromeSoln().IsPalindrome(s);\r\n\r\n            Assert.AreEqual(res, output);\r\n        }\r\n    }\r\n}\r\n</code></pre>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/facc84c3-721e-4699-ac4b-b6b3ee86d491-q3.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"valid-palindrome-string-easy-leetcode","tags":[{"name":"easy","slug":"easy"},{"name":"data-structure","slug":"data-structure"},{"name":"c-sharp","slug":"c-sharp"},{"name":"leetcode","slug":"leetcode"},{"name":"string","slug":"string"},{"name":"algorithm","slug":"algorithm"}],"recommendations":[{"id":1723,"title":"Beautiful Arrangement II - Maths - Medium - LeetCode","imageUrl":"icon_b2d502bc-0983-4102-b87f-e37eff0ed0db.jpg","dateCreated":"2021-01-26T13:09:40.384Z","dateModified":"2021-01-26T13:09:46.827Z","contributedBy":"sumitc91","content":"Given two integers n and k, you need to construct a list that contains n different positive integers ranging from 1 to n and obeys the following requirement:<br />Suppose this list is [a1, a2, a3, ... , an], then the list [|a1 - a2|, |a2 - a3|, |a3 - a4|, ... , |an-1 - an|] has exactly k distinct","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/b2d502bc-0983-4102-b87f-e37eff0ed0db.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"maths","slug":"maths"},{"name":"medium","slug":"medium"}],"slug":"beautiful-arrangement-ii-maths-medium-leetcode","total":0},{"id":1701,"title":"K-diff Pairs in an Array - Array - Medium - LeetCode","imageUrl":"icon_adbe88a9-d88c-469f-ae16-26daa92dc3b3.jpg","dateCreated":"2020-11-20T09:11:47.894Z","dateModified":"2020-11-20T09:11:56.252Z","contributedBy":"sumitc91","content":"Given an array of integers nums and an integer k, return the number of unique k-diff pairs in the array.\nA k-diff pair is an integer pair (nums[i], nums[j]), where the following are true:\n0 &lt;= i, j &lt; nums.length<br />i != j<br />|nums[i] - nums[j]| == k<br />Notice that |val| ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/8c421996-adef-4a2c-b776-f3e3810e1e3b.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"k-diff-pairs-in-an-array-array-medium-leetcode","total":0},{"id":1611,"title":"Tenth Line - Bash - Easy - LeetCode","imageUrl":"icon_2f13c5c6-6e33-47bb-a84b-a78e7452f775.jpg","dateCreated":"2020-10-16T07:52:54.062Z","dateModified":"2020-10-16T07:53:14.702Z","contributedBy":"sumitc91","content":"Given a text file file.txt, print just the 10th line of the file.\nExample:\nAssume that file.txt has the following content:\nLine 1<br />Line 2<br />Line 3<br />Line 4<br />Line 5<br />Line 6<br />Line 7<br />Line 8<br />Line 9<br />Line 10<br />Your script should output the te","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/2f13c5c6-6e33-47bb-a84b-a78e7452f775.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"bash","slug":"bash"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"tenth-line-bash-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}