{"id":1322,"title":"Reverse Vowels of a String - String - Easy - LeetCode","imageUrl":"4fc3218b-6d3a-4ac8-9b23-b1528cb0e8bc-q3.jpg","dateCreated":"2020-06-04T10:34:48.328Z","dateModified":"2020-06-04T10:35:08.134Z","contributedBy":"AskGif","content":"<p>Write a function that takes a string as input and reverse only the vowels of a string.</p>\r\n<p>&nbsp;</p>\r\n<p>Example 1:</p>\r\n<p>Input: \"hello\"</p>\r\n<p>Output: \"holle\"</p>\r\n<p>&nbsp;</p>\r\n<p>Example 2:</p>\r\n<p>Input: \"leetcode\"</p>\r\n<p>Output: \"leotcede\"</p>\r\n<p>&nbsp;</p>\r\n<p>Note:</p>\r\n<p>The vowels do not include the letter \"y\".</p>\r\n<p>&nbsp;</p>\r\n<p>Solution:</p>\r\n<pre class=\"language-csharp\"><code>using System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace LeetCode.AskGif.Easy.String\r\n{\r\n    public class ReverseVowelsSoln\r\n    {\r\n        public string ReverseVowels(string s)\r\n        {\r\n            int i = 0;\r\n            int j = s.Length - 1;\r\n            var strChar = s.ToCharArray();\r\n            while (i &lt; j)\r\n            {\r\n                if (!IsVowel(s[i]))\r\n                {\r\n                    i++;\r\n                    continue;\r\n                }\r\n\r\n                if (!IsVowel(s[j]))\r\n                {\r\n                    j--;\r\n                    continue;\r\n                }\r\n\r\n                char temp = strChar[j];\r\n                strChar[j] = s[i];\r\n                strChar[i] = temp;\r\n\r\n                i++;\r\n                j--;\r\n            }\r\n\r\n            return new string(strChar);\r\n        }\r\n\r\n        private bool IsVowel(char v)\r\n        {\r\n            bool isVowel = false;\r\n            switch (v)\r\n            {\r\n                case 'a':\r\n                case 'e':\r\n                case 'i':\r\n                case 'o':\r\n                case 'u':\r\n                case 'A':\r\n                case 'E':\r\n                case 'I':\r\n                case 'O':\r\n                case 'U':isVowel = true;\r\n                    break;\r\n            }\r\n\r\n            return isVowel;\r\n        }\r\n    }\r\n}\r\n</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Time Complexity: O(n)</p>\r\n<p>Space Complexity: O(1)</p>\r\n<p>&nbsp;</p>\r\n<p>Unit Tests:</p>\r\n<pre class=\"language-csharp\"><code>using LeetCode.AskGif.Easy.String;\r\nusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace CodingUnitTest.Easy.String\r\n{\r\n    [TestClass]\r\n    public class ReverseVowelsSolnTests\r\n    {\r\n        [TestMethod]\r\n        public void ReverseVowelsSoln_First()\r\n        {\r\n            var a = \"hello\";            \r\n            var output = \"holle\";\r\n            var res = new ReverseVowelsSoln().ReverseVowels(a);\r\n\r\n            Assert.AreEqual(res, output);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void ReverseVowelsSoln_Second()\r\n        {\r\n            var a = \"leetcode\";\r\n            var output = \"leotcede\";\r\n            var res = new ReverseVowelsSoln().ReverseVowels(a);\r\n\r\n            Assert.AreEqual(res, output);\r\n        }\r\n    }\r\n}\r\n</code></pre>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/4fc3218b-6d3a-4ac8-9b23-b1528cb0e8bc-q3.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"reverse-vowels-of-a-string-string-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"leetcode","slug":"leetcode"},{"name":"string","slug":"string"},{"name":"आसान","slug":"easy"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"c-sharp","slug":"c-sharp"}],"recommendations":[{"id":1675,"title":"Majority Element II - Array - Medium - LeetCode","imageUrl":"icon_17b104bf-91b6-48b5-a7b8-2d58b5ba4b4e.jpg","dateCreated":"2020-11-18T12:22:28.829Z","dateModified":"2020-11-18T12:22:35.442Z","contributedBy":"sumitc91","content":"Given an integer array of size n, find all elements that appear more than &lfloor; n/3 &rfloor; times.\nFollow-up: Could you solve the problem in linear time and in O(1) space?\n&nbsp;\nExample 1:\nInput: nums = [3,2,3]<br />Output: [3]<br />Example 2:\nInput: nums =","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/17b104bf-91b6-48b5-a7b8-2d58b5ba4b4e.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"majority-element-ii-array-medium-leetcode","total":0},{"id":1651,"title":"Unique Paths II - Array - Medium - LeetCode","imageUrl":"icon_ca5278d5-6ee2-45fc-9c8e-7f12ff9f0357.jpg","dateCreated":"2020-10-31T08:51:34.949Z","dateModified":"2020-10-31T08:51:41.7Z","contributedBy":"sumitc91","content":"A robot is located at the top-left corner of a m x n grid (marked 'Start' in the diagram below).\nThe robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid (marked 'Finish' in the diagram below).\nNow consider i","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/ca5278d5-6ee2-45fc-9c8e-7f12ff9f0357.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"unique-paths-ii-array-medium-leetcode","total":0},{"id":1607,"title":"Employees Earning More Than Their Managers - Sql - Easy - LeetCode","imageUrl":"icon_0a6cfc7c-14b2-43e5-8538-b4498ef0b5c3.jpg","dateCreated":"2020-10-16T06:26:34.794Z","dateModified":"2020-10-16T06:26:46.282Z","contributedBy":"sumitc91","content":"The Employee table holds all employees including their managers. Every employee has an Id, and there is also a column for the manager Id.\n+----+-------+--------+-----------+<br />| Id | Name &nbsp;| Salary | ManagerId |<br />+----+-------+--------+-----------+<br />| 1 &nbsp;| Joe &nbsp; |","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/0a6cfc7c-14b2-43e5-8538-b4498ef0b5c3.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"mysql","slug":"mysql"},{"name":"sql","slug":"sql"}],"slug":"employees-earning-more-than-their-managers-sql-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}