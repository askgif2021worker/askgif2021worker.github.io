{"id":1327,"title":"Roman to Integer - String - Easy - LeetCode","imageUrl":"93e09f6e-55eb-446e-82ce-d203e4d9f0ac-q3.jpg","dateCreated":"2020-06-05T08:31:38.75Z","dateModified":"2020-06-05T08:31:55.304Z","contributedBy":"AskGif","content":"<p>Roman numerals are represented by seven different symbols: I, V, X, L, C, D, and M.</p>\r\n<p>&nbsp;</p>\r\n<p>Symbol&nbsp; &nbsp; &nbsp; &nbsp;Value</p>\r\n<p>I&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;1</p>\r\n<p>V&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;5</p>\r\n<p>X&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;10</p>\r\n<p>L&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;50</p>\r\n<p>C&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;100</p>\r\n<p>D&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;500</p>\r\n<p>M&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;1000</p>\r\n<p>&nbsp;</p>\r\n<p>For example, two is written as II in Roman numeral, just two one's added together. Twelve is written as, XII, which is simply X + II. The number twenty seven is written as XXVII, which is XX + V + II.</p>\r\n<p>&nbsp;</p>\r\n<p>Roman numerals are usually written largest to smallest from left to right. However, the numeral for four is not IIII. Instead, the number four is written as IV. Because the one is before the five we subtract it making four. The same principle applies to the number nine, which is written as IX. There are six instances where subtraction is used:</p>\r\n<p>&nbsp;</p>\r\n<p>I can be placed before V (5) and X (10) to make 4 and 9.&nbsp;</p>\r\n<p>X can be placed before L (50) and C (100) to make 40 and 90.&nbsp;</p>\r\n<p>C can be placed before D (500) and M (1000) to make 400 and 900.</p>\r\n<p>Given a roman numeral, convert it to an integer. Input is guaranteed to be within the range from 1 to 3999.</p>\r\n<p>&nbsp;</p>\r\n<p>Example 1:</p>\r\n<p>Input: \"III\"</p>\r\n<p>Output: 3</p>\r\n<p>&nbsp;</p>\r\n<p>Example 2:</p>\r\n<p>Input: \"IV\"</p>\r\n<p>Output: 4</p>\r\n<p>&nbsp;</p>\r\n<p>Example 3:</p>\r\n<p>Input: \"IX\"</p>\r\n<p>Output: 9</p>\r\n<p>&nbsp;</p>\r\n<p>Example 4:</p>\r\n<p>Input: \"LVIII\"</p>\r\n<p>Output: 58</p>\r\n<p>Explanation: L = 50, V= 5, III = 3.</p>\r\n<p>&nbsp;</p>\r\n<p>Example 5:</p>\r\n<p>Input: \"MCMXCIV\"</p>\r\n<p>Output: 1994</p>\r\n<p>Explanation: M = 1000, CM = 900, XC = 90 and IV = 4.</p>\r\n<p>&nbsp;</p>\r\n<p>Solution:</p>\r\n<pre class=\"language-csharp\"><code>using System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace LeetCode.AskGif.Easy.String\r\n{\r\n    public class RomanToIntSoln\r\n    {\r\n        public int RomanToInt(string s)\r\n        {\r\n            var map = new Dictionary&lt;char, int&gt;();\r\n            map.Add('I',1);\r\n            map.Add('V', 5);\r\n            map.Add('X', 10);\r\n            map.Add('L', 50);\r\n            map.Add('C', 100);\r\n            map.Add('D', 500);\r\n            map.Add('M', 1000);\r\n\r\n            int sum = 0;\r\n            for (int i = s.Length - 1; i &gt;= 0; i--)\r\n            {\r\n                if(i == s.Length - 1)\r\n                {\r\n                    sum += map[s[i]];\r\n                }\r\n                else\r\n                {\r\n                    if (map[s[i]] &lt; map[s[i + 1]])\r\n                    {\r\n                        sum -= map[s[i]];\r\n                    }\r\n                    else\r\n                    {\r\n                        sum += map[s[i]];\r\n                    }\r\n                }\r\n            }\r\n\r\n            return sum;\r\n        }\r\n    }\r\n}\r\n</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Time Complexity: O(n)</p>\r\n<p>Space Complexity: O(n)</p>\r\n<p>&nbsp;</p>\r\n<p>Unit Tests:</p>\r\n<pre class=\"language-csharp\"><code>using LeetCode.AskGif.Easy.String;\r\nusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace CodingUnitTest.Easy.String\r\n{\r\n    [TestClass]\r\n    public class RomanToIntSolnTests\r\n    {\r\n        [TestMethod]\r\n        public void RomanToIntSoln_First()\r\n        {\r\n            var input = \"III\";\r\n            var output = 3;\r\n            var res = new RomanToIntSoln().RomanToInt(input);\r\n\r\n            Assert.AreEqual(res, output);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void RomanToIntSoln_Second()\r\n        {\r\n            var input = \"IV\";\r\n            var output = 4;\r\n            var res = new RomanToIntSoln().RomanToInt(input);\r\n\r\n            Assert.AreEqual(res, output);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void RomanToIntSoln_Third()\r\n        {\r\n            var input = \"IX\";\r\n            var output = 9;\r\n            var res = new RomanToIntSoln().RomanToInt(input);\r\n\r\n            Assert.AreEqual(res, output);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void RomanToIntSoln_Fourth()\r\n        {\r\n            var input = \"LVIII\";\r\n            var output = 58;\r\n            var res = new RomanToIntSoln().RomanToInt(input);\r\n\r\n            Assert.AreEqual(res, output);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void RomanToIntSoln_Fifth()\r\n        {\r\n            var input = \"MCMXCIV\";\r\n            var output = 1994;\r\n            var res = new RomanToIntSoln().RomanToInt(input);\r\n\r\n            Assert.AreEqual(res, output);\r\n        }\r\n    }\r\n}\r\n</code></pre>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/93e09f6e-55eb-446e-82ce-d203e4d9f0ac-q3.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"roman-to-integer-string-easy-leetcode","tags":[{"name":"c-sharp","slug":"c-sharp"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"algorithm","slug":"algorithm"},{"name":"string","slug":"string"},{"name":"leetcode","slug":"leetcode"}],"recommendations":[{"id":1628,"title":"Special Array With X Elements Greater Than or Equal X - Array - Easy - LeetCode","imageUrl":"icon_8f426000-750a-4ff1-bb71-5a34851ae354.jpg","dateCreated":"2020-10-18T06:57:23.217Z","dateModified":"2020-10-18T06:57:30.65Z","contributedBy":"sumitc91","content":"You are given an array nums of non-negative integers. nums is considered special if there exists a number x such that there are exactly x numbers in nums that are greater than or equal to x.\nNotice that x does not have to be an element in nums.\nReturn x if the array is special, othe","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/8f426000-750a-4ff1-bb71-5a34851ae354.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"special-array-with-x-elements-greater-than-or-equal-x-array-easy-leetcode","total":0},{"id":1598,"title":"Find the Town Judge - Tree - Easy - LeetCode","imageUrl":"icon_2f8d0898-e59c-49cd-b25f-5234ed605d94.jpg","dateCreated":"2020-10-14T09:05:56.984Z","dateModified":"2020-10-14T09:06:09.069Z","contributedBy":"sumitc91","content":"In a town, there are N people labelled from 1 to N. &nbsp;There is a rumor that one of these people is secretly the town judge.\nIf the town judge exists, then:\nThe town judge trusts nobody.<br />Everybody (except for the town judge) trusts the town judge.<br />There is exactly one p","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/2f8d0898-e59c-49cd-b25f-5234ed605d94.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"graph","slug":"graph"},{"name":"leetcode","slug":"leetcode"}],"slug":"find-the-town-judge-tree-easy-leetcode","total":0},{"id":1594,"title":"Univalued Binary Tree - Tree - Easy - LeetCode","imageUrl":"icon_932c5fe4-9686-4df3-9d52-28ee24f22cf5.jpg","dateCreated":"2020-10-09T08:57:56.154Z","dateModified":"2020-10-09T08:58:09.124Z","contributedBy":"sumitc91","content":"A binary tree is univalued if every node in the tree has the same value.\nReturn true if and only if the given tree is univalued.\n&nbsp;\nExample 1:\n<br />Input: [1,1,1,1,1,null,1]<br />Output: true<br />Example 2:\n<br />Input: [2,2,2,5,2]<br />Output: false<br />","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/932c5fe4-9686-4df3-9d52-28ee24f22cf5.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"univalued-binary-tree-tree-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}