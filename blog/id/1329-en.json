{"id":1329,"title":"Number of Students Doing Homework at a Given Time - Array - Easy - LeetCode","imageUrl":"2c22f9de-1385-400e-b157-47224d1ff251-q3.jpg","dateCreated":"2020-06-05T13:21:41.355Z","dateModified":"2020-06-05T13:21:54.031Z","contributedBy":"AskGif","content":"<p>Given two integer arrays startTime and endTime and given an integer queryTime.</p>\r\n<p>The ith student started doing their homework at the time startTime[i] and finished it at time endTime[i].</p>\r\n<p>Return the number of students doing their homework at time queryTime. More formally, return the number of students where queryTime lays in the interval [startTime[i], endTime[i]] inclusive.</p>\r\n<p>&nbsp;</p>\r\n<p>Example 1:</p>\r\n<p>Input: startTime = [1,2,3], endTime = [3,2,7], queryTime = 4</p>\r\n<p>Output: 1</p>\r\n<p>Explanation: We have 3 students where:</p>\r\n<p>The first student started doing homework at time 1 and finished at time 3 and wasn't doing anything at time 4.</p>\r\n<p>The second student started doing homework at time 2 and finished at time 2 and also wasn't doing anything at time 4.</p>\r\n<p>The third student started doing homework at time 3 and finished at time 7 and was the only student doing homework at time 4.</p>\r\n<p>&nbsp;</p>\r\n<p>Example 2:</p>\r\n<p>Input: startTime = [4], endTime = [4], queryTime = 4</p>\r\n<p>Output: 1</p>\r\n<p>Explanation: The only student was doing their homework at the queryTime.</p>\r\n<p>&nbsp;</p>\r\n<p>Example 3:</p>\r\n<p>Input: startTime = [4], endTime = [4], queryTime = 5</p>\r\n<p>Output: 0</p>\r\n<p>&nbsp;</p>\r\n<p>Example 4:</p>\r\n<p>Input: startTime = [1,1,1,1], endTime = [1,3,2,4], queryTime = 7</p>\r\n<p>Output: 0</p>\r\n<p>&nbsp;</p>\r\n<p>Example 5:</p>\r\n<p>Input: startTime = [9,8,7,6,5,4,3,2,1], endTime = [10,10,10,10,10,10,10,10,10], queryTime = 5</p>\r\n<p>Output: 5</p>\r\n<p>&nbsp;</p>\r\n<p>Constraints:</p>\r\n<p>startTime.length == endTime.length</p>\r\n<p>1 &lt;= startTime.length &lt;= 100</p>\r\n<p>1 &lt;= startTime[i] &lt;= endTime[i] &lt;= 1000</p>\r\n<p>1 &lt;= queryTime &lt;= 1000</p>\r\n<p>&nbsp;</p>\r\n<p>Solution:</p>\r\n<pre class=\"language-csharp\"><code>using System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace LeetCode.AskGif.Easy.Array\r\n{\r\n    public class BusyStudentSoln\r\n    {\r\n        public int BusyStudent(int[] startTime, int[] endTime, int queryTime)\r\n        {\r\n            int count = 0;\r\n            for (int i = 0; i &lt; startTime.Length; i++)\r\n            {\r\n                if(startTime[i] &lt;= queryTime &amp;&amp; queryTime &lt;= endTime[i])\r\n                {\r\n                    count++;\r\n                }\r\n            }\r\n\r\n            return count;\r\n        }\r\n    }\r\n}\r\n</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Time Complexity: O(n)</p>\r\n<p>Space Complexity: O(1)</p>\r\n<p>&nbsp;</p>\r\n<p>Unit Tests:</p>\r\n<pre class=\"language-csharp\"><code>using LeetCode.AskGif.Easy.Array;\r\nusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace CodingUnitTest.Easy.Array\r\n{\r\n    [TestClass]\r\n    public class BusyStudentSolnTests\r\n    {\r\n        [TestMethod]\r\n        public void BusyStudentSoln_First()\r\n        {\r\n            var startTime = new int[] { 1, 2, 3 };\r\n            var endTime = new int[] { 3, 2, 7 };\r\n            var queryTime = 4;\r\n            var output = 1;\r\n            var res = new BusyStudentSoln().BusyStudent(startTime, endTime, queryTime);\r\n\r\n            Assert.AreEqual(res, output);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void BusyStudentSoln_Second()\r\n        {\r\n            var startTime = new int[] { 4 };\r\n            var endTime = new int[] { 4 };\r\n            var queryTime = 4;\r\n            var output = 1;\r\n            var res = new BusyStudentSoln().BusyStudent(startTime, endTime, queryTime);\r\n\r\n            Assert.AreEqual(res, output);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void BusyStudentSoln_Third()\r\n        {\r\n            var startTime = new int[] { 1, 1, 1, 1 };\r\n            var endTime = new int[] { 1, 3, 2, 4 };\r\n            var queryTime = 7;\r\n            var output = 0;\r\n            var res = new BusyStudentSoln().BusyStudent(startTime, endTime, queryTime);\r\n\r\n            Assert.AreEqual(res, output);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void BusyStudentSoln_Fourth()\r\n        {\r\n            var startTime = new int[] { 9, 8, 7, 6, 5, 4, 3, 2, 1 };\r\n            var endTime = new int[] { 10, 10, 10, 10, 10, 10, 10, 10, 10 };\r\n            var queryTime = 5;\r\n            var output = 5;\r\n            var res = new BusyStudentSoln().BusyStudent(startTime, endTime, queryTime);\r\n\r\n            Assert.AreEqual(res, output);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void BusyStudentSoln_Fifth()\r\n        {\r\n            var startTime = new int[] { 4 };\r\n            var endTime = new int[] { 4 };\r\n            var queryTime = 5;\r\n            var output = 0;\r\n            var res = new BusyStudentSoln().BusyStudent(startTime, endTime, queryTime);\r\n\r\n            Assert.AreEqual(res, output);\r\n        }\r\n    }\r\n}\r\n</code></pre>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/2c22f9de-1385-400e-b157-47224d1ff251-q3.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"number-of-students-doing-homework-at-a-given-time-array-easy-leetcode","tags":[{"name":"c-sharp","slug":"c-sharp"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"array","slug":"array"},{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"}],"recommendations":[{"id":1711,"title":"Count of Matches in Tournament - String - Easy - LeetCode","imageUrl":"icon_d4fba4b6-ab89-4548-aaf7-f9918522d7dd.jpg","dateCreated":"2020-12-28T14:11:46.984Z","dateModified":"2020-12-28T14:11:55.184Z","contributedBy":"sumitc91","content":"You are given an integer n, the number of teams in a tournament that has strange rules:\nIf the current number of teams is even, each team gets paired with another team. A total of n / 2 matches are played, and n / 2 teams advance to the next round.<br />If the current number of teams is od","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/d4fba4b6-ab89-4548-aaf7-f9918522d7dd.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"string","slug":"string"}],"slug":"count-of-matches-in-tournament-string-easy-leetcode","total":0},{"id":1610,"title":"Valid Phone Numbers - Bash - Easy - LeetCode","imageUrl":"icon_903f4733-4a8e-4987-9d87-0e0feefd9f8e.jpg","dateCreated":"2020-10-16T07:46:02.223Z","dateModified":"2020-10-16T07:46:13.79Z","contributedBy":"sumitc91","content":"Given a text file file.txt that contains list of phone numbers (one per line), write a one liner bash script to print all valid phone numbers.\nYou may assume that a valid phone number must appear in one of the following two formats: (xxx) xxx-xxxx or xxx-xxx-xxxx. (x means a digit)\n","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/903f4733-4a8e-4987-9d87-0e0feefd9f8e.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"valid-phone-numbers-bash-easy-leetcode","total":0},{"id":1597,"title":"Flood Fill - Tree - Easy - LeetCode","imageUrl":"icon_0e3c9311-ee03-4845-8887-471eb8b67c05.jpg","dateCreated":"2020-10-09T13:26:25.345Z","dateModified":"2020-10-09T13:26:36.925Z","contributedBy":"sumitc91","content":"An image is represented by a 2-D array of integers, each integer representing the pixel value of the image (from 0 to 65535).\nGiven a coordinate (sr, sc) representing the starting pixel (row and column) of the flood fill, and a pixel value newColor, \"flood fill\" the image.\nTo perfor","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/0e3c9311-ee03-4845-8887-471eb8b67c05.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"flood-fill-tree-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}