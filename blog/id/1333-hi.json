{"id":1333,"title":"Count Largest Group - Array - Easy - LeetCode","imageUrl":"5e00719d-3ec7-4c42-a7d9-91d121aef6f0-array.png","dateCreated":"2020-06-06T07:56:00.212Z","dateModified":"2020-06-06T07:56:16.556Z","contributedBy":"AskGif","content":"<p>Given an integer n. Each number from 1 to n is grouped according to the sum of its digits.&nbsp;</p>\r\n<p>Return how many groups have the largest size.</p>\r\n<p>&nbsp;</p>\r\n<p>Example 1:</p>\r\n<p>Input: n = 13</p>\r\n<p>Output: 4</p>\r\n<p>Explanation: There are 9 groups in total, they are grouped according sum of its digits of numbers from 1 to 13:</p>\r\n<p>[1,10], [2,11], [3,12], [4,13], [5], [6], [7], [8], [9]. There are 4 groups with largest size.</p>\r\n<p>&nbsp;</p>\r\n<p>Example 2:</p>\r\n<p>Input: n = 2</p>\r\n<p>Output: 2</p>\r\n<p>Explanation: There are 2 groups [1], [2] of size 1.</p>\r\n<p>&nbsp;</p>\r\n<p>Example 3:</p>\r\n<p>Input: n = 15</p>\r\n<p>Output: 6</p>\r\n<p>&nbsp;</p>\r\n<p>Example 4:</p>\r\n<p>Input: n = 24</p>\r\n<p>Output: 5</p>\r\n<p>&nbsp;</p>\r\n<p>Constraints:</p>\r\n<p>1 &lt;= n &lt;= 10^4</p>\r\n<p>&nbsp;</p>\r\n<p>Solution:</p>\r\n<pre class=\"language-csharp\"><code>using System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace LeetCode.AskGif.Easy.Array\r\n{\r\n    public class CountLargestGroupSoln\r\n    {\r\n        public int CountLargestGroup(int n)\r\n        {\r\n            var dict = new Dictionary&lt;int, int&gt;();\r\n            int sum = 0;\r\n            int max = int.MinValue;\r\n            for(int i = 1; i &lt;= n; i++)\r\n            {\r\n                sum = FindSum(i);\r\n                if (dict.ContainsKey(sum))\r\n                {\r\n                    dict[sum]++;\r\n                }\r\n                else\r\n                {\r\n                    dict.Add(sum, 1);\r\n                }\r\n\r\n                if (max &lt; dict[sum])\r\n                {\r\n                    max = dict[sum];\r\n                }\r\n            }\r\n\r\n            int count = 0;\r\n            foreach (var item in dict)\r\n            {\r\n                if (max == item.Value)\r\n                {\r\n                    count++;\r\n                }\r\n            }\r\n\r\n            return count;\r\n        }\r\n\r\n        private int FindSum(int i)\r\n        {            \r\n            int sum=0;\r\n            while (i &gt; 0)\r\n            {\r\n                sum += i % 10;\r\n                i = i / 10;\r\n            }\r\n\r\n            return sum;\r\n        }\r\n    }\r\n}\r\n</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Time Complexity: O(n)</p>\r\n<p>Space Complexity: O(1)</p>\r\n<p>&nbsp;</p>\r\n<p>Unit Tests:</p>\r\n<pre class=\"language-csharp\"><code>using LeetCode.AskGif.Easy.Array;\r\nusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace CodingUnitTest.Easy.Array\r\n{\r\n    [TestClass]\r\n    public class CountLargestGroupSolnTests\r\n    {\r\n        [TestMethod]\r\n        public void CountLargestGroupSoln_First()\r\n        {\r\n            var n = 13;\r\n            var output = 4;\r\n            var res = new CountLargestGroupSoln().CountLargestGroup(n);\r\n\r\n            Assert.AreEqual(res, output);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void CountLargestGroupSoln_Second()\r\n        {\r\n            var n = 2;\r\n            var output = 2;\r\n            var res = new CountLargestGroupSoln().CountLargestGroup(n);\r\n\r\n            Assert.AreEqual(res, output);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void CountLargestGroupSoln_Third()\r\n        {\r\n            var n = 15;\r\n            var output = 6;\r\n            var res = new CountLargestGroupSoln().CountLargestGroup(n);\r\n\r\n            Assert.AreEqual(res, output);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void CountLargestGroupSoln_Fourth()\r\n        {\r\n            var n = 24;\r\n            var output = 5;\r\n            var res = new CountLargestGroupSoln().CountLargestGroup(n);\r\n\r\n            Assert.AreEqual(res, output);\r\n        }\r\n    }\r\n}\r\n</code></pre>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/5e00719d-3ec7-4c42-a7d9-91d121aef6f0-array.png","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"count-largest-group-array-easy-leetcode","tags":[{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"array","slug":"array"},{"name":"algorithm","slug":"algorithm"},{"name":"आसान","slug":"easy"},{"name":"c-sharp","slug":"c-sharp"}],"recommendations":[{"id":1636,"title":"Two Strings - HashMap - Easy - HackerRank","imageUrl":"icon_b574251c-e9c0-4be6-9bc1-7c86f8da1806.jpg","dateCreated":"2020-10-24T07:22:16.972Z","dateModified":"2020-10-24T07:22:22.952Z","contributedBy":"sumitc91","content":"Given two strings, determine if they share a common substring. A substring may be as small as one character.\nFor example, the words \"a\", \"and\", \"art\" share the common substring . The words \"be\" and \"cat\" do not share a substring.\nFunction Description\nComplete the function two","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/b574251c-e9c0-4be6-9bc1-7c86f8da1806.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"hackerrank","slug":"hackerrank"},{"name":"hash-table","slug":"hash-table"}],"slug":"two-strings-hashmap-easy-hackerrank","total":0},{"id":1604,"title":"Second Highest Salary - Sql - Easy - LeetCode","imageUrl":"icon_cbe876f9-f816-4e65-800b-bbc50dec92d4.jpg","dateCreated":"2020-10-16T06:01:26.855Z","dateModified":"2020-10-16T06:01:35.503Z","contributedBy":"sumitc91","content":"Write a SQL query to get the second highest salary from the Employee table.\n+----+--------+<br />| Id | Salary |<br />+----+--------+<br />| 1 &nbsp;| 100 &nbsp; &nbsp;|<br />| 2 &nbsp;| 200 &nbsp; &nbsp;|<br />| 3 &nbsp;| 300 &nbsp; &nbsp;|<br />+----+--------+<br />For example, given the","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/cbe876f9-f816-4e65-800b-bbc50dec92d4.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"mysql","slug":"mysql"},{"name":"sql","slug":"sql"}],"slug":"second-highest-salary-sql-easy-leetcode","total":0},{"id":1598,"title":"Find the Town Judge - Tree - Easy - LeetCode","imageUrl":"icon_2f8d0898-e59c-49cd-b25f-5234ed605d94.jpg","dateCreated":"2020-10-14T09:05:56.984Z","dateModified":"2020-10-14T09:06:09.069Z","contributedBy":"sumitc91","content":"In a town, there are N people labelled from 1 to N. &nbsp;There is a rumor that one of these people is secretly the town judge.\nIf the town judge exists, then:\nThe town judge trusts nobody.<br />Everybody (except for the town judge) trusts the town judge.<br />There is exactly one p","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/2f8d0898-e59c-49cd-b25f-5234ed605d94.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"graph","slug":"graph"},{"name":"leetcode","slug":"leetcode"}],"slug":"find-the-town-judge-tree-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}