{"id":1337,"title":"Shuffle the Array - Easy - LeetCode","imageUrl":"35647ab1-43f5-4706-aa45-cdcc9094bd94-array.png","dateCreated":"2020-06-07T06:57:55.169Z","dateModified":"2020-06-07T06:58:30.901Z","contributedBy":"AskGif","content":"<p>Given the array nums consisting of 2n elements in the form [x1,x2,...,xn,y1,y2,...,yn].</p>\r\n<p>Return the array in the form [x1,y1,x2,y2,...,xn,yn].</p>\r\n<p>&nbsp;</p>\r\n<p>Example 1:</p>\r\n<p>Input: nums = [2,5,1,3,4,7], n = 3</p>\r\n<p>Output: [2,3,5,4,1,7]&nbsp;</p>\r\n<p>Explanation: Since x1=2, x2=5, x3=1, y1=3, y2=4, y3=7 then the answer is [2,3,5,4,1,7].</p>\r\n<p>&nbsp;</p>\r\n<p>Example 2:</p>\r\n<p>Input: nums = [1,2,3,4,4,3,2,1], n = 4</p>\r\n<p>Output: [1,4,2,3,3,2,4,1]</p>\r\n<p>&nbsp;</p>\r\n<p>Example 3:</p>\r\n<p>Input: nums = [1,1,2,2], n = 2</p>\r\n<p>Output: [1,2,1,2]</p>\r\n<p>&nbsp;</p>\r\n<p>Constraints:</p>\r\n<p>1 &lt;= n &lt;= 500</p>\r\n<p>nums.length == 2n</p>\r\n<p>1 &lt;= nums[i] &lt;= 10^3</p>\r\n<p>&nbsp;</p>\r\n<p>Solution:</p>\r\n<pre class=\"language-csharp\"><code>using System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace LeetCode.AskGif.Easy.Array\r\n{\r\n    public class ShuffleSoln\r\n    {\r\n        public int[] Shuffle(int[] nums, int n)\r\n        {\r\n            var res = new int[nums.Length];\r\n            var index = 0;\r\n            for (int i = 0, j = n; j &lt; nums.Length; i++, j++)\r\n            {\r\n                res[index] = nums[i];\r\n                index++;\r\n                res[index] = nums[j];\r\n                index++;\r\n            }\r\n\r\n            return res;\r\n        }\r\n    }\r\n}\r\n</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Time Complexity: O(n)</p>\r\n<p>Space Complexity: O(n)</p>\r\n<p>&nbsp;</p>\r\n<p>Unit Tests:</p>\r\n<pre class=\"language-csharp\"><code>using LeetCode.AskGif.Easy.Array;\r\nusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace CodingUnitTest.Easy.Array\r\n{\r\n    [TestClass]\r\n    public class ShuffleSolnTests\r\n    {\r\n        [TestMethod]\r\n        public void ShuffleSoln_First()\r\n        {\r\n            var nums = new int[] { 2, 5, 1, 3, 4, 7 };\r\n            var n = 3;\r\n            var output = new int[] { 2, 3, 5, 4, 1, 7 };\r\n            var res = new ShuffleSoln().Shuffle(nums, n);\r\n\r\n            AreEqual(res, output);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void ShuffleSoln_Second()\r\n        {\r\n            var nums = new int[] { 1, 2, 3, 4, 4, 3, 2, 1 };\r\n            var n = 4;\r\n            var output = new int[] { 1, 4, 2, 3, 3, 2, 4, 1 };\r\n            var res = new ShuffleSoln().Shuffle(nums, n);\r\n\r\n            AreEqual(res, output);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void ShuffleSoln_Third()\r\n        {\r\n            var nums = new int[] { 1, 1, 2, 2 };\r\n            var n = 2;\r\n            var output = new int[] { 1, 2, 1, 2 };\r\n            var res = new ShuffleSoln().Shuffle(nums, n);\r\n\r\n            AreEqual(res, output);\r\n        }\r\n\r\n        private void AreEqual(int[] res, int[] output)\r\n        {\r\n            Assert.AreEqual(res.Length, output.Length);\r\n\r\n            for (int i = 0; i &lt; res.Length; i++)\r\n            {\r\n                Assert.AreEqual(res[i], output[i]);\r\n            }\r\n        }\r\n    }\r\n}\r\n</code></pre>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/35647ab1-43f5-4706-aa45-cdcc9094bd94-array.png","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"shuffle-the-array-easy-leetcode","tags":[{"name":"easy","slug":"easy"},{"name":"c-sharp","slug":"c-sharp"},{"name":"data-structure","slug":"data-structure"},{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"leetcode","slug":"leetcode"}],"recommendations":[{"id":1704,"title":"Shortest Unsorted Continuous Subarray - Array - Medium - LeetCode","imageUrl":"icon_8ae155ae-c65a-4be5-8bc2-0e72f6588a6a.jpg","dateCreated":"2020-11-21T08:37:40.528Z","dateModified":"2020-11-21T08:37:59.841Z","contributedBy":"sumitc91","content":"Given an integer array nums, you need to find one continuous subarray that if you only sort this subarray in ascending order, then the whole array will be sorted in ascending order.\nReturn the shortest such subarray and output its length.\n&nbsp;\nExample 1:\nInput: nums ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/8ae155ae-c65a-4be5-8bc2-0e72f6588a6a.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"shortest-unsorted-continuous-subarray-array-medium-leetcode","total":0},{"id":1613,"title":"Rising Temperature - SQL - Easy - LeetCode","imageUrl":"icon_ac130fd7-abdd-4db8-9e17-cccc1048a681.jpg","dateCreated":"2020-10-16T11:40:45.374Z","dateModified":"2020-10-16T11:40:52.328Z","contributedBy":"sumitc91","content":"Table: Weather\n+---------------+---------+<br />| Column Name &nbsp; | Type &nbsp; &nbsp;|<br />+---------------+---------+<br />| id &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;| int &nbsp; &nbsp; |<br />| recordDate &nbsp; &nbsp;| date &nbsp; &nbsp;|<br />| temperature &nbsp; | int &nbsp; &","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/ac130fd7-abdd-4db8-9e17-cccc1048a681.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"mysql","slug":"mysql"},{"name":"sql","slug":"sql"}],"slug":"rising-temperature-sql-easy-leetcode","total":0},{"id":1607,"title":"Employees Earning More Than Their Managers - Sql - Easy - LeetCode","imageUrl":"icon_0a6cfc7c-14b2-43e5-8538-b4498ef0b5c3.jpg","dateCreated":"2020-10-16T06:26:34.794Z","dateModified":"2020-10-16T06:26:46.282Z","contributedBy":"sumitc91","content":"The Employee table holds all employees including their managers. Every employee has an Id, and there is also a column for the manager Id.\n+----+-------+--------+-----------+<br />| Id | Name &nbsp;| Salary | ManagerId |<br />+----+-------+--------+-----------+<br />| 1 &nbsp;| Joe &nbsp; |","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/0a6cfc7c-14b2-43e5-8538-b4498ef0b5c3.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"mysql","slug":"mysql"},{"name":"sql","slug":"sql"}],"slug":"employees-earning-more-than-their-managers-sql-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}