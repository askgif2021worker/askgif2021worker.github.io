{"id":1338,"title":"Find the Distance Value Between Two Arrays - Easy - LeetCode","imageUrl":"f684828c-76b7-4c50-9653-7f10e79f4750-array.png","dateCreated":"2020-06-07T08:09:26.033Z","dateModified":"2020-06-07T08:09:39.006Z","contributedBy":"AskGif","content":"<p>Given two integer arrays arr1 and arr2, and the integer d, return the distance value between the two arrays.</p>\r\n<p>The distance value is defined as the number of elements arr1[i] such that there is not any element arr2[j] where |arr1[i]-arr2[j]| &lt;= d.</p>\r\n<p>&nbsp;</p>\r\n<p>Example 1:</p>\r\n<p>Input: arr1 = [4,5,8], arr2 = [10,9,1,8], d = 2</p>\r\n<p>Output: 2</p>\r\n<p>Explanation:&nbsp;</p>\r\n<p>For arr1[0]=4 we have:&nbsp;</p>\r\n<p>|4-10|=6 &gt; d=2&nbsp;</p>\r\n<p>|4-9|=5 &gt; d=2&nbsp;</p>\r\n<p>|4-1|=3 &gt; d=2&nbsp;</p>\r\n<p>|4-8|=4 &gt; d=2&nbsp;</p>\r\n<p>For arr1[1]=5 we have:&nbsp;</p>\r\n<p>|5-10|=5 &gt; d=2&nbsp;</p>\r\n<p>|5-9|=4 &gt; d=2&nbsp;</p>\r\n<p>|5-1|=4 &gt; d=2&nbsp;</p>\r\n<p>|5-8|=3 &gt; d=2</p>\r\n<p>For arr1[2]=8 we have:</p>\r\n<p>|8-10|=2 &lt;= d=2</p>\r\n<p>|8-9|=1 &lt;= d=2</p>\r\n<p>|8-1|=7 &gt; d=2</p>\r\n<p>|8-8|=0 &lt;= d=2</p>\r\n<p>&nbsp;</p>\r\n<p>Example 2:</p>\r\n<p>Input: arr1 = [1,4,2,3], arr2 = [-4,-3,6,10,20,30], d = 3</p>\r\n<p>Output: 2</p>\r\n<p>&nbsp;</p>\r\n<p>Example 3:</p>\r\n<p>Input: arr1 = [2,1,100,3], arr2 = [-5,-2,10,-3,7], d = 6</p>\r\n<p>Output: 1</p>\r\n<p>&nbsp;</p>\r\n<p>Constraints:</p>\r\n<p>1 &lt;= arr1.length, arr2.length &lt;= 500</p>\r\n<p>-10^3 &lt;= arr1[i], arr2[j] &lt;= 10^3</p>\r\n<p>0 &lt;= d &lt;= 100</p>\r\n<p>&nbsp;</p>\r\n<p>Solution:</p>\r\n<pre class=\"language-csharp\"><code>using System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace LeetCode.AskGif.Easy.Array\r\n{\r\n    public class FindTheDistanceValueSoln\r\n    {\r\n        public int FindTheDistanceValue(int[] arr1, int[] arr2, int d)\r\n        {\r\n            int count = 0;\r\n            for (int i = 0; i &lt; arr1.Length; i++)\r\n            {\r\n                bool found = false;\r\n                for (int j = 0; j &lt; arr2.Length; j++)\r\n                {\r\n                    if (Math.Abs(arr1[i] - arr2[j]) &lt;= d)\r\n                    {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if (!found)\r\n                {\r\n                    count++;\r\n                }\r\n            }\r\n\r\n            return count;\r\n        }\r\n    }\r\n}\r\n</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Time Complexity: O(m*n) Where m and n are the length of the array.</p>\r\n<p>Space Complexity: O(1)</p>\r\n<p>&nbsp;</p>\r\n<p>Unit Tests:</p>\r\n<pre class=\"language-csharp\"><code>using LeetCode.AskGif.Easy.Array;\r\nusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace CodingUnitTest.Easy.Array\r\n{\r\n    [TestClass]\r\n    public class FindTheDistanceValueSolnTests\r\n    {\r\n        [TestMethod]\r\n        public void FindTheDistanceValueSoln_First()\r\n        {\r\n            var arr1 = new int[] { 4, 5, 8 };\r\n            var arr2 = new int[] { 10, 9, 1, 8 };\r\n            var d = 2;\r\n            var output = 2;\r\n            var res = new FindTheDistanceValueSoln().FindTheDistanceValue(arr1, arr2, d);\r\n\r\n            Assert.AreEqual(res, output);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void FindTheDistanceValueSoln_Second()\r\n        {\r\n            var arr1 = new int[] { 1, 4, 2, 3 };\r\n            var arr2 = new int[] { -4, -3, 6, 10, 20, 30 };\r\n            var d = 3;\r\n            var output = 2;\r\n            var res = new FindTheDistanceValueSoln().FindTheDistanceValue(arr1, arr2, d);\r\n\r\n            Assert.AreEqual(res, output);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void FindTheDistanceValueSoln_Third()\r\n        {\r\n            var arr1 = new int[] { 2, 1, 100, 3 };\r\n            var arr2 = new int[] { -5, -2, 10, -3, 7 };\r\n            var d = 6;\r\n            var output = 1;\r\n            var res = new FindTheDistanceValueSoln().FindTheDistanceValue(arr1, arr2, d);\r\n\r\n            Assert.AreEqual(res, output);\r\n        }\r\n    }\r\n}\r\n</code></pre>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/f684828c-76b7-4c50-9653-7f10e79f4750-array.png","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"find-the-distance-value-between-two-arrays-easy-leetcode","tags":[{"name":"leetcode","slug":"leetcode"},{"name":"c-sharp","slug":"c-sharp"},{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"array","slug":"array"}],"recommendations":[{"id":1715,"title":"Determine if String Halves Are Alike - String - Easy - LeetCode","imageUrl":"icon_8d5b87e0-0bd8-47c9-8f55-cfff94e5858d.jpg","dateCreated":"2021-01-08T09:24:14.63Z","dateModified":"2021-01-08T09:24:20.084Z","contributedBy":"sumitc91","content":"You are given a string s of even length. Split this string into two halves of equal lengths, and let a be the first half and b be the second half.\nTwo strings are alike if they have the same number of vowels ('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'). Notice that s contains upperca","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/8d5b87e0-0bd8-47c9-8f55-cfff94e5858d.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"string","slug":"string"}],"slug":"determine-if-string-halves-are-alike-string-easy-leetcode","total":0},{"id":1614,"title":"Fizz Buzz - List - Easy - LeetCode","imageUrl":"icon_6cbe0cee-fefe-40d0-8e0c-36270b4fa350.jpg","dateCreated":"2020-10-16T11:55:40.749Z","dateModified":"2020-10-16T11:55:50.939Z","contributedBy":"sumitc91","content":"Write a program that outputs the string representation of numbers from 1 to n.\nBut for multiples of three, it should output &ldquo;Fizz&rdquo; instead of the number and for the multiples of five output &ldquo;Buzz&rdquo;. For numbers which are multiples of both three and five output &ldquo","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/6cbe0cee-fefe-40d0-8e0c-36270b4fa350.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"fizz-buzz-list-easy-leetcode","total":0},{"id":1594,"title":"Univalued Binary Tree - Tree - Easy - LeetCode","imageUrl":"icon_932c5fe4-9686-4df3-9d52-28ee24f22cf5.jpg","dateCreated":"2020-10-09T08:57:56.154Z","dateModified":"2020-10-09T08:58:09.124Z","contributedBy":"sumitc91","content":"A binary tree is univalued if every node in the tree has the same value.\nReturn true if and only if the given tree is univalued.\n&nbsp;\nExample 1:\n<br />Input: [1,1,1,1,1,null,1]<br />Output: true<br />Example 2:\n<br />Input: [2,2,2,5,2]<br />Output: false<br />","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/932c5fe4-9686-4df3-9d52-28ee24f22cf5.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"univalued-binary-tree-tree-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}