{"id":1339,"title":"Lucky Numbers in a Matrix - Array - Easy - LeetCode","imageUrl":"2f0071ad-b481-4613-9f3c-12cb24218373-array.png","dateCreated":"2020-06-07T10:12:30.965Z","dateModified":"2020-06-08T14:15:48.097Z","contributedBy":"AskGif","content":"<p>Given a m * n matrix of distinct numbers, return all lucky numbers in the matrix in any order.</p>\r\n<p>A lucky number is an element of the matrix such that it is the minimum element in its row and maximum in its column.</p>\r\n<p>&nbsp;</p>\r\n<p>Example 1:</p>\r\n<p>&nbsp;</p>\r\n<p>Input: matrix = [[3,7,8],[9,11,13],[15,16,17]]</p>\r\n<p>Output: [15]</p>\r\n<p>Explanation: 15 is the only lucky number since it is the minimum in its row and the maximum in its column</p>\r\n<p>&nbsp;</p>\r\n<p>Example 2:</p>\r\n<p>Input: matrix = [[1,10,4,2],[9,3,8,7],[15,16,17,12]]</p>\r\n<p>Output: [12]</p>\r\n<p>Explanation: 12 is the only lucky number since it is the minimum in its row and the maximum in its column.</p>\r\n<p>&nbsp;</p>\r\n<p>Example 3:</p>\r\n<p>Input: matrix = [[7,8],[1,2]]</p>\r\n<p>Output: [7]</p>\r\n<p>&nbsp;</p>\r\n<p>Constraints:</p>\r\n<p>m == mat.length</p>\r\n<p>n == mat[i].length</p>\r\n<p>1 &lt;= n, m &lt;= 50</p>\r\n<p>1 &lt;= matrix[i][j] &lt;= 10^5.</p>\r\n<p>All elements in the matrix are distinct.</p>\r\n<p>&nbsp;</p>\r\n<p>Solution:</p>\r\n<pre class=\"language-csharp\"><code>using System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace LeetCode.AskGif.Easy.Array\r\n{\r\n    public class LuckyNumbersSoln\r\n    {\r\n        public IList&lt;int&gt; LuckyNumbers(int[][] matrix)\r\n        {\r\n            var lOBList = new List&lt;int&gt;();\r\n\r\n            for (int i = 0; i &lt; matrix.Length; i++)\r\n            {\r\n                int minNumber = matrix[i][0];\r\n                int minIndex = 0;\r\n                for (int j = 0; j &lt; matrix[0].Length; j++)\r\n                {\r\n                    if (matrix[i][j] &lt; minNumber)\r\n                    {\r\n                        minNumber = matrix[i][j];\r\n                        minIndex = j;\r\n                    }\r\n                }\r\n                bool found = true;\r\n                for (int k = 0; k &lt; matrix.Length; k++)\r\n                {\r\n                    if (matrix[k][minIndex] &gt; minNumber)\r\n                    {\r\n                        found = false;\r\n                        break;\r\n                    }\r\n                }\r\n                if (found)\r\n                {\r\n                    lOBList.Add(minNumber);\r\n                    return lOBList;\r\n                }\r\n            }\r\n            return new List&lt;int&gt;();\r\n        }\r\n    }\r\n}\r\n</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Time Complexity: O(m*n) Where m and n are rows and column of the Matrix.</p>\r\n<p>Space Complexity: O(n) To store the result.</p>\r\n<p>&nbsp;</p>\r\n<p>Unit Tests:</p>\r\n<pre class=\"language-csharp\"><code>using LeetCode.AskGif.Easy.Array;\r\nusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace CodingUnitTest.Easy.Array\r\n{\r\n    [TestClass]\r\n    public class LuckyNumbersSolnTests\r\n    {\r\n        [TestMethod]\r\n        public void LuckyNumbersSoln_First()\r\n        {\r\n            var matrix = new int[,] { \r\n                { 3, 7, 8 }, \r\n                { 9, 11, 13 }, \r\n                { 15, 16, 17 }\r\n            };           \r\n            var output = new List&lt;int&gt; { 15 };\r\n            var res = new LuckyNumbersSoln().LuckyNumbers(ArrayMapper(matrix));\r\n\r\n            AreEqual(res, output);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void LuckyNumbersSoln_Second()\r\n        {\r\n            var matrix = new int[,]{\r\n                {1, 10, 4, 2 },\r\n                {9, 3, 8, 7 },\r\n                {15, 16, 17, 12 }\r\n            };\r\n            var output = new List&lt;int&gt; { 12 };\r\n            var res = new LuckyNumbersSoln().LuckyNumbers(ArrayMapper(matrix));\r\n\r\n            AreEqual(res, output);\r\n        }\r\n        \r\n        [TestMethod]\r\n        public void LuckyNumbersSoln_Third()\r\n        {\r\n            var matrix = new int[,]{\r\n                {7, 8 },\r\n                {1, 2 }\r\n            };\r\n            var output = new List&lt;int&gt; { 7 };\r\n            var res = new LuckyNumbersSoln().LuckyNumbers(ArrayMapper(matrix));\r\n\r\n            AreEqual(res, output);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void LuckyNumbersSoln_Fourth()\r\n        {\r\n            var matrix = new int[,]{\r\n                { 36376, 85652, 21002, 4510 },\r\n                { 68246, 64237, 42962, 9974 },\r\n                { 32768, 97721, 47338, 5841 },\r\n                { 55103, 18179, 79062, 46542 }\r\n            };\r\n\r\n            var output = new List&lt;int&gt; { };\r\n            var res = new LuckyNumbersSoln().LuckyNumbers(ArrayMapper(matrix));\r\n\r\n            AreEqual(res, output);\r\n        }\r\n\r\n        private void AreEqual(IList&lt;int&gt; res, List&lt;int&gt; output)\r\n        {\r\n            Assert.AreEqual(res.Count, output.Count);\r\n            for (int i = 0; i &lt; res.Count; i++)\r\n            {\r\n                Assert.AreEqual(res[i], output[i]);\r\n            }\r\n        }\r\n\r\n        private int[][] ArrayMapper(int[,] matrix)\r\n        {\r\n            var arr = new int[matrix.GetLength(0)][];\r\n            for (int i = 0; i &lt; matrix.GetLength(0); i++)\r\n            {\r\n                arr[i] = new int[matrix.GetLength(1)];\r\n                for (int j = 0; j &lt; matrix.GetLength(1); j++)\r\n                {\r\n                    arr[i][j] = matrix[i,j];\r\n                }\r\n            }\r\n\r\n            return arr;\r\n        }\r\n    }\r\n}\r\n</code></pre>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/2f0071ad-b481-4613-9f3c-12cb24218373-array.png","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"lucky-numbers-in-a-matrix-array-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"array","slug":"array"},{"name":"leetcode","slug":"leetcode"},{"name":"c-sharp","slug":"c-sharp"}],"recommendations":[{"id":1719,"title":"Decode XORed Array - Array - Easy - LeetCode","imageUrl":"icon_e7567a26-e981-4e66-9863-f88f7de7e66d.jpg","dateCreated":"2021-01-10T05:22:37.138Z","dateModified":"2021-01-10T05:22:41.53Z","contributedBy":"sumitc91","content":"There is a hidden integer array arr that consists of n non-negative integers.\nIt was encoded into another integer array encoded of length n - 1, such that encoded[i] = arr[i] XOR arr[i + 1]. For example, if arr = [1,0,2,1], then encoded = [1,2,3].\nYou are given the encoded array. Yo","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/e7567a26-e981-4e66-9863-f88f7de7e66d.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"decode-xored-array-array-easy-leetcode","total":0},{"id":1714,"title":"Number of Students Unable to Eat Lunch - String - Easy - LeetCode","imageUrl":"icon_dad639fe-8bb2-4bcd-ba3d-af4e7cb5299b.jpg","dateCreated":"2021-01-06T10:28:07.741Z","dateModified":"2021-01-06T10:28:12.288Z","contributedBy":"sumitc91","content":"The school cafeteria offers circular and square sandwiches at lunch break, referred to by numbers 0 and 1 respectively. All students stand in a queue. Each student either prefers square or circular sandwiches.\nThe number of sandwiches in the cafeteria is equal to the number of students. Th","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/dad639fe-8bb2-4bcd-ba3d-af4e7cb5299b.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"string","slug":"string"}],"slug":"number-of-students-unable-to-eat-lunch-string-easy-leetcode","total":0},{"id":1613,"title":"Rising Temperature - SQL - Easy - LeetCode","imageUrl":"icon_ac130fd7-abdd-4db8-9e17-cccc1048a681.jpg","dateCreated":"2020-10-16T11:40:45.374Z","dateModified":"2020-10-16T11:40:52.328Z","contributedBy":"sumitc91","content":"Table: Weather\n+---------------+---------+<br />| Column Name &nbsp; | Type &nbsp; &nbsp;|<br />+---------------+---------+<br />| id &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;| int &nbsp; &nbsp; |<br />| recordDate &nbsp; &nbsp;| date &nbsp; &nbsp;|<br />| temperature &nbsp; | int &nbsp; &","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/ac130fd7-abdd-4db8-9e17-cccc1048a681.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"mysql","slug":"mysql"},{"name":"sql","slug":"sql"}],"slug":"rising-temperature-sql-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}