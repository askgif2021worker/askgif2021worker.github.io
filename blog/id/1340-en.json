{"id":1340,"title":"How Many Numbers Are Smaller Than the Current Number - Array - Easy - LeetCode","imageUrl":"d39e6c09-094f-44c6-9f03-73c2e0335f0b-array.png","dateCreated":"2020-06-07T10:59:13.335Z","dateModified":"2020-06-08T14:09:54.779Z","contributedBy":"AskGif","content":"<p>Given the array nums, for each nums[i] find out how many numbers in the array are smaller than it. That is, for each nums[i] you have to count the number of valid j's such that j != i and nums[j] &lt; nums[i].</p>\r\n<p>Return the answer in an array.</p>\r\n<p>&nbsp;</p>\r\n<p>Example 1:</p>\r\n<p>Input: nums = [8,1,2,2,3]</p>\r\n<p>Output: [4,0,1,1,3]</p>\r\n<p>Explanation:&nbsp;</p>\r\n<p>For nums[0]=8 there exist four smaller numbers than it (1, 2, 2 and 3).&nbsp;</p>\r\n<p>For nums[1]=1 does not exist any smaller number than it.</p>\r\n<p>For nums[2]=2 there exist one smaller number than it (1).&nbsp;</p>\r\n<p>For nums[3]=2 there exist one smaller number than it (1).&nbsp;</p>\r\n<p>For nums[4]=3 there exist three smaller numbers than it (1, 2 and 2).</p>\r\n<p>&nbsp;</p>\r\n<p>Example 2:</p>\r\n<p>Input: nums = [6,5,4,8]</p>\r\n<p>Output: [2,1,0,3]</p>\r\n<p>&nbsp;</p>\r\n<p>Example 3:</p>\r\n<p>Input: nums = [7,7,7,7]</p>\r\n<p>Output: [0,0,0,0]</p>\r\n<p>&nbsp;</p>\r\n<p>Constraints:</p>\r\n<p>2 &lt;= nums.length &lt;= 500</p>\r\n<p>0 &lt;= nums[i] &lt;= 100</p>\r\n<p>&nbsp;</p>\r\n<p>Solution:</p>\r\n<pre class=\"language-csharp\"><code>using System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace LeetCode.AskGif.Easy.Array\r\n{\r\n    public class SmallerNumbersThanCurrentSoln\r\n    {\r\n        public int[] SmallerNumbersThanCurrent(int[] nums)\r\n        {\r\n            var res = new int[nums.Length];\r\n            for (int i = 0; i &lt; nums.Length; i++)\r\n            {\r\n                res[i] = 0;\r\n                for (int j = 0; j &lt; nums.Length; j++)\r\n                {\r\n                    if (nums[i] &gt; nums[j])\r\n                    {\r\n                        res[i]++;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return res;\r\n        }\r\n    }\r\n}\r\n</code></pre>\r\n<p>Time Complexity: O(n^2)</p>\r\n<p>Space Complexity: O(n) To Store Result</p>\r\n<p>&nbsp;</p>\r\n<p>Unit Tests:</p>\r\n<pre class=\"language-csharp\"><code>using LeetCode.AskGif.Easy.Array;\r\nusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace CodingUnitTest.Easy.Array\r\n{\r\n    [TestClass]\r\n    public class SmallerNumbersThanCurrentSolnTests\r\n    {\r\n        [TestMethod]\r\n        public void SmallerNumbersThanCurrentSoln_First()\r\n        {\r\n            var nums = new int[] { 8, 1, 2, 2, 3 };\r\n            var output = new int[]{4, 0, 1, 1, 3};\r\n            var res = new SmallerNumbersThanCurrentSoln().SmallerNumbersThanCurrent(nums);\r\n\r\n            AreEqual(res, output);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void SmallerNumbersThanCurrentSoln_Second()\r\n        {\r\n            var nums = new int[] { 6, 5, 4, 8 };\r\n            var output = new int[] { 2, 1, 0, 3 };\r\n            var res = new SmallerNumbersThanCurrentSoln().SmallerNumbersThanCurrent(nums);\r\n\r\n            AreEqual(res, output);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void SmallerNumbersThanCurrentSoln_Third()\r\n        {\r\n            var nums = new int[] { 7, 7, 7, 7 };\r\n            var output = new int[] { 0, 0, 0, 0 };\r\n            var res = new SmallerNumbersThanCurrentSoln().SmallerNumbersThanCurrent(nums);\r\n\r\n            AreEqual(res, output);\r\n        }\r\n        private void AreEqual(int[] res, int[] output)\r\n        {\r\n            Assert.AreEqual(res.Length, output.Length);\r\n            for (int i = 0; i &lt; res.Length; i++)\r\n            {\r\n                Assert.AreEqual(res[i], output[i]);\r\n            }\r\n        }\r\n    }\r\n}\r\n</code></pre>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/d39e6c09-094f-44c6-9f03-73c2e0335f0b-array.png","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"how-many-numbers-are-smaller-than-the-current-number-array-easy-leetcode","tags":[{"name":"c-sharp","slug":"c-sharp"},{"name":"leetcode","slug":"leetcode"},{"name":"array","slug":"array"},{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"}],"recommendations":[{"id":1639,"title":"Search in Rotated Sorted Array - Array - Medium - LeetCode","imageUrl":"icon_92804ec8-8b64-41e0-a4f4-89ed11e1a5e2.jpg","dateCreated":"2020-10-24T14:15:15.013Z","dateModified":"2020-10-24T14:15:23.602Z","contributedBy":"sumitc91","content":"You are given an integer array nums sorted in ascending order, and an integer target.\nSuppose that nums is rotated at some pivot unknown to you beforehand (i.e., [0,1,2,4,5,6,7] might become [4,5,6,7,0,1,2]).\nIf target is found in the array return its index, otherwise, return -1.</p","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/92804ec8-8b64-41e0-a4f4-89ed11e1a5e2.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"search-in-rotated-sorted-array-array-medium-leetcode","total":0},{"id":1623,"title":"Number of Lines To Write String - String - Easy - LeetCode","imageUrl":"icon_1c27d36c-1576-4ab8-bf0a-6787e2a1a3a0.jpg","dateCreated":"2020-10-17T11:18:12.621Z","dateModified":"2020-10-17T11:18:22.116Z","contributedBy":"sumitc91","content":"We are to write the letters of a given string S, from left to right into lines. Each line has maximum width 100 units, and if writing a letter would cause the width of the line to exceed 100 units, it is written on the next line. We are given an array widths, an array where widths[0] is the width","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/1c27d36c-1576-4ab8-bf0a-6787e2a1a3a0.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"string","slug":"string"}],"slug":"number-of-lines-to-write-string-string-easy-leetcode","total":0},{"id":1598,"title":"Find the Town Judge - Tree - Easy - LeetCode","imageUrl":"icon_2f8d0898-e59c-49cd-b25f-5234ed605d94.jpg","dateCreated":"2020-10-14T09:05:56.984Z","dateModified":"2020-10-14T09:06:09.069Z","contributedBy":"sumitc91","content":"In a town, there are N people labelled from 1 to N. &nbsp;There is a rumor that one of these people is secretly the town judge.\nIf the town judge exists, then:\nThe town judge trusts nobody.<br />Everybody (except for the town judge) trusts the town judge.<br />There is exactly one p","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/2f8d0898-e59c-49cd-b25f-5234ed605d94.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"graph","slug":"graph"},{"name":"leetcode","slug":"leetcode"}],"slug":"find-the-town-judge-tree-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}