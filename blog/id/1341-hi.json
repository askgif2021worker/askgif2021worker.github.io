{"id":1341,"title":"Count Negative Numbers in a Sorted Matrix - Array - Easy - LeetCode","imageUrl":"09f5815b-5674-4c56-99c8-6b4ac11608f1-array.png","dateCreated":"2020-06-07T12:18:08.094Z","dateModified":"2020-06-07T12:19:03.867Z","contributedBy":"AskGif","content":"<p>Given a m * n matrix grid which is sorted in non-increasing order both row-wise and column-wise.&nbsp;</p>\r\n<p>Return the number of negative numbers in grid.</p>\r\n<p>&nbsp;</p>\r\n<p>Example 1:</p>\r\n<p>Input: grid = [[4,3,2,-1],[3,2,1,-1],[1,1,-1,-2],[-1,-1,-2,-3]]</p>\r\n<p>Output: 8</p>\r\n<p>Explanation: There are 8 negatives number in the matrix.</p>\r\n<p>&nbsp;</p>\r\n<p>Example 2:</p>\r\n<p>Input: grid = [[3,2],[1,0]]</p>\r\n<p>Output: 0</p>\r\n<p>&nbsp;</p>\r\n<p>Example 3:</p>\r\n<p>Input: grid = [[1,-1],[-1,-1]]</p>\r\n<p>Output: 3</p>\r\n<p>&nbsp;</p>\r\n<p>Example 4:</p>\r\n<p>Input: grid = [[-1]]</p>\r\n<p>Output: 1</p>\r\n<p>&nbsp;</p>\r\n<p>Constraints:</p>\r\n<p>m == grid.length</p>\r\n<p>n == grid[i].length</p>\r\n<p>1 &lt;= m, n &lt;= 100</p>\r\n<p>-100 &lt;= grid[i][j] &lt;= 100</p>\r\n<p>&nbsp;</p>\r\n<p>Solution:</p>\r\n<pre class=\"language-csharp\"><code>using System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace LeetCode.AskGif.Easy.Array\r\n{\r\n    public class CountNegativesSoln\r\n    {\r\n        public int CountNegatives(int[][] grid)\r\n        {\r\n            int count = 0;\r\n            for (int i = 0; i &lt; grid.Length; i++)\r\n            {\r\n                for (int j = 0; j &lt; grid[i].Length; j++)\r\n                {\r\n                    if (grid[i][j] &lt; 0)\r\n                    {\r\n                        count += grid[i].Length - j;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return count;\r\n        }\r\n    }\r\n}\r\n</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Time Complexity: O(n^2)</p>\r\n<p>Space Complexity: O(1)</p>\r\n<p>&nbsp;</p>\r\n<p>Unit Tests:</p>\r\n<pre class=\"language-csharp\"><code>using LeetCode.AskGif.Easy.Array;\r\nusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace CodingUnitTest.Easy.Array\r\n{\r\n    [TestClass]\r\n    public class CountNegativesSolnTests\r\n    {\r\n        [TestMethod]\r\n        public void CountNegativesSoln_First()\r\n        {\r\n            var grid = new int[,]{\r\n                { 4, 3, 2, -1 },\r\n                { 3, 2, 1, -1 },\r\n                { 1, 1, -1, -2 },\r\n                { -1, -1, -2, -3 }\r\n            };\r\n            var output = 8;\r\n            var res = new CountNegativesSoln().CountNegatives(ArrayMapper(grid));\r\n\r\n            Assert.AreEqual(res, output);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void CountNegativesSoln_Second()\r\n        {\r\n            var grid = new int[,]{\r\n                { 3, 2 },\r\n                { 1, 0 }\r\n            };\r\n            var output = 0;\r\n            var res = new CountNegativesSoln().CountNegatives(ArrayMapper(grid));\r\n\r\n            Assert.AreEqual(res, output);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void CountNegativesSoln_Third()\r\n        {\r\n            var grid = new int[,]{\r\n                { 1, -1 },\r\n                { -1, -1 }\r\n            };\r\n            var output = 3;\r\n            var res = new CountNegativesSoln().CountNegatives(ArrayMapper(grid));\r\n\r\n            Assert.AreEqual(res, output);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void CountNegativesSoln_Fourth()\r\n        {\r\n            var grid = new int[,]{\r\n                { -1 }\r\n            };\r\n            var output = 1;\r\n            var res = new CountNegativesSoln().CountNegatives(ArrayMapper(grid));\r\n\r\n            Assert.AreEqual(res, output);\r\n        }\r\n        private int[][] ArrayMapper(int[,] matrix)\r\n        {\r\n            var arr = new int[matrix.GetLength(0)][];\r\n            for (int i = 0; i &lt; matrix.GetLength(0); i++)\r\n            {\r\n                arr[i] = new int[matrix.GetLength(1)];\r\n                for (int j = 0; j &lt; matrix.GetLength(1); j++)\r\n                {\r\n                    arr[i][j] = matrix[i, j];\r\n                }\r\n            }\r\n\r\n            return arr;\r\n        }\r\n    }\r\n}\r\n</code></pre>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/09f5815b-5674-4c56-99c8-6b4ac11608f1-array.png","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"count-negative-numbers-in-a-sorted-matrix-array-easy-leetcode","tags":[{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"c-sharp","slug":"c-sharp"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"array","slug":"array"},{"name":"algorithm","slug":"algorithm"}],"recommendations":[{"id":1618,"title":"Big Countries - Sql - Easy - LeetCode","imageUrl":"icon_6ebd2b15-7c5c-49e4-8989-4100969f8797.jpg","dateCreated":"2020-10-17T05:34:51.754Z","dateModified":"2020-10-17T05:35:04.401Z","contributedBy":"sumitc91","content":"There is a table World\n+-----------------+------------+------------+--------------+---------------+<br />| name &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;| continent &nbsp;| area &nbsp; &nbsp; &nbsp; | population &nbsp; | gdp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; |<br />+-----------------+----","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/6ebd2b15-7c5c-49e4-8989-4100969f8797.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"mysql","slug":"mysql"},{"name":"sql","slug":"sql"}],"slug":"big-countries-sql-easy-leetcode","total":0},{"id":1613,"title":"Rising Temperature - SQL - Easy - LeetCode","imageUrl":"icon_ac130fd7-abdd-4db8-9e17-cccc1048a681.jpg","dateCreated":"2020-10-16T11:40:45.374Z","dateModified":"2020-10-16T11:40:52.328Z","contributedBy":"sumitc91","content":"Table: Weather\n+---------------+---------+<br />| Column Name &nbsp; | Type &nbsp; &nbsp;|<br />+---------------+---------+<br />| id &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;| int &nbsp; &nbsp; |<br />| recordDate &nbsp; &nbsp;| date &nbsp; &nbsp;|<br />| temperature &nbsp; | int &nbsp; &","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/ac130fd7-abdd-4db8-9e17-cccc1048a681.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"mysql","slug":"mysql"},{"name":"sql","slug":"sql"}],"slug":"rising-temperature-sql-easy-leetcode","total":0},{"id":1593,"title":"Range Sum of BST - Tree - Easy - LeetCode","imageUrl":"icon_2d446765-9ada-4072-93c3-eedfb56f7794.jpg","dateCreated":"2020-10-09T08:49:41.585Z","dateModified":"2020-10-09T08:49:55.954Z","contributedBy":"sumitc91","content":"Given the root node of a binary search tree, return the sum of values of all nodes with value between L and R (inclusive).\nThe binary search tree is guaranteed to have unique values.\n&nbsp;\nExample 1:\nInput: root = [10,5,15,3,7,null,18], L = 7, R = 15<br />Output: 32<b","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/2d446765-9ada-4072-93c3-eedfb56f7794.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"range-sum-of-bst-tree-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}