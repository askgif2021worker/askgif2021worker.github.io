{"id":1345,"title":"Decompress Run-Length Encoded List - Array - Easy - LeetCode","imageUrl":"eca019f3-1f72-4c1d-bc23-1f6e9e900196-array.png","dateCreated":"2020-06-08T13:04:40.088Z","dateModified":"2020-06-08T14:12:59.444Z","contributedBy":"AskGif","content":"<p>We are given a list nums of integers representing a list compressed with run-length encoding.</p>\r\n<p>Consider each adjacent pair of elements [freq, val] = [nums[2*i], nums[2*i+1]] (with i &gt;= 0).&nbsp; For each such pair, there are freq elements with value val concatenated in a sublist. Concatenate all the sublists from left to right to generate the decompressed list.</p>\r\n<p>Return the decompressed list.</p>\r\n<p>&nbsp;</p>\r\n<p>Example 1:</p>\r\n<p>Input: nums = [1,2,3,4]</p>\r\n<p>Output: [2,4,4,4]</p>\r\n<p>Explanation: The first pair [1,2] means we have freq = 1 and val = 2 so we generate the array [2].</p>\r\n<p>The second pair [3,4] means we have freq = 3 and val = 4 so we generate [4,4,4].</p>\r\n<p>At the end the concatenation [2] + [4,4,4] is [2,4,4,4].</p>\r\n<p>&nbsp;</p>\r\n<p>Example 2:</p>\r\n<p>Input: nums = [1,1,2,3]</p>\r\n<p>Output: [1,3,3]</p>\r\n<p>&nbsp;</p>\r\n<p>Constraints:</p>\r\n<p>2 &lt;= nums.length &lt;= 100</p>\r\n<p>nums.length % 2 == 0</p>\r\n<p>1 &lt;= nums[i] &lt;= 100</p>\r\n<p>&nbsp;</p>\r\n<p>Solution:</p>\r\n<pre class=\"language-csharp\"><code>using System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace LeetCode.AskGif.Easy.Array\r\n{\r\n    public class DecompressRLElistSoln\r\n    {\r\n        public int[] DecompressRLElist(int[] nums)\r\n        {\r\n            var res = new List&lt;int&gt;();\r\n            for (int i = 0; i &lt; nums.Length-1; i+=2)\r\n            {\r\n                for (int j = 0; j &lt; nums[i]; j++)\r\n                {\r\n                    res.Add(nums[i + 1]);\r\n                }\r\n            }\r\n\r\n            return res.ToArray();\r\n        }\r\n    }\r\n}\r\n</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Time Complexity: O(n)</p>\r\n<p>Space Complexity: O(n) To store results.</p>\r\n<p>&nbsp;</p>\r\n<p>Unit Tests:</p>\r\n<pre class=\"language-csharp\"><code>using LeetCode.AskGif.Easy.Array;\r\nusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace CodingUnitTest.Easy.Array\r\n{\r\n    [TestClass]\r\n    public class DecompressRLElistSolnTests\r\n    {\r\n        [TestMethod]\r\n        public void DecompressRLElistSoln_First()\r\n        {\r\n            var arr = new int[] { 1, 2, 3, 4 };\r\n            var output = new int[] { 2, 4, 4, 4 };\r\n            var res = new DecompressRLElistSoln().DecompressRLElist(arr);\r\n\r\n            AreEqual(res, output);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void DecompressRLElistSoln_Second()\r\n        {\r\n            var arr = new int[] { 1, 1, 2, 3 };\r\n            var output = new int[] { 1, 3, 3 };\r\n            var res = new DecompressRLElistSoln().DecompressRLElist(arr);\r\n\r\n            AreEqual(res, output);\r\n        }\r\n\r\n        private void AreEqual(int[] res, int[] output)\r\n        {\r\n            Assert.AreEqual(res.Length, output.Length);\r\n            for (int i = 0; i &lt; res.Length; i++)\r\n            {\r\n                Assert.AreEqual(res[i], output[i]);\r\n            }\r\n        }\r\n    }\r\n}\r\n</code></pre>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/eca019f3-1f72-4c1d-bc23-1f6e9e900196-array.png","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"decompress-run-length-encoded-list-array-easy-leetcode","tags":[{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"array","slug":"array"},{"name":"algorithm","slug":"algorithm"},{"name":"आसान","slug":"easy"},{"name":"c-sharp","slug":"c-sharp"}],"recommendations":[{"id":1660,"title":"Check Array Formation Through Concatenation - Array - Easy - LeetCode","imageUrl":"icon_85392267-2028-4c02-8f8a-96c1d2368591.jpg","dateCreated":"2020-11-03T06:50:35.06Z","dateModified":"2020-11-03T06:50:53.205Z","contributedBy":"sumitc91","content":"You are given an array of distinct integers arr and an array of integer arrays pieces, where the integers in pieces are distinct. Your goal is to form arr by concatenating the arrays in pieces in any order. However, you are not allowed to reorder the integers in each array pieces[i].\nRetur","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/85392267-2028-4c02-8f8a-96c1d2368591.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"check-array-formation-through-concatenation-array-easy-leetcode","total":0},{"id":1635,"title":"New Year Chaos - Array - Medium - HackerRank","imageUrl":"icon_53eb9e67-4065-4a48-af84-1ab48ec4ee5e.jpg","dateCreated":"2020-10-24T07:14:47.121Z","dateModified":"2020-10-24T07:15:13.568Z","contributedBy":"sumitc91","content":"It's New Year's Day and everyone's in line for the Wonderland rollercoaster ride! There are a number of people queued up, and each person wears a sticker indicating their initial position in the queue. Initial positions increment by &nbsp;from &nbsp;at the front of the line to &nbsp;at the back.<","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/53eb9e67-4065-4a48-af84-1ab48ec4ee5e.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"hackerrank","slug":"hackerrank"},{"name":"मध्यम","slug":"medium"}],"slug":"new-year-chaos-array-medium-hackerrank","total":0},{"id":1620,"title":"Not Boring Movies - Sql - Easy - LeetCode","imageUrl":"icon_2264c3af-9542-4c4d-946f-2d631ae1b7f8.jpg","dateCreated":"2020-10-17T06:24:31.074Z","dateModified":"2020-10-17T06:24:53.421Z","contributedBy":"sumitc91","content":"X city opened a new cinema, many people would like to go to this cinema. The cinema also gives out a poster indicating the movies&rsquo; ratings and descriptions.<br />Please write a SQL query to output movies with an odd numbered ID and a description that is not 'boring'. Order the result by rat","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/2264c3af-9542-4c4d-946f-2d631ae1b7f8.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"sql","slug":"sql"}],"slug":"not-boring-movies-sql-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}