{"id":1346,"title":"Find N Unique Integers Sum up to Zero - Array - Easy - LeetCode","imageUrl":"28483115-396f-4422-ba82-2da9a99839a5-array.png","dateCreated":"2020-06-08T13:34:02.56Z","dateModified":"2020-06-08T13:34:26.313Z","contributedBy":"AskGif","content":"<p>Given an integer n, return any array containing n unique integers such that they add up to 0.</p>\r\n<p>&nbsp;</p>\r\n<p>Example 1:</p>\r\n<p>Input: n = 5</p>\r\n<p>Output: [-7,-1,1,3,4]</p>\r\n<p>Explanation: These arrays also are accepted [-5,-1,1,2,3] , [-3,-1,2,-2,4].</p>\r\n<p>&nbsp;</p>\r\n<p>Example 2:</p>\r\n<p>Input: n = 3</p>\r\n<p>Output: [-1,0,1]</p>\r\n<p>&nbsp;</p>\r\n<p>Example 3:</p>\r\n<p>Input: n = 1</p>\r\n<p>Output: [0]</p>\r\n<p>&nbsp;</p>\r\n<p>Constraints:</p>\r\n<p>1 &lt;= n &lt;= 1000</p>\r\n<p>&nbsp;</p>\r\n<p>Solution:</p>\r\n<pre class=\"language-csharp\"><code>using System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace LeetCode.AskGif.Easy.Array\r\n{\r\n    public class SumZeroSoln\r\n    {\r\n        public int[] SumZero(int n)\r\n        {\r\n            var res = new int[n];\r\n            if (n == 0)\r\n            {\r\n                return null;\r\n            }\r\n\r\n            for (int i = 0, j = n - 1; i &lt; j; i++, j--)\r\n            {\r\n                res[i] = (i+1);\r\n                res[j] = (i+1) * -1;\r\n            }\r\n\r\n            if (n % 2 != 0)\r\n            {\r\n                res[n / 2] = 0;\r\n            }\r\n\r\n            return res;\r\n        }\r\n    }\r\n}\r\n</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Time Complexity: O(n)</p>\r\n<p>Space Complexity: O(n) To Store result</p>\r\n<p>&nbsp;</p>\r\n<p>Unit Tests:</p>\r\n<pre class=\"language-csharp\"><code>using LeetCode.AskGif.Easy.Array;\r\nusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace CodingUnitTest.Easy.Array\r\n{\r\n    [TestClass]\r\n    public class SumZeroSolnTests\r\n    {\r\n        [TestMethod]\r\n        public void SumZeroSoln_First()\r\n        {\r\n            var n = 5;            \r\n            var res = new SumZeroSoln().SumZero(n);\r\n\r\n            IsSumZero(res);\r\n        }\r\n\r\n        private void IsSumZero(int[] res)\r\n        {\r\n            var map = new Dictionary&lt;int, int&gt;();\r\n            for (int i = 0; i &lt; res.Length; i++)\r\n            {\r\n                if (map.ContainsKey(res[i]))\r\n                {\r\n                    map[res[i]]++;\r\n                }\r\n                else\r\n                {\r\n                    map.Add(res[i], 1);\r\n                }\r\n            }\r\n\r\n            foreach (var item in map)\r\n            {\r\n                Assert.AreEqual(item.Value, 1);\r\n            }\r\n\r\n            var sum = 0;\r\n            for (int i = 0; i &lt; res.Length; i++)\r\n            {\r\n                sum += res[i];\r\n            }\r\n\r\n            Assert.AreEqual(sum, 0);\r\n        }\r\n    }\r\n}\r\n</code></pre>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/28483115-396f-4422-ba82-2da9a99839a5-array.png","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"find-n-unique-integers-sum-up-to-zero-array-easy-leetcode","tags":[{"name":"array","slug":"array"},{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"c-sharp","slug":"c-sharp"},{"name":"leetcode","slug":"leetcode"}],"recommendations":[{"id":1671,"title":"Find Peak Element - Array - Medium - LeetCode","imageUrl":"icon_ddbfc17c-bd5c-47a2-8c7d-53508db12cab.jpg","dateCreated":"2020-11-18T07:03:05.436Z","dateModified":"2020-11-18T07:03:11.729Z","contributedBy":"sumitc91","content":"A peak element is an element that is greater than its neighbors.\nGiven an input array nums, where nums[i] &ne; nums[i+1], find a peak element and return its index.\nThe array may contain multiple peaks, in that case return the index to any one of the peaks is fine.\nYou may ima","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/ddbfc17c-bd5c-47a2-8c7d-53508db12cab.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"find-peak-element-array-medium-leetcode","total":0},{"id":1655,"title":"Sort Colors - Array - Medium - LeetCode","imageUrl":"icon_d14c2a98-a56d-44ac-9a21-2ed77349737c.jpg","dateCreated":"2020-10-31T11:30:17.677Z","dateModified":"2020-10-31T11:30:24.576Z","contributedBy":"sumitc91","content":"Given an array nums with n objects colored red, white, or blue, sort them in-place so that objects of the same color are adjacent, with the colors in the order red, white, and blue.\nHere, we will use the integers 0, 1, and 2 to represent the color red, white, and blue respectively.\n","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/d14c2a98-a56d-44ac-9a21-2ed77349737c.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"sort-colors-array-medium-leetcode","total":0},{"id":1612,"title":"Delete Duplicate Emails - SQL - Easy - LeetCode","imageUrl":"icon_a8c368b1-ddbd-45ca-96b4-7558b7166a74.jpg","dateCreated":"2020-10-16T11:31:27.16Z","dateModified":"2020-10-16T11:31:37.404Z","contributedBy":"sumitc91","content":"Write a SQL query to delete all duplicate email entries in a table named Person, keeping only unique emails based on its smallest Id.\n+----+------------------+<br />| Id | Email &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />+----+------------------+<br />| 1 &nbsp;| john@example.com |<br","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a8c368b1-ddbd-45ca-96b4-7558b7166a74.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"mysql","slug":"mysql"},{"name":"sql","slug":"sql"}],"slug":"delete-duplicate-emails-sql-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}