{"id":1347,"title":"Replace Elements with Greatest Element on Right Side - Array - Easy - LeetCode","imageUrl":"c6c7d5a5-bb39-40a6-9e7b-5745129206a7-array.png","dateCreated":"2020-06-08T14:37:03.296Z","dateModified":"2020-06-08T14:37:16.158Z","contributedBy":"AskGif","content":"<p>Given an array arr, replace every element in that array with the greatest element among the elements to its right, and replace the last element with -1.</p>\r\n<p>After doing so, return the array.</p>\r\n<p>&nbsp;</p>\r\n<p>Example 1:</p>\r\n<p>Input: arr = [17,18,5,4,6,1]</p>\r\n<p>Output: [18,6,6,6,1,-1]</p>\r\n<p>&nbsp;</p>\r\n<p>Constraints:</p>\r\n<p>1 &lt;= arr.length &lt;= 10^4</p>\r\n<p>1 &lt;= arr[i] &lt;= 10^5</p>\r\n<p>&nbsp;</p>\r\n<p>Solution:</p>\r\n<pre class=\"language-csharp\"><code>using System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace LeetCode.AskGif.Easy.Array\r\n{\r\n    public class ReplaceElementsSoln\r\n    {\r\n        public int[] ReplaceElements(int[] arr)\r\n        {\r\n            var temp = new int[arr.Length];\r\n            temp[arr.Length - 1] = arr[arr.Length - 1];\r\n            for (int i = arr.Length-2; i &gt;= 0; i--)\r\n            {\r\n                if (arr[i] &gt; temp[i + 1])\r\n                {\r\n                    temp[i] = arr[i];\r\n                }\r\n                else\r\n                {\r\n                    temp[i] = temp[i + 1];\r\n                }\r\n            }\r\n\r\n            var res = new int[arr.Length];\r\n            for (int i = 0; i &lt; arr.Length-1; i++)\r\n            {\r\n                res[i] = temp[i + 1];\r\n            }\r\n            res[arr.Length - 1] = -1;\r\n\r\n            return res;\r\n        }\r\n    }\r\n}\r\n</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Time Complexity: O(n)</p>\r\n<p>Space Complexity: O(n)</p>\r\n<p>&nbsp;</p>\r\n<p>Unit Tests:</p>\r\n<pre class=\"language-csharp\"><code>using LeetCode.AskGif.Easy.Array;\r\nusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace CodingUnitTest.Easy.Array\r\n{\r\n    [TestClass]\r\n    public class ReplaceElementsSolnTests\r\n    {\r\n        [TestMethod]\r\n        public void ReplaceElementsSoln_First()\r\n        {\r\n            var arr = new int[] { 17, 18, 5, 4, 6, 1 };\r\n            var output = new int[] { 18, 6, 6, 6, 1, -1 };\r\n            var res = new ReplaceElementsSoln().ReplaceElements(arr);\r\n\r\n            AreEqual(res, output);\r\n        }\r\n\r\n        private void AreEqual(int[] res, int[] output)\r\n        {\r\n            Assert.AreEqual(res.Length, output.Length);\r\n            for (int i = 0; i &lt; res.Length; i++)\r\n            {\r\n                Assert.AreEqual(res[i], output[i]);\r\n            }\r\n        }\r\n    }\r\n}\r\n</code></pre>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/c6c7d5a5-bb39-40a6-9e7b-5745129206a7-array.png","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"replace-elements-with-greatest-element-on-right-side-array-easy-leetcode","tags":[{"name":"array","slug":"array"},{"name":"leetcode","slug":"leetcode"},{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"c-sharp","slug":"c-sharp"}],"recommendations":[{"id":1662,"title":"Search in Rotated Sorted Array II - Array - Medium - LeetCode","imageUrl":"icon_f90b9cf1-f98d-483f-9cb6-f0ccc23c9c57.jpg","dateCreated":"2020-11-10T06:51:27.488Z","dateModified":"2020-11-10T06:51:33.729Z","contributedBy":"sumitc91","content":"Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.\n(i.e., [0,0,1,2,2,5,6] might become [2,5,6,0,0,1,2]).\nYou are given a target value to search. If found in the array return true, otherwise return false.\nExample 1:\nInput: num","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/f90b9cf1-f98d-483f-9cb6-f0ccc23c9c57.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"search-in-rotated-sorted-array-ii-array-medium-leetcode","total":0},{"id":1613,"title":"Rising Temperature - SQL - Easy - LeetCode","imageUrl":"icon_ac130fd7-abdd-4db8-9e17-cccc1048a681.jpg","dateCreated":"2020-10-16T11:40:45.374Z","dateModified":"2020-10-16T11:40:52.328Z","contributedBy":"sumitc91","content":"Table: Weather\n+---------------+---------+<br />| Column Name &nbsp; | Type &nbsp; &nbsp;|<br />+---------------+---------+<br />| id &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;| int &nbsp; &nbsp; |<br />| recordDate &nbsp; &nbsp;| date &nbsp; &nbsp;|<br />| temperature &nbsp; | int &nbsp; &","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/ac130fd7-abdd-4db8-9e17-cccc1048a681.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"mysql","slug":"mysql"},{"name":"sql","slug":"sql"}],"slug":"rising-temperature-sql-easy-leetcode","total":0},{"id":1599,"title":"Flower Planting With No Adjacent - Graph - Easy - LeetCode","imageUrl":"icon_db7a0ad4-994c-4a3a-a3c6-63035a00d2da.jpg","dateCreated":"2020-10-15T05:15:37.382Z","dateModified":"2020-10-15T05:15:47.948Z","contributedBy":"sumitc91","content":"You have n gardens, labeled from 1 to n, and an array paths where paths[i] = [xi, yi] describes the existence of a bidirectional path from garden xi to garden yi. In each garden, you want to plant one of 4 types of flowers.\nThere is no garden that has more than three paths coming into or l","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/db7a0ad4-994c-4a3a-a3c6-63035a00d2da.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"graph","slug":"graph"},{"name":"leetcode","slug":"leetcode"}],"slug":"flower-planting-with-no-adjacent-graph-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}