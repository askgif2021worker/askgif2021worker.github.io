{"id":1348,"title":"Find Numbers with Even Number of Digits - Array - Easy - LeetCode","imageUrl":"9dbfde0b-77a1-4bd4-b169-8fe66261461b-array.png","dateCreated":"2020-06-10T04:34:03.921Z","dateModified":"2020-06-10T04:34:34.092Z","contributedBy":"AskGif","content":"<p>Given an array nums of integers, return how many of them contain an even number of digits.</p>\r\n<p>&nbsp;</p>\r\n<p>Example 1:</p>\r\n<p>Input: nums = [12,345,2,6,7896]</p>\r\n<p>Output: 2</p>\r\n<p>Explanation:&nbsp;</p>\r\n<p>12 contains 2 digits (even number of digits).&nbsp;</p>\r\n<p>345 contains 3 digits (odd number of digits).&nbsp;</p>\r\n<p>2 contains 1 digit (odd number of digits).&nbsp;</p>\r\n<p>6 contains 1 digit (odd number of digits).&nbsp;</p>\r\n<p>7896 contains 4 digits (even number of digits).&nbsp;</p>\r\n<p>Therefore only 12 and 7896 contain an even number of digits.</p>\r\n<p>&nbsp;</p>\r\n<p>Example 2:</p>\r\n<p>Input: nums = [555,901,482,1771]</p>\r\n<p>Output: 1&nbsp;</p>\r\n<p>Explanation:&nbsp;</p>\r\n<p>Only 1771 contains an even number of digits.</p>\r\n<p>&nbsp;</p>\r\n<p>Constraints:</p>\r\n<p>1 &lt;= nums.length &lt;= 500</p>\r\n<p>1 &lt;= nums[i] &lt;= 10^5</p>\r\n<p>&nbsp;</p>\r\n<p>Solution:</p>\r\n<pre class=\"language-csharp\"><code>using System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace LeetCode.AskGif.Easy.Array\r\n{\r\n    public class FindNumbersSoln\r\n    {\r\n        public int FindNumbers(int[] nums)\r\n        {\r\n            int res = 0;\r\n            for (int i = 0; i &lt; nums.Length; i++)\r\n            {\r\n                if (IsEvenCount(nums[i]))\r\n                {\r\n                    res++;\r\n                }\r\n            }\r\n            return res;\r\n        }\r\n\r\n        private bool IsEvenCount(int num)\r\n        {\r\n            int count = 0;\r\n            while(num != 0)\r\n            {\r\n                count++;\r\n                num = num / 10;\r\n            }\r\n\r\n            return count % 2 == 0;\r\n        }\r\n    }\r\n}\r\n</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Time Complexity: O(n) Considering the length of the digit is finite.</p>\r\n<p>Space Complexity: O(1)</p>\r\n<p>&nbsp;</p>\r\n<p>Unit Tests:</p>\r\n<pre class=\"language-csharp\"><code>using LeetCode.AskGif.Easy.Array;\r\nusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace CodingUnitTest.Easy.Array\r\n{\r\n    [TestClass]\r\n    public class FindNumbersSolnTests\r\n    {\r\n        [TestMethod]\r\n        public void FindNumbersSoln_First()\r\n        {\r\n            var arr = new int[] { 12, 345, 2, 6, 7896 };\r\n            var output = 2;\r\n            var res = new FindNumbersSoln().FindNumbers(arr);\r\n\r\n            Assert.AreEqual(res, output);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void FindNumbersSoln_Second()\r\n        {\r\n            var arr = new int[] { 555, 901, 482, 1771 };\r\n            var output = 1;\r\n            var res = new FindNumbersSoln().FindNumbers(arr);\r\n\r\n            Assert.AreEqual(res, output);\r\n        }\r\n    }\r\n}\r\n</code></pre>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/9dbfde0b-77a1-4bd4-b169-8fe66261461b-array.png","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"find-numbers-with-even-number-of-digits-array-easy-leetcode","tags":[{"name":"leetcode","slug":"leetcode"},{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"आसान","slug":"easy"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"c-sharp","slug":"c-sharp"}],"recommendations":[{"id":1660,"title":"Check Array Formation Through Concatenation - Array - Easy - LeetCode","imageUrl":"icon_85392267-2028-4c02-8f8a-96c1d2368591.jpg","dateCreated":"2020-11-03T06:50:35.06Z","dateModified":"2020-11-03T06:50:53.205Z","contributedBy":"sumitc91","content":"You are given an array of distinct integers arr and an array of integer arrays pieces, where the integers in pieces are distinct. Your goal is to form arr by concatenating the arrays in pieces in any order. However, you are not allowed to reorder the integers in each array pieces[i].\nRetur","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/85392267-2028-4c02-8f8a-96c1d2368591.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"check-array-formation-through-concatenation-array-easy-leetcode","total":0},{"id":1657,"title":"Word Search - Array - Medium - LeetCode","imageUrl":"icon_20ea8361-3e30-4ec3-92da-00e3f7512213.jpg","dateCreated":"2020-11-01T06:18:06.031Z","dateModified":"2020-11-01T06:18:12.117Z","contributedBy":"sumitc91","content":"Given a 2D board and a word, find if the word exists in the grid.\nThe word can be constructed from letters of sequentially adjacent cells, where \"adjacent\" cells are horizontally or vertically neighboring. The same letter cell may not be used more than once.\n&nbsp;\nExample 1:","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/20ea8361-3e30-4ec3-92da-00e3f7512213.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"word-search-array-medium-leetcode","total":0},{"id":1625,"title":"Print in Order - Multi Threading - Easy - LeetCode","imageUrl":"icon_3e17a90d-8d3d-4655-9ad5-34bee8157e21.jpg","dateCreated":"2020-10-18T04:04:15.138Z","dateModified":"2020-10-18T04:04:52.636Z","contributedBy":"sumitc91","content":"Suppose we have a class:\npublic class Foo {<br />&nbsp; public void first() { print(\"first\"); }<br />&nbsp; public void second() { print(\"second\"); }<br />&nbsp; public void third() { print(\"third\"); }<br />}<br />The same instance of Foo will be passed to three different threads. Thread A","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/3e17a90d-8d3d-4655-9ad5-34bee8157e21.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"multi-threading","slug":"multi-threading"}],"slug":"print-in-order-multi-threading-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}