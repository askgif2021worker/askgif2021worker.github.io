{"id":1354,"title":"Check If It Is a Straight Line - Array - Easy - LeetCode","imageUrl":"03d7d58f-132d-41af-a0cf-b7b073ff2712-line.jpg","dateCreated":"2020-06-12T07:32:27.376Z","dateModified":"2020-06-12T07:32:38.621Z","contributedBy":"AskGif","content":"<p>You are given an array coordinates, coordinates[i] = [x, y], where [x, y] represents the coordinate of a point. Check if these points make a straight line in the XY plane.</p>\r\n<p>&nbsp;</p>\r\n<p>Example 1:</p>\r\n<p>Input: coordinates = [[1,2],[2,3],[3,4],[4,5],[5,6],[6,7]]</p>\r\n<p>Output: true</p>\r\n<p>&nbsp;</p>\r\n<p>Example 2:</p>\r\n<p>Input: coordinates = [[1,1],[2,2],[3,4],[4,5],[5,6],[7,7]]</p>\r\n<p>Output: false</p>\r\n<p>&nbsp;</p>\r\n<p>Constraints:</p>\r\n<p>2 &lt;= coordinates.length &lt;= 1000</p>\r\n<p>coordinates[i].length == 2</p>\r\n<p>-10^4 &lt;= coordinates[i][0], coordinates[i][1] &lt;= 10^4</p>\r\n<p>coordinates contains no duplicate point.</p>\r\n<p>&nbsp;</p>\r\n<p>Solution:</p>\r\n<pre class=\"language-csharp\"><code>using System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace LeetCode.AskGif.Easy.Array\r\n{\r\n    public class CheckStraightLineSoln\r\n    {\r\n        public bool CheckStraightLine(int[][] coordinates)\r\n        {\r\n            double m = 0;\r\n            double c = 0;\r\n            \r\n            if(coordinates.Length == 0)\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if(coordinates.Length == 1 || coordinates.Length == 2)\r\n            {\r\n                return true;\r\n            }\r\n            \r\n            //Equation of Line y = mx + c\r\n            //Let's find value for m and c;\r\n            //y1 = mx1 + c\r\n            //y2 = mx2 + c\r\n            //y2 - y1 = m(x2 - x1);\r\n\r\n            var x1 = coordinates[0][0];\r\n            var x2 = coordinates[1][0];\r\n            var y1 = coordinates[0][1];\r\n            var y2 = coordinates[1][1];\r\n\r\n            if((x2-x1) == 0)            \r\n            {\r\n                //check if all x is same;\r\n                for (int i = 2; i &lt; coordinates.Length; i++)\r\n                {\r\n                    if(x1 != coordinates[i][0])\r\n                    {\r\n                        return false;\r\n                    };\r\n                }\r\n                return true;\r\n            }\r\n\r\n            m = (double)(y2 - y1) / (x2 - x1);\r\n            c = y1 - m * x1;\r\n\r\n            for (int i = 2; i &lt; coordinates.Length; i++)\r\n            {\r\n                if(coordinates[i][1] != m * coordinates[i][0] + c)\r\n                {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            return true;\r\n        }\r\n    }\r\n}\r\n</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Time Complexity: O(n)</p>\r\n<p>Space Complexity: O(1)</p>\r\n<p>&nbsp;</p>\r\n<p>Unit Tests:</p>\r\n<pre class=\"language-csharp\"><code>using LeetCode.AskGif.Easy.Array;\r\nusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace CodingUnitTest.Easy.Array\r\n{\r\n    [TestClass]\r\n    public class CheckStraightLineSolnTests\r\n    {\r\n        [TestMethod]\r\n        public void CheckStraightLineSoln_First()\r\n        {\r\n            var coordinates = new int[,] {\r\n                    { 1, 2 },\r\n                    { 2, 3 },\r\n                    { 3, 4 },\r\n                    { 4, 5 },\r\n                    { 5, 6 },\r\n                    { 6, 7 }\r\n                };            \r\n            var output = true;\r\n\r\n            var res = new CheckStraightLineSoln().CheckStraightLine(ArrayMapper(coordinates));\r\n\r\n            Assert.AreEqual(output, res);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void CheckStraightLineSoln_Second()\r\n        {\r\n            var coordinates = new int[,] {\r\n                    { 1, 1 },\r\n                    { 2, 2 },\r\n                    { 3, 4 },\r\n                    { 4, 5 },\r\n                    { 5, 6 },\r\n                    { 7, 7 }\r\n                };\r\n            var output = false;\r\n\r\n            var res = new CheckStraightLineSoln().CheckStraightLine(ArrayMapper(coordinates));\r\n\r\n            Assert.AreEqual(output, res);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void CheckStraightLineSoln_Third()\r\n        {\r\n            var coordinates = new int[,] {\r\n                    { 0, 0 },\r\n                    { 0, 1 },\r\n                    { 0, -1 }\r\n                };\r\n            var output = true;\r\n\r\n            var res = new CheckStraightLineSoln().CheckStraightLine(ArrayMapper(coordinates));\r\n\r\n            Assert.AreEqual(output, res);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void CheckStraightLineSoln_Fourth()\r\n        {\r\n            var coordinates = new int[,] {\r\n                    { 2, 1 },\r\n                    { 4, 2 },\r\n                    { 6, 3 }\r\n                };\r\n            var output = true;\r\n\r\n            var res = new CheckStraightLineSoln().CheckStraightLine(ArrayMapper(coordinates));\r\n\r\n            Assert.AreEqual(output, res);\r\n        }\r\n\r\n        private int[][] ArrayMapper(int[,] matrix)\r\n        {\r\n            var arr = new int[matrix.GetLength(0)][];\r\n            for (int i = 0; i &lt; matrix.GetLength(0); i++)\r\n            {\r\n                arr[i] = new int[matrix.GetLength(1)];\r\n                for (int j = 0; j &lt; matrix.GetLength(1); j++)\r\n                {\r\n                    arr[i][j] = matrix[i, j];\r\n                }\r\n            }\r\n\r\n            return arr;\r\n        }\r\n    }\r\n}\r\n</code></pre>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/03d7d58f-132d-41af-a0cf-b7b073ff2712-line.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"check-if-it-is-a-straight-line-array-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"c-sharp","slug":"c-sharp"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"easy","slug":"easy"}],"recommendations":[{"id":1706,"title":"Check If Two String Arrays are Equivalent - String - Easy - LeetCode","imageUrl":"icon_38460c51-4f08-46d0-82ef-1f2263c60127.jpg","dateCreated":"2020-11-24T13:04:46.01Z","dateModified":"2020-11-24T13:04:50.906Z","contributedBy":"sumitc91","content":"Given two string arrays word1 and word2, return true if the two arrays represent the same string, and false otherwise.\nA string is represented by an array if the array elements concatenated in order forms the string.\n&nbsp;\nExample 1:\nInput: word1 = [\"ab\", \"c\"], word2 ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/38460c51-4f08-46d0-82ef-1f2263c60127.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"string","slug":"string"}],"slug":"check-if-two-string-arrays-are-equivalent-string-easy-leetcode","total":0},{"id":1629,"title":"Maximum Nesting Depth of the Parentheses - Stack - Easy - LeetCode","imageUrl":"icon_9d515e72-4c83-4541-9650-c0972215972d.jpg","dateCreated":"2020-10-18T08:20:30.391Z","dateModified":"2020-10-18T08:20:41.012Z","contributedBy":"sumitc91","content":"A string is a valid parentheses string (denoted VPS) if it meets one of the following:\nIt is an empty string \"\", or a single character not equal to \"(\" or \")\",<br />It can be written as AB (A concatenated with B), where A and B are VPS's, or<br />It can be written as (A), where A is a VPS.","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/9d515e72-4c83-4541-9650-c0972215972d.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"stack","slug":"stack"}],"slug":"maximum-nesting-depth-of-the-parentheses-stack-easy-leetcode","total":0},{"id":1606,"title":"Combine Two Tables - Sql - Easy - LeetCode","imageUrl":"icon_88b1c8bf-74b6-45d3-8314-cbd4ac4ead29.jpg","dateCreated":"2020-10-16T05:53:11.599Z","dateModified":"2020-10-16T05:53:36.309Z","contributedBy":"sumitc91","content":"Write a SQL query for a report that provides the following information for each person in the Person table, regardless if there is an address for each of those people:\nTable: Person\n+-------------+---------+<br />| Column Name | Type &nbsp; &nbsp;|<br />+-------------+---------+<br ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/5b6e96ac-0881-4845-bd1a-6f2f1cbcf99e.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"mysql","slug":"mysql"},{"name":"sql","slug":"sql"}],"slug":"combine-two-tables-sql-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}