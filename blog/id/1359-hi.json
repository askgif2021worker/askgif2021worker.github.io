{"id":1359,"title":"Find Words That Can Be Formed by Characters - Array - Easy - LeetCode","imageUrl":"aee41a4c-7d37-4436-88be-d0539a4a87d7-array.png","dateCreated":"2020-06-13T10:25:17.558Z","dateModified":"2020-06-13T10:25:30.08Z","contributedBy":"AskGif","content":"<p>You are given an array of strings words and a string chars.</p>\r\n<p>A string is good if it can be formed by characters from chars (each character can only be used once).</p>\r\n<p>Return the sum of lengths of all good strings in words.</p>\r\n<p>&nbsp;</p>\r\n<p>Example 1:</p>\r\n<p>Input: words = [\"cat\",\"bt\",\"hat\",\"tree\"], chars = \"atach\"</p>\r\n<p>Output: 6</p>\r\n<p>Explanation:&nbsp;</p>\r\n<p>The strings that can be formed are \"cat\" and \"hat\" so the answer is 3 + 3 = 6.</p>\r\n<p>&nbsp;</p>\r\n<p>Example 2:</p>\r\n<p>Input: words = [\"hello\",\"world\",\"leetcode\"], chars = \"welldonehoneyr\"</p>\r\n<p>Output: 10</p>\r\n<p>Explanation:&nbsp;</p>\r\n<p>The strings that can be formed are \"hello\" and \"world\" so the answer is 5 + 5 = 10.</p>\r\n<p>&nbsp;</p>\r\n<p>Note:</p>\r\n<p>1 &lt;= words.length &lt;= 1000</p>\r\n<p>1 &lt;= words[i].length, chars.length &lt;= 100</p>\r\n<p>All strings contain lowercase English letters only.</p>\r\n<p>&nbsp;</p>\r\n<p>Solution:</p>\r\n<pre class=\"language-csharp\"><code>using System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace LeetCode.AskGif.Easy.Array\r\n{\r\n    public class CountCharactersSoln\r\n    {\r\n        public int CountCharacters(string[] words, string chars)\r\n        {\r\n            var available = new Dictionary&lt;char, int&gt;();\r\n            for (int i = 0; i &lt; chars.Length; i++)\r\n            {\r\n                if (available.ContainsKey(chars[i]))\r\n                {\r\n                    available[chars[i]]++;\r\n                }\r\n                else\r\n                {\r\n                    available.Add(chars[i], 1);\r\n                }\r\n            }\r\n\r\n            int sum = 0;\r\n            for (int i = 0; i &lt; words.Length; i++)\r\n            {\r\n                var temp = new Dictionary&lt;char,int&gt;(available);\r\n                bool possible = true;\r\n                for (int j = 0; j &lt; words[i].Length; j++)\r\n                {\r\n                    if (temp.ContainsKey(words[i][j])){\r\n                        temp[words[i][j]]--;\r\n                        if (temp[words[i][j]] == 0)\r\n                        {\r\n                            temp.Remove(words[i][j]);\r\n                        }\r\n                    }\r\n                    else\r\n                    {\r\n                        possible = false;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (possible)\r\n                {\r\n                    sum += words[i].Length;\r\n                }\r\n            }\r\n\r\n            return sum;\r\n        }\r\n    }\r\n}\r\n</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Time Complexity: O(n)</p>\r\n<p>Space Complexity: O(n)</p>\r\n<p>&nbsp;</p>\r\n<p>Unit Tests:</p>\r\n<pre class=\"language-csharp\"><code>using LeetCode.AskGif.Easy.Array;\r\nusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace CodingUnitTest.Easy.Array\r\n{\r\n    [TestClass]\r\n    public class CountCharactersSolnTests\r\n    {\r\n        [TestMethod]\r\n        public void CountCharactersSoln_First()\r\n        {\r\n            var words = new string[] { \"cat\", \"bt\", \"hat\", \"tree\" };\r\n            var chars = \"atach\";\r\n            var expected = 6;\r\n\r\n            var res = new CountCharactersSoln().CountCharacters(words, chars);\r\n            Assert.AreEqual(expected, res);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void CountCharactersSoln_Second()\r\n        {\r\n            var words = new string[] { \"hello\", \"world\", \"leetcode\" };\r\n            var chars = \"welldonehoneyr\";\r\n            var expected = 10;\r\n\r\n            var res = new CountCharactersSoln().CountCharacters(words, chars);\r\n            Assert.AreEqual(expected, res);\r\n        }\r\n    }\r\n}\r\n</code></pre>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/aee41a4c-7d37-4436-88be-d0539a4a87d7-array.png","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"find-words-that-can-be-formed-by-characters-array-easy-leetcode","tags":[{"name":"c-sharp","slug":"c-sharp"},{"name":"algorithm","slug":"algorithm"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"array","slug":"array"}],"recommendations":[{"id":1713,"title":"Reformat Phone Number - String - Easy - LeetCode","imageUrl":"icon_716c7816-48e6-45e6-840e-df068e41c6f6.jpg","dateCreated":"2021-01-05T04:21:52.889Z","dateModified":"2021-01-05T04:22:00.273Z","contributedBy":"sumitc91","content":"You are given a phone number as a string number. number consists of digits, spaces ' ', and/or dashes '-'.\nYou would like to reformat the phone number in a certain manner. Firstly, remove all spaces and dashes. Then, group the digits from left to right into blocks of length 3 until there a","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/716c7816-48e6-45e6-840e-df068e41c6f6.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"string","slug":"string"}],"slug":"reformat-phone-number-string-easy-leetcode","total":0},{"id":1673,"title":"Minimum Size Subarray Sum - Array - Medium - LeetCode","imageUrl":"icon_9cd5847f-8b41-455d-8ac3-9b66f2dcb47e.jpg","dateCreated":"2020-11-18T09:07:17.833Z","dateModified":"2020-11-18T09:07:23.659Z","contributedBy":"sumitc91","content":"Given an array of n positive integers and a positive integer s, find the minimal length of a contiguous subarray of which the sum &ge; s. If there isn't one, return 0 instead.\nExample:&nbsp;\nInput: s = 7, nums = [2,3,1,2,4,3]<br />Output: 2<br />Explanation: the subarray [4,3] has t","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/9cd5847f-8b41-455d-8ac3-9b66f2dcb47e.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"minimum-size-subarray-sum-array-medium-leetcode","total":0},{"id":1659,"title":"बढ़ती आवृत्ति द्वारा क्रमबद्ध सरणी - सरणी - मध्यम - LeetCode","imageUrl":"icon_0607b46b-96fe-470e-a316-ee8bf5aeee8e.jpg","dateCreated":"2020-11-03T05:02:58.417Z","dateModified":"2020-11-03T05:10:52.862Z","contributedBy":"sumitc91","content":"Given an array of integers nums, sort the array in increasing order based on the frequency of the values. If multiple values have the same frequency, sort them in decreasing order.\nReturn the sorted array.\n&nbsp;\nExample 1:\nInput: nums = [1,1,2,2,2,3]<br />Output: [3,1","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/0607b46b-96fe-470e-a316-ee8bf5aeee8e.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"sort-array-by-increasing-frequency-array-medium-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}