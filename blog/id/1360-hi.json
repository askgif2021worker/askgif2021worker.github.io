{"id":1360,"title":"Number of Equivalent Domino Pairs - Array - Easy - LeetCode","imageUrl":"02bf5547-6308-4ab0-8869-d1628c49c021-array.png","dateCreated":"2020-06-13T16:42:37.703Z","dateModified":"2020-06-13T16:42:59.336Z","contributedBy":"AskGif","content":"<p>Given a list of dominoes, dominoes[i] = [a, b] is equivalent to dominoes[j] = [c, d] if and only if either (a==c and b==d), or (a==d and b==c) - that is, one domino can be rotated to be equal to another domino.</p>\r\n<p>Return the number of pairs (i, j) for which 0 &lt;= i &lt; j &lt; dominoes.length, and dominoes[i] is equivalent to dominoes[j].</p>\r\n<p>&nbsp;</p>\r\n<p>Example 1:</p>\r\n<p>Input: dominoes = [[1,2],[2,1],[3,4],[5,6]]</p>\r\n<p>Output: 1</p>\r\n<p>&nbsp;</p>\r\n<p>Constraints:</p>\r\n<p>1 &lt;= dominoes.length &lt;= 40000</p>\r\n<p>1 &lt;= dominoes[i][j] &lt;= 9</p>\r\n<p>&nbsp;</p>\r\n<p>Solution:</p>\r\n<pre class=\"language-csharp\"><code>using System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace LeetCode.AskGif.Easy.Array\r\n{\r\n    public class NumEquivDominoPairsSoln\r\n    {\r\n        public int NumEquivDominoPairs(int[][] dominoes)\r\n        {\r\n            var map = new Dictionary&lt;string, int&gt;();\r\n            int count = 0;\r\n            string key = string.Empty;\r\n            for (int i = 0; i &lt; dominoes.Length; i++)\r\n            {\r\n                key = Math.Min(dominoes[i][0], dominoes[i][1]).ToString() +\r\n                    \"-\" +Math.Max(dominoes[i][0], dominoes[i][1]).ToString();\r\n\r\n                if (map.ContainsKey(key))\r\n                {\r\n                    count += map[key];\r\n                    map[key]++;\r\n                }\r\n                else\r\n                {\r\n                    map.Add(key, 1);\r\n                }                \r\n            }\r\n\r\n            return count;\r\n        }        \r\n    }\r\n}\r\n</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Time Complexity: O(n)</p>\r\n<p>Space Complexity: O(n)</p>\r\n<p>&nbsp;</p>\r\n<p>Unit Tests:</p>\r\n<pre class=\"language-csharp\"><code>using LeetCode.AskGif.Easy.Array;\r\nusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace CodingUnitTest.Easy.Array\r\n{\r\n    [TestClass]\r\n    public class NumEquivDominoPairsSolnTests\r\n    {\r\n        [TestMethod]\r\n        public void NumEquivDominoPairsSoln_First()\r\n        {\r\n            var dominoes = new int[,]{\r\n                    { 1, 2 },\r\n                    { 2, 1 },\r\n                    { 3, 4 },\r\n                    { 5, 6 }\r\n                };      \r\n            var expected = 1;\r\n\r\n            var res = new NumEquivDominoPairsSoln().NumEquivDominoPairs(ArrayMapper(dominoes));\r\n            Assert.AreEqual(expected, res);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void NumEquivDominoPairsSoln_Second()\r\n        {\r\n            var dominoes = new int[,]{\r\n                    { 1, 1 },\r\n                    { 2, 2 },\r\n                    { 1, 1 },\r\n                    { 1, 2 },\r\n                    { 1, 2 },\r\n                    { 1, 1 }\r\n                };\r\n            var expected = 4;\r\n\r\n            var res = new NumEquivDominoPairsSoln().NumEquivDominoPairs(ArrayMapper(dominoes));\r\n            Assert.AreEqual(expected, res);\r\n        }\r\n\r\n        private int[][] ArrayMapper(int[,] matrix)\r\n        {\r\n            var arr = new int[matrix.GetLength(0)][];\r\n            for (int i = 0; i &lt; matrix.GetLength(0); i++)\r\n            {\r\n                arr[i] = new int[matrix.GetLength(1)];\r\n                for (int j = 0; j &lt; matrix.GetLength(1); j++)\r\n                {\r\n                    arr[i][j] = matrix[i, j];\r\n                }\r\n            }\r\n\r\n            return arr;\r\n        }\r\n    }\r\n}\r\n</code></pre>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/02bf5547-6308-4ab0-8869-d1628c49c021-array.png","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"number-of-equivalent-domino-pairs-array-easy-leetcode","tags":[{"name":"c-sharp","slug":"c-sharp"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"आसान","slug":"easy"},{"name":"algorithm","slug":"algorithm"}],"recommendations":[{"id":1724,"title":"Maximum Number of Balls in a Box - Maths - Easy - LeetCode","imageUrl":"icon_2c5a52f4-2d58-4245-8e1c-47060f1505b8.jpg","dateCreated":"2021-02-13T12:35:08.09Z","dateModified":"2021-02-13T12:35:13.637Z","contributedBy":"sumitc91","content":"You are working in a ball factory where you have n balls numbered from lowLimit up to highLimit inclusive (i.e., n == highLimit - lowLimit + 1), and an infinite number of boxes numbered from 1 to infinity.\nYour job at this factory is to put each ball in the box with a number equal to the s","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/2c5a52f4-2d58-4245-8e1c-47060f1505b8.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"गणित","slug":"maths"}],"slug":"maximum-number-of-balls-in-a-box-maths-easy-leetcode","total":0},{"id":1721,"title":"Find the Highest Altitude - Array - Easy - LeetCode","imageUrl":"icon_0cd60e05-bb63-481c-ac68-c3417eabb1cb.jpg","dateCreated":"2021-01-26T09:15:18.731Z","dateModified":"2021-01-26T09:15:23.937Z","contributedBy":"sumitc91","content":"There is a biker going on a road trip. The road trip consists of n + 1 points at different altitudes. The biker starts his trip on point 0 with altitude equal 0.\nYou are given an integer array gain of length n where gain[i] is the net gain in altitude between points i​​​​​​ and i + 1 for a","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/0cd60e05-bb63-481c-ac68-c3417eabb1cb.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"find-the-highest-altitude-array-easy-leetcode","total":0},{"id":1676,"title":"Product of Array Except Self - Array - Medium - LeetCode","imageUrl":"icon_454cf76b-ed84-4192-9a20-cb564088e9c1.jpg","dateCreated":"2020-11-18T12:44:47.018Z","dateModified":"2020-11-18T12:44:53.26Z","contributedBy":"sumitc91","content":"Given an array nums of n integers where n &gt; 1, &nbsp;return an array output such that output[i] is equal to the product of all the elements of nums except nums[i].\nExample:\nInput: &nbsp;[1,2,3,4]<br />Output: [24,12,8,6]<br />Constraint: It's guaranteed that the product of the el","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/454cf76b-ed84-4192-9a20-cb564088e9c1.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"product-of-array-except-self-array-medium-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}