{"id":1369,"title":"Final Prices With a Special Discount in a Shop - Array - Easy - LeetCode","imageUrl":"b772ba9c-b1cd-4b9b-9e88-580b9776e5c2-array.png","dateCreated":"2020-06-17T10:02:54.974Z","dateModified":"2020-06-17T10:03:27.798Z","contributedBy":"AskGif","content":"<p>Given the array prices where prices[i] is the price of the ith item in a shop. There is a special discount for items in the shop, if you buy the ith item, then you will receive a discount equivalent to prices[j] where j is the minimum index such that j &gt; i and prices[j] &lt;= prices[i], otherwise, you will not receive any discount at all.</p>\r\n<p>Return an array where the ith element is the final price you will pay for the ith item of the shop considering the special discount.</p>\r\n<p>&nbsp;</p>\r\n<p>Example 1:</p>\r\n<p>Input: prices = [8,4,6,2,3]</p>\r\n<p>Output: [4,2,4,2,3]</p>\r\n<p>Explanation:&nbsp;</p>\r\n<p>For item 0 with price[0]=8 you will receive a discount equivalent to prices[1]=4, therefore, the final price you will pay is 8 - 4 = 4.&nbsp;</p>\r\n<p>For item 1 with price[1]=4 you will receive a discount equivalent to prices[3]=2, therefore, the final price you will pay is 4 - 2 = 2.&nbsp;</p>\r\n<p>For item 2 with price[2]=6 you will receive a discount equivalent to prices[3]=2, therefore, the final price you will pay is 6 - 2 = 4.&nbsp;</p>\r\n<p>For items 3 and 4 you will not receive any discount at all.</p>\r\n<p>&nbsp;</p>\r\n<p>Example 2:</p>\r\n<p>Input: prices = [1,2,3,4,5]</p>\r\n<p>Output: [1,2,3,4,5]</p>\r\n<p>Explanation: In this case, for all items, you will not receive any discount at all.</p>\r\n<p>&nbsp;</p>\r\n<p>Example 3:</p>\r\n<p>Input: prices = [10,1,1,6]</p>\r\n<p>Output: [9,0,1,6]</p>\r\n<p>&nbsp;</p>\r\n<p>Constraints:</p>\r\n<p>1 &lt;= prices.length &lt;= 500</p>\r\n<p>1 &lt;= prices[i] &lt;= 10^3</p>\r\n<p>&nbsp;</p>\r\n<p>Solution:</p>\r\n<pre class=\"language-csharp\"><code>using System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace LeetCode.AskGif.Easy.Array\r\n{\r\n    public class FinalPricesSoln\r\n    {\r\n        public int[] FinalPrices(int[] prices)\r\n        {\r\n            var discount = new int[prices.Length];\r\n            for (int i = 0; i &lt; prices.Length; i++)\r\n            {\r\n                discount[i] = prices[i];\r\n                for (int j = i+1; j &lt; prices.Length; j++)\r\n                {\r\n                    if(prices[j] &lt;= prices[i])\r\n                    {\r\n                        discount[i] = prices[i] - prices[j];\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return discount;\r\n        }\r\n    }\r\n}\r\n</code></pre>\r\n<p>Time Complexity: O(n^2)</p>\r\n<p>Space Complexity: O(n) To store results.</p>\r\n<p>&nbsp;</p>\r\n<p>Unit Tests:</p>\r\n<pre class=\"language-csharp\"><code>using LeetCode.AskGif.Easy.Array;\r\nusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace CodingUnitTest.Easy.Array\r\n{\r\n    [TestClass]\r\n    public class FinalPricesSolnTests\r\n    {\r\n        [TestMethod]\r\n        public void FinalPricesSoln_First()\r\n        {\r\n            var prices = new[] { 8, 4, 6, 2, 3 };\r\n            var expected = new int[] { 4, 2, 4, 2, 3 };\r\n\r\n            var res = new FinalPricesSoln().FinalPrices(prices);\r\n            AreEqual(expected, res);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void FinalPricesSoln_Second()\r\n        {\r\n            var prices = new[] { 1, 2, 3, 4, 5 };\r\n            var expected = new int[] { 1, 2, 3, 4, 5 };\r\n\r\n            var res = new FinalPricesSoln().FinalPrices(prices);\r\n            AreEqual(expected, res);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void FinalPricesSoln_Third()\r\n        {\r\n            var prices = new[] { 10, 1, 1, 6 };\r\n            var expected = new int[] { 9, 0, 1, 6 };\r\n\r\n            var res = new FinalPricesSoln().FinalPrices(prices);\r\n            AreEqual(expected, res);\r\n        }\r\n\r\n        private void AreEqual(int[] res, int[] output)\r\n        {\r\n            Assert.AreEqual(res.Length, output.Length);\r\n            for (int i = 0; i &lt; res.Length; i++)\r\n            {\r\n                Assert.AreEqual(res[i], output[i]);\r\n            }\r\n        }\r\n    }\r\n}\r\n</code></pre>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/b772ba9c-b1cd-4b9b-9e88-580b9776e5c2-array.png","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"final-prices-with-a-special-discount-in-a-shop-array-easy-leetcode","tags":[{"name":"c-sharp","slug":"c-sharp"},{"name":"algorithm","slug":"algorithm"},{"name":"leetcode","slug":"leetcode"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"array","slug":"array"},{"name":"आसान","slug":"easy"}],"recommendations":[{"id":1629,"title":"Maximum Nesting Depth of the Parentheses - Stack - Easy - LeetCode","imageUrl":"icon_9d515e72-4c83-4541-9650-c0972215972d.jpg","dateCreated":"2020-10-18T08:20:30.391Z","dateModified":"2020-10-18T08:20:41.012Z","contributedBy":"sumitc91","content":"A string is a valid parentheses string (denoted VPS) if it meets one of the following:\nIt is an empty string \"\", or a single character not equal to \"(\" or \")\",<br />It can be written as AB (A concatenated with B), where A and B are VPS's, or<br />It can be written as (A), where A is a VPS.","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/9d515e72-4c83-4541-9650-c0972215972d.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"stack","slug":"stack"}],"slug":"maximum-nesting-depth-of-the-parentheses-stack-easy-leetcode","total":0},{"id":1609,"title":"Customers Who Never Order - Sql - Easy - LeetCode","imageUrl":"icon_3979029e-3ead-4244-a16d-a1344d80e6ec.jpg","dateCreated":"2020-10-16T07:20:40.745Z","dateModified":"2020-10-16T07:20:46.124Z","contributedBy":"sumitc91","content":"Suppose that a website contains two tables, the Customers table and the Orders table. Write a SQL query to find all customers who never order anything.\nTable: Customers.\n+----+-------+<br />| Id | Name &nbsp;|<br />+----+-------+<br />| 1 &nbsp;| Joe &nbsp; |<br />| 2 &nbsp;| Henry ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/3979029e-3ead-4244-a16d-a1344d80e6ec.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"mysql","slug":"mysql"},{"name":"sql","slug":"sql"}],"slug":"customers-who-never-order-sql-easy-leetcode","total":0},{"id":1597,"title":"Flood Fill - Tree - Easy - LeetCode","imageUrl":"icon_0e3c9311-ee03-4845-8887-471eb8b67c05.jpg","dateCreated":"2020-10-09T13:26:25.345Z","dateModified":"2020-10-09T13:26:36.925Z","contributedBy":"sumitc91","content":"An image is represented by a 2-D array of integers, each integer representing the pixel value of the image (from 0 to 65535).\nGiven a coordinate (sr, sc) representing the starting pixel (row and column) of the flood fill, and a pixel value newColor, \"flood fill\" the image.\nTo perfor","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/0e3c9311-ee03-4845-8887-471eb8b67c05.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"flood-fill-tree-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}