{"id":1374,"title":"Height Checker - Array - Easy - LeetCode","imageUrl":"54a48978-e3c5-4b16-bcca-6a41e6669bf8-array.png","dateCreated":"2020-06-19T08:45:20.284Z","dateModified":"2020-06-19T08:46:19.239Z","contributedBy":"AskGif","content":"<p>Students are asked to stand in non-decreasing order of heights for an annual photo.</p>\r\n<p>Return the minimum number of students that must move in order for all students to be standing in non-decreasing order of height.</p>\r\n<p>Notice that when a group of students is selected they can reorder in any possible way between themselves and the non selected students remain on their seats.</p>\r\n<p>&nbsp;</p>\r\n<p>Example 1:</p>\r\n<p>Input: heights = [1,1,4,2,1,3]</p>\r\n<p>Output: 3</p>\r\n<p>Explanation:&nbsp;</p>\r\n<p>Current array : [1,1,4,2,1,3]</p>\r\n<p>Target array&nbsp; : [1,1,1,2,3,4]</p>\r\n<p>On index 2 (0-based) we have 4 vs 1 so we have to move this student.</p>\r\n<p>On index 4 (0-based) we have 1 vs 3 so we have to move this student.</p>\r\n<p>On index 5 (0-based) we have 3 vs 4 so we have to move this student.</p>\r\n<p>&nbsp;</p>\r\n<p>Example 2:</p>\r\n<p>Input: heights = [5,1,2,3,4]</p>\r\n<p>Output: 5</p>\r\n<p>&nbsp;</p>\r\n<p>Example 3:</p>\r\n<p>Input: heights = [1,2,3,4,5]</p>\r\n<p>Output: 0</p>\r\n<p>&nbsp;</p>\r\n<p>Constraints:</p>\r\n<p>&nbsp;</p>\r\n<p>1 &lt;= heights.length &lt;= 100</p>\r\n<p>1 &lt;= heights[i] &lt;= 100</p>\r\n<p>&nbsp;</p>\r\n<p>Solution:</p>\r\n<pre class=\"language-csharp\"><code>using System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Text;\r\n\r\nnamespace LeetCode.AskGif.Easy.Array\r\n{\r\n    public class HeightCheckerSoln\r\n    {\r\n        public int HeightChecker(int[] heights)\r\n        {\r\n            var copy = new int[heights.Length];\r\n            copy = heights;\r\n\r\n            copy = copy.OrderBy(c =&gt; c).ToArray();\r\n\r\n            int count = 0;\r\n            for (int i = 0; i &lt; heights.Length; i++)\r\n            {\r\n                if (copy[i] != heights[i])\r\n                {\r\n                    count++;\r\n                }\r\n            }\r\n\r\n            return count;\r\n        }\r\n    }\r\n}\r\n</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Time Complexity: O(nlogn)</p>\r\n<p>Space Complexity: O(n)</p>\r\n<p>&nbsp;</p>\r\n<p>Unit Tests:</p>\r\n<pre class=\"language-csharp\"><code>using LeetCode.AskGif.Easy.Array;\r\nusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace CodingUnitTest.Easy.Array\r\n{\r\n    [TestClass]\r\n    public class HeightCheckerSolnTests\r\n    {\r\n        [TestMethod]\r\n        public void HeightCheckerSoln_First()\r\n        {\r\n            var arr = new int[] { 1, 1, 4, 2, 1, 3 };\r\n            var expected = 3;\r\n\r\n            var res = new HeightCheckerSoln().HeightChecker(arr);\r\n            Assert.AreEqual(expected, res);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void HeightCheckerSoln_Second()\r\n        {\r\n            var arr = new int[] { 5, 1, 2, 3, 4 };\r\n            var expected = 5;\r\n\r\n            var res = new HeightCheckerSoln().HeightChecker(arr);\r\n            Assert.AreEqual(expected, res);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void HeightCheckerSoln_Third()\r\n        {\r\n            var arr = new int[] { 1, 2, 3, 4, 5 };\r\n            var expected = 0;\r\n\r\n            var res = new HeightCheckerSoln().HeightChecker(arr);\r\n            Assert.AreEqual(expected, res);\r\n        }\r\n    }\r\n}\r\n</code></pre>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/54a48978-e3c5-4b16-bcca-6a41e6669bf8-array.png","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"height-checker-array-easy-leetcode","tags":[{"name":"c-sharp","slug":"c-sharp"},{"name":"array","slug":"array"},{"name":"आसान","slug":"easy"},{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"}],"recommendations":[{"id":1716,"title":"Maximum Units on a Truck - Array - Easy - LeetCode","imageUrl":"icon_3aedf9be-e325-4d16-b5ad-e180a12291dc.jpg","dateCreated":"2021-01-08T09:45:52.965Z","dateModified":"2021-01-08T09:46:00.078Z","contributedBy":"sumitc91","content":"You are assigned to put some amount of boxes onto one truck. You are given a 2D array boxTypes, where boxTypes[i] = [numberOfBoxesi, numberOfUnitsPerBoxi]:\nnumberOfBoxesi is the number of boxes of type i.<br />numberOfUnitsPerBoxi is the number of units in each box of the type i.<br />You ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/3aedf9be-e325-4d16-b5ad-e180a12291dc.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"maximum-units-on-a-truck-array-easy-leetcode","total":0},{"id":1653,"title":"Set Matrix Zeroes - Array - Medium - LeetCode","imageUrl":"icon_42006195-6b88-4b4d-a2d3-c695139d16b7.jpg","dateCreated":"2020-10-31T09:17:26.973Z","dateModified":"2020-10-31T09:17:33.085Z","contributedBy":"sumitc91","content":"Given an m x n matrix. If an element is 0, set its entire row and column to 0. Do it in-place.\nFollow up:\nA straight forward solution using O(mn) space is probably a bad idea.<br />A simple improvement uses O(m + n) space, but still not the best solution.<br />Could you devise a con","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/42006195-6b88-4b4d-a2d3-c695139d16b7.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"set-matrix-zeroes-array-medium-leetcode","total":0},{"id":1622,"title":"Rotate String - String - Easy - LeetCode","imageUrl":"icon_cfadbae1-5a57-4a8d-8e75-47f7f8493641.jpg","dateCreated":"2020-10-17T06:43:07.643Z","dateModified":"2020-10-17T06:43:14.01Z","contributedBy":"sumitc91","content":"We are given two strings, A and B.\nA shift on A consists of taking string A and moving the leftmost character to the rightmost position. For example, if A = 'abcde', then it will be 'bcdea' after one shift on A. Return True if and only if A can become B after some number of shifts on A.</p","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/021208ce-72e5-4026-a526-0c8b482a8d72.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"string","slug":"string"}],"slug":"rotate-string-string-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}