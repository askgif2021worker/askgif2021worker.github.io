{"id":1375,"title":"Binary Prefix Divisible By 5 - Array - Easy - LeetCode","imageUrl":"4f3aed77-fe8b-4c51-a1d4-c52db0694eca-array.png","dateCreated":"2020-06-19T10:04:59.867Z","dateModified":"2020-06-19T10:05:13.253Z","contributedBy":"AskGif","content":"<p>Given an array A of 0s and 1s, consider N_i: the i-th subarray from A[0] to A[i] interpreted as a binary number (from most-significant-bit to least-significant-bit.)</p>\r\n<p>Return a list of booleans answer, where answer[i] is true if and only if N_i is divisible by 5.</p>\r\n<p>&nbsp;</p>\r\n<p>Example 1:</p>\r\n<p>Input: [0,1,1]</p>\r\n<p>Output: [true,false,false]</p>\r\n<p>Explanation:&nbsp;</p>\r\n<p>The input numbers in binary are 0, 01, 011; which are 0, 1, and 3 in base-10.&nbsp; Only the first number is divisible by 5, so answer[0] is true.</p>\r\n<p>&nbsp;</p>\r\n<p>Example 2:</p>\r\n<p>Input: [1,1,1]</p>\r\n<p>Output: [false,false,false]</p>\r\n<p>&nbsp;</p>\r\n<p>Example 3:</p>\r\n<p>Input: [0,1,1,1,1,1]</p>\r\n<p>Output: [true,false,false,false,true,false]</p>\r\n<p>&nbsp;</p>\r\n<p>Example 4:</p>\r\n<p>Input: [1,1,1,0,1]</p>\r\n<p>Output: [false,false,false,false,false]</p>\r\n<p>&nbsp;</p>\r\n<p>Note:</p>\r\n<p>1 &lt;= A.length &lt;= 30000</p>\r\n<p>A[i] is 0 or 1</p>\r\n<p>&nbsp;</p>\r\n<p>Solution:</p>\r\n<pre class=\"language-csharp\"><code>using System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace LeetCode.AskGif.Easy.Array\r\n{\r\n    public class PrefixesDivBy5Soln\r\n    {\r\n        public IList&lt;bool&gt; PrefixesDivBy5(int[] A)\r\n        {\r\n            if (A == null || A.Length &lt;= 0) return null;\r\n            int num = 0;\r\n            var list = new List&lt;bool&gt;();\r\n            foreach (var i in A)            \r\n            {\r\n                num = (num * 2 + i) % 5;\r\n                if (num == 0)\r\n                {\r\n                    list.Add(true);\r\n                }\r\n                else\r\n                {\r\n                    list.Add(false);\r\n                }\r\n            }\r\n            return list;\r\n        }\r\n    }\r\n}\r\n</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Time Complexity: O(n)</p>\r\n<p>Space Complexity: O(1)</p>\r\n<p>&nbsp;</p>\r\n<p>Unit Tests:</p>\r\n<pre class=\"language-csharp\"><code>using LeetCode.AskGif.Easy.Array;\r\nusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace CodingUnitTest.Easy.Array\r\n{\r\n    [TestClass]\r\n    public class PrefixesDivBy5SolnTests\r\n    {\r\n        [TestMethod]\r\n        public void PrefixesDivBy5Soln_First()\r\n        {\r\n            var arr = new int[] { 0, 1, 1 };\r\n            var expected = new bool[] { true, false, false };\r\n\r\n            var res = new PrefixesDivBy5Soln().PrefixesDivBy5(arr);\r\n            AreEqual(expected, res);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void PrefixesDivBy5Soln_Second()\r\n        {\r\n            var arr = new int[] { 1, 1, 1 };\r\n            var expected = new bool[] { false, false, false };\r\n\r\n            var res = new PrefixesDivBy5Soln().PrefixesDivBy5(arr);\r\n            AreEqual(expected, res);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void PrefixesDivBy5Soln_Third()\r\n        {\r\n            var arr = new int[] { 0, 1, 1, 1, 1, 1 };\r\n            var expected = new bool[] { true, false, false, false, true, false };\r\n\r\n            var res = new PrefixesDivBy5Soln().PrefixesDivBy5(arr);\r\n            AreEqual(expected, res);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void PrefixesDivBy5Soln_Fourth()\r\n        {\r\n            var arr = new int[] { 1, 1, 1, 0, 1 };\r\n            var expected = new bool[] { false, false, false, false, false };\r\n\r\n            var res = new PrefixesDivBy5Soln().PrefixesDivBy5(arr);\r\n            AreEqual(expected, res);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void PrefixesDivBy5Soln_Fifth()\r\n        {\r\n            var arr = new int[] { 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1 };\r\n            var expected = new bool[] { false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, false, false, true, true, true, true, false };\r\n\r\n            var res = new PrefixesDivBy5Soln().PrefixesDivBy5(arr);\r\n            AreEqual(expected, res);\r\n        }\r\n\r\n        private void AreEqual(bool[] res, IList&lt;bool&gt; output)\r\n        {\r\n            Assert.AreEqual(res.Length, output.Count);\r\n            for (int i = 0; i &lt; res.Length; i++)\r\n            {\r\n                Assert.AreEqual(res[i], output[i]);\r\n            }\r\n        }\r\n    }\r\n}\r\n</code></pre>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/4f3aed77-fe8b-4c51-a1d4-c52db0694eca-array.png","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"binary-prefix-divisible-by-5-array-easy-leetcode","tags":[{"name":"leetcode","slug":"leetcode"},{"name":"easy","slug":"easy"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"c-sharp","slug":"c-sharp"},{"name":"algorithm","slug":"algorithm"}],"recommendations":[{"id":1719,"title":"Decode XORed Array - Array - Easy - LeetCode","imageUrl":"icon_e7567a26-e981-4e66-9863-f88f7de7e66d.jpg","dateCreated":"2021-01-10T05:22:37.138Z","dateModified":"2021-01-10T05:22:41.53Z","contributedBy":"sumitc91","content":"There is a hidden integer array arr that consists of n non-negative integers.\nIt was encoded into another integer array encoded of length n - 1, such that encoded[i] = arr[i] XOR arr[i + 1]. For example, if arr = [1,0,2,1], then encoded = [1,2,3].\nYou are given the encoded array. Yo","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/e7567a26-e981-4e66-9863-f88f7de7e66d.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"decode-xored-array-array-easy-leetcode","total":0},{"id":1640,"title":"Find First and Last Position of Element in Sorted Array - Array - Medium - LeetCode","imageUrl":"icon_4dd548b4-7f64-4384-8000-de99e5e3a765.jpg","dateCreated":"2020-10-25T13:25:33.524Z","dateModified":"2020-10-25T13:25:43.128Z","contributedBy":"sumitc91","content":"Given an array of integers nums sorted in ascending order, find the starting and ending position of a given target value.\nIf the target is not found in the array, return [-1, -1].\nFollow up: Could you write an algorithm with O(log n) runtime complexity?\n&nbsp;\nExample ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/4dd548b4-7f64-4384-8000-de99e5e3a765.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"find-first-and-last-position-of-element-in-sorted-array-array-medium-leetcode","total":0},{"id":1626,"title":"Reformat Department Table - Sql - Easy - LeetCode","imageUrl":"icon_59cdadef-bfee-4b37-bafa-ad7569c32e3f.jpg","dateCreated":"2020-10-18T04:10:25.839Z","dateModified":"2020-10-18T04:10:34.638Z","contributedBy":"sumitc91","content":"Table: Department\n+---------------+---------+<br />| Column Name &nbsp; | Type &nbsp; &nbsp;|<br />+---------------+---------+<br />| id &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;| int &nbsp; &nbsp; |<br />| revenue &nbsp; &nbsp; &nbsp; | int &nbsp; &nbsp; |<br />| month &nbsp; &nbsp; &nbsp","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/59cdadef-bfee-4b37-bafa-ad7569c32e3f.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"mysql","slug":"mysql"},{"name":"sql","slug":"sql"}],"slug":"reformat-department-table-sql-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}