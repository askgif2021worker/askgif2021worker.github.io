{"id":1378,"title":"Pairs of Songs With Total Durations Divisible by 60 - Array - Easy - LeetCode","imageUrl":"2c69191e-b401-4862-9a04-9deee401d358-array.png","dateCreated":"2020-06-20T10:34:18.22Z","dateModified":"2020-06-20T10:34:32.571Z","contributedBy":"AskGif","content":"<p>In a list of songs, the i-th song has a duration of time[i] seconds.&nbsp;</p>\r\n<p>Return the number of pairs of songs for which their total duration in seconds is divisible by 60.&nbsp; Formally, we want the number of indices i, j such that i &lt; j with (time[i] + time[j]) % 60 == 0.</p>\r\n<p>&nbsp;</p>\r\n<p>Example 1:</p>\r\n<p>Input: [30,20,150,100,40]</p>\r\n<p>Output: 3</p>\r\n<p>Explanation: Three pairs have a total duration divisible by 60:</p>\r\n<p>(time[0] = 30, time[2] = 150): total duration 180</p>\r\n<p>(time[1] = 20, time[3] = 100): total duration 120</p>\r\n<p>(time[1] = 20, time[4] = 40): total duration 60</p>\r\n<p>&nbsp;</p>\r\n<p>Example 2:</p>\r\n<p>Input: [60,60,60]</p>\r\n<p>Output: 3</p>\r\n<p>Explanation: All three pairs have a total duration of 120, which is divisible by 60.</p>\r\n<p>&nbsp;</p>\r\n<p>Note:</p>\r\n<p>1 &lt;= time.length &lt;= 60000</p>\r\n<p>1 &lt;= time[i] &lt;= 500</p>\r\n<p>&nbsp;</p>\r\n<p>Solution:</p>\r\n<pre class=\"language-csharp\"><code>using System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace LeetCode.AskGif.Easy.Array\r\n{\r\n    public class NumPairsDivisibleBy60Soln\r\n    {\r\n        public int NumPairsDivisibleBy60(int[] time)\r\n        {\r\n            var map = new Dictionary&lt;int, int&gt;();\r\n            int count = 0;\r\n            int val = 0;\r\n            int diff = 0;\r\n            for (int i = 0; i &lt; time.Length; i++)\r\n            {\r\n                val = time[i] % 60;\r\n                diff = (60 - val) % 60;\r\n                if (map.ContainsKey(diff))\r\n                {\r\n                    count += map[diff];\r\n                }\r\n\r\n                if (map.ContainsKey(val))\r\n                {\r\n                    map[val]++;\r\n                }\r\n                else\r\n                {\r\n                    map.Add(val, 1);\r\n                }\r\n            }\r\n\r\n            return count;\r\n        }\r\n    }\r\n}\r\n</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Time Complexity: O(n)</p>\r\n<p>Space Complexity: O(n)</p>\r\n<p>&nbsp;</p>\r\n<p>Unit Tests:</p>\r\n<pre class=\"language-csharp\"><code>using LeetCode.AskGif.Easy.Array;\r\nusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace CodingUnitTest.Easy.Array\r\n{\r\n    [TestClass]\r\n    public class NumPairsDivisibleBy60SolnTests\r\n    {\r\n        [TestMethod]\r\n        public void NumPairsDivisibleBy60Soln_First()\r\n        {\r\n            var arr = new int[] { 30, 20, 150, 100, 40 };\r\n            var expected = 3;\r\n\r\n            var res = new NumPairsDivisibleBy60Soln().NumPairsDivisibleBy60(arr);\r\n            Assert.AreEqual(expected, res);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void NumPairsDivisibleBy60Soln_Second()\r\n        {\r\n            var arr = new int[] { 60, 60, 60 };\r\n            var expected = 3;\r\n\r\n            var res = new NumPairsDivisibleBy60Soln().NumPairsDivisibleBy60(arr);\r\n            Assert.AreEqual(expected, res);\r\n        }\r\n    }\r\n}\r\n</code></pre>\r\n<p>&nbsp;</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/2c69191e-b401-4862-9a04-9deee401d358-array.png","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"pairs-of-songs-with-total-durations-divisible-by-60-array-easy-leetcode","tags":[{"name":"आसान","slug":"easy"},{"name":"algorithm","slug":"algorithm"},{"name":"leetcode","slug":"leetcode"},{"name":"c-sharp","slug":"c-sharp"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"}],"recommendations":[{"id":1718,"title":"Calculate Money in Leetcode Bank - Maths - Easy - LeetCode","imageUrl":"icon_8f7ac85a-3434-4f99-ba13-6b64b13831b7.jpg","dateCreated":"2021-01-10T05:17:33.968Z","dateModified":"2021-01-10T05:17:40.265Z","contributedBy":"sumitc91","content":"Hercy wants to save money for his first car. He puts money in the Leetcode bank every day.\nHe starts by putting in $1 on Monday, the first day. Every day from Tuesday to Sunday, he will put in $1 more than the day before. On every subsequent Monday, he will put in $1 more than the previous","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/8f7ac85a-3434-4f99-ba13-6b64b13831b7.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"गणित","slug":"maths"}],"slug":"calculate-money-in-leetcode-bank-maths-easy-leetcode","total":0},{"id":1667,"title":"Construct Binary Tree from Inorder and Postorder Traversal - Array - Medium - LeetCode","imageUrl":"icon_eeacf71f-bde9-47d7-bf9d-4f6212eb787e.jpg","dateCreated":"2020-11-17T10:15:10.097Z","dateModified":"2020-11-17T10:15:16.628Z","contributedBy":"sumitc91","content":"Given inorder and postorder traversal of a tree, construct the binary tree.\nNote:<br />You may assume that duplicates do not exist in the tree.\nFor example, given\ninorder = [9,3,15,20,7]<br />postorder = [9,15,7,20,3]<br />Return the following binary tree:\n&nbsp; &nbsp","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/eeacf71f-bde9-47d7-bf9d-4f6212eb787e.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"construct-binary-tree-from-inorder-and-postorder-traversal-array-medium-leetcode","total":0},{"id":1665,"title":"Subsets II - Array - Medium - LeetCode","imageUrl":"icon_aaa8f566-bd39-4867-a4ad-9d2ec8eb9fec.jpg","dateCreated":"2020-11-17T08:34:58.632Z","dateModified":"2020-11-17T08:35:04.765Z","contributedBy":"sumitc91","content":"Given a collection of integers that might contain duplicates, nums, return all possible subsets (the power set).\nNote: The solution set must not contain duplicate subsets.\nExample:\nInput: [1,2,2]<br />Output:<br />[<br />&nbsp; [2],<br />&nbsp; [1],<br />&nbsp; [1,2,2],<br />","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/aaa8f566-bd39-4867-a4ad-9d2ec8eb9fec.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"subsets-ii-array-medium-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}