{"id":1387,"title":"Sum of Even Numbers After Queries - Array - Easy - LeetCode","imageUrl":"fff8b364-2d42-4ce1-a8ff-c1ff0a972594-array.png","dateCreated":"2020-06-22T14:12:25.249Z","dateModified":"2020-06-22T14:12:41.673Z","contributedBy":"AskGif","content":"<p>We have an array A of integers, and an array queries of queries.</p>\r\n<p>For the i-th query val = queries[i][0], index = queries[i][1], we add val to A[index].&nbsp; Then, the answer to the i-th query is the sum of the even values of A.</p>\r\n<p>(Here, the given index = queries[i][1] is a 0-based index, and each query permanently modifies the array A.)</p>\r\n<p>Return the answer to all queries.&nbsp; Your answer array should have answer[i] as the answer to the i-th query.</p>\r\n<p>&nbsp;</p>\r\n<p>Example 1:</p>\r\n<p>Input: A = [1,2,3,4], queries = [[1,0],[-3,1],[-4,0],[2,3]]</p>\r\n<p>Output: [8,6,2,4]</p>\r\n<p>Explanation:&nbsp;</p>\r\n<p>At the beginning, the array is [1,2,3,4].</p>\r\n<p>After adding 1 to A[0], the array is [2,2,3,4], and the sum of even values is 2 + 2 + 4 = 8.</p>\r\n<p>After adding -3 to A[1], the array is [2,-1,3,4], and the sum of even values is 2 + 4 = 6.</p>\r\n<p>After adding -4 to A[0], the array is [-2,-1,3,4], and the sum of even values is -2 + 4 = 2.</p>\r\n<p>After adding 2 to A[3], the array is [-2,-1,3,6], and the sum of even values is -2 + 6 = 4.</p>\r\n<p>&nbsp;</p>\r\n<p>Note:</p>\r\n<p>1 &lt;= A.length &lt;= 10000</p>\r\n<p>-10000 &lt;= A[i] &lt;= 10000</p>\r\n<p>1 &lt;= queries.length &lt;= 10000</p>\r\n<p>-10000 &lt;= queries[i][0] &lt;= 10000</p>\r\n<p>0 &lt;= queries[i][1] &lt; A.length</p>\r\n<p>&nbsp;</p>\r\n<p>Solution:</p>\r\n<pre class=\"language-csharp\"><code>using System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace LeetCode.AskGif.Easy.Array\r\n{\r\n    public class SumEvenAfterQueriesSoln\r\n    {\r\n        public int[] SumEvenAfterQueries(int[] A, int[][] queries)\r\n        {\r\n            var res = new int[A.Length];\r\n            var sumEven = 0;\r\n            int add = 0;\r\n            for (int i = 0; i &lt; A.Length; i++)\r\n            {\r\n                if(A[i] % 2 == 0)\r\n                {\r\n                    sumEven += A[i];\r\n                }\r\n            }\r\n\r\n            for (int i = 0; i &lt; A.Length; i++)\r\n            {\r\n                add = A[queries[i][1]] + queries[i][0];\r\n\r\n                //delete old value in sumEven\r\n                if (A[queries[i][1]] % 2 == 0)\r\n                {\r\n                    sumEven -= A[queries[i][1]];\r\n                }\r\n\r\n                //update new value in sumEven\r\n                if(add % 2 == 0)\r\n                {\r\n                    sumEven += add;\r\n                }\r\n\r\n                //update array\r\n                A[queries[i][1]] = add;\r\n\r\n                res[i] = sumEven;\r\n            }\r\n\r\n            return res;\r\n        }\r\n    }\r\n}\r\n</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Time Complexity: O(n)</p>\r\n<p>Space Complexity: O(1)</p>\r\n<p>&nbsp;</p>\r\n<p>Unit Tests:</p>\r\n<pre class=\"language-csharp\"><code>using LeetCode.AskGif.Easy.Array;\r\nusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace CodingUnitTest.Easy.Array\r\n{\r\n    [TestClass]\r\n    public class SumEvenAfterQueriesSolnTests\r\n    {\r\n        [TestMethod]\r\n        public void SumEvenAfterQueriesSoln_First()\r\n        {\r\n            var A = new int[] { 1, 2, 3, 4 };\r\n            var queries = new int[,] {\r\n                {1, 0 },\r\n                {-3, 1 },\r\n                {-4, 0 },\r\n                { 2, 3 }\r\n            };\r\n            var expected = new int[] { 8, 6, 2, 4 };\r\n\r\n            var res = new SumEvenAfterQueriesSoln().SumEvenAfterQueries(A, ArrayMapper(queries));\r\n            AreEqual(expected, res);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void SumEvenAfterQueriesSoln_Second()\r\n        {\r\n            var A = new int[] { 5, 5, 4 };\r\n            var queries = new int[,] {                \r\n                {0, 1 },\r\n                {1, 0 },\r\n                { 4, 1 }\r\n            };\r\n            var expected = new int[] { 4, 10, 10 };\r\n\r\n            var res = new SumEvenAfterQueriesSoln().SumEvenAfterQueries(A, ArrayMapper(queries));\r\n            AreEqual(expected, res);\r\n        }\r\n\r\n        private void AreEqual(int[] res, int[] output)\r\n        {\r\n            Assert.AreEqual(res.Length, output.Length);\r\n            for (int i = 0; i &lt; res.Length; i++)\r\n            {\r\n                Assert.AreEqual(res[i], output[i]);\r\n            }\r\n        }\r\n\r\n        private int[][] ArrayMapper(int[,] matrix)\r\n        {\r\n            var arr = new int[matrix.GetLength(0)][];\r\n            for (int i = 0; i &lt; matrix.GetLength(0); i++)\r\n            {\r\n                arr[i] = new int[matrix.GetLength(1)];\r\n                for (int j = 0; j &lt; matrix.GetLength(1); j++)\r\n                {\r\n                    arr[i][j] = matrix[i, j];\r\n                }\r\n            }\r\n\r\n            return arr;\r\n        }\r\n    }\r\n}\r\n</code></pre>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/fff8b364-2d42-4ce1-a8ff-c1ff0a972594-array.png","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"sum-of-even-numbers-after-queries-array-easy-leetcode","tags":[{"name":"आसान","slug":"easy"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"c-sharp","slug":"c-sharp"},{"name":"algorithm","slug":"algorithm"}],"recommendations":[{"id":1727,"title":"Check if Array Is Sorted and Rotated - Array - Easy - LeetCode","imageUrl":"icon_2110d383-81cb-448a-8e4f-3773ff37294d.jpg","dateCreated":"2021-03-31T05:53:14.382Z","dateModified":"2021-03-31T05:53:27.431Z","contributedBy":"sumitc91","content":"Given an array nums, return true if the array was originally sorted in non-decreasing order, then rotated some number of positions (including zero). Otherwise, return false.\nThere may be duplicates in the original array.\nNote: An array A rotated by x positions results in an array B ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/2110d383-81cb-448a-8e4f-3773ff37294d.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"check-if-array-is-sorted-and-rotated-array-easy-leetcode","total":0},{"id":1711,"title":"Count of Matches in Tournament - String - Easy - LeetCode","imageUrl":"icon_d4fba4b6-ab89-4548-aaf7-f9918522d7dd.jpg","dateCreated":"2020-12-28T14:11:46.984Z","dateModified":"2020-12-28T14:11:55.184Z","contributedBy":"sumitc91","content":"You are given an integer n, the number of teams in a tournament that has strange rules:\nIf the current number of teams is even, each team gets paired with another team. A total of n / 2 matches are played, and n / 2 teams advance to the next round.<br />If the current number of teams is od","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/d4fba4b6-ab89-4548-aaf7-f9918522d7dd.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"string","slug":"string"}],"slug":"count-of-matches-in-tournament-string-easy-leetcode","total":0},{"id":1603,"title":"Moving Stones Until Consecutive - Brainteaser - Easy - LeetCode","imageUrl":"icon_e620d162-e256-4aff-b3fa-67c0a4795dd6.jpg","dateCreated":"2020-10-16T05:13:52.149Z","dateModified":"2020-10-16T05:14:17.79Z","contributedBy":"sumitc91","content":"Three stones are on a number line at positions a, b, and c.\nEach turn, you pick up a stone at an endpoint (ie., either the lowest or highest position stone), and move it to an unoccupied position between those endpoints. &nbsp;Formally, let's say the stones are currently at positions x, y,","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/e620d162-e256-4aff-b3fa-67c0a4795dd6.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"दिमागी-कसरत","slug":"brain-teaser"},{"name":"दिमागी-कसरत","slug":"brainteaser"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"moving-stones-until-consecutive-brainteaser-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}