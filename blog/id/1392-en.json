{"id":1392,"title":"Search Insert Position - Array - Easy - LeetCode","imageUrl":"icon_a1b25637-a4f0-4f29-9a04-99ddfeead7b1.jpg","dateCreated":"2020-09-25T07:23:24.121Z","dateModified":"2020-09-25T07:23:41.828Z","contributedBy":"sumitc91","content":"<p>Given a sorted array and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.</p>\n<p>You may assume no duplicates in the array.</p>\n<p>Example 1:</p>\n<p>Input: [1,3,5,6], 5<br />Output: 2<br />Example 2:</p>\n<p>Input: [1,3,5,6], 2<br />Output: 1<br />Example 3:</p>\n<p>Input: [1,3,5,6], 7<br />Output: 4<br />Example 4:</p>\n<p>Input: [1,3,5,6], 0<br />Output: 0</p>\n<p>&nbsp;</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    public int SearchInsert(int[] nums, int target) {\n        int l = 0;\n        int r = nums.Length-1;\n        int mid = 0;\n        while(l&lt;=r){            \n            mid = l + (r-l)/2;\n            Console.WriteLine($\"{l} : {r} : {mid}\");\n            if(nums[mid]&gt;target){\n                r = mid-1;\n            }\n            else if(nums[mid]&lt;target){\n                l = mid+1;\n            }\n            else if(nums[mid] == target){\n                return mid;\n            }\n        }\n        \n        return nums[mid]&gt;target?mid:mid+1;\n        \n    }\n}</code></pre>\n<p>&nbsp;</p>\n<p>Time Complexity: O(logn)</p>\n<p>Space Complexity: O(1)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a1b25637-a4f0-4f29-9a04-99ddfeead7b1.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"search-insert-position-array-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"recommendations":[{"id":1715,"title":"Determine if String Halves Are Alike - String - Easy - LeetCode","imageUrl":"icon_8d5b87e0-0bd8-47c9-8f55-cfff94e5858d.jpg","dateCreated":"2021-01-08T09:24:14.63Z","dateModified":"2021-01-08T09:24:20.084Z","contributedBy":"sumitc91","content":"You are given a string s of even length. Split this string into two halves of equal lengths, and let a be the first half and b be the second half.\nTwo strings are alike if they have the same number of vowels ('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'). Notice that s contains upperca","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/8d5b87e0-0bd8-47c9-8f55-cfff94e5858d.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"string","slug":"string"}],"slug":"determine-if-string-halves-are-alike-string-easy-leetcode","total":0},{"id":1625,"title":"Print in Order - Multi Threading - Easy - LeetCode","imageUrl":"icon_3e17a90d-8d3d-4655-9ad5-34bee8157e21.jpg","dateCreated":"2020-10-18T04:04:15.138Z","dateModified":"2020-10-18T04:04:52.636Z","contributedBy":"sumitc91","content":"Suppose we have a class:\npublic class Foo {<br />&nbsp; public void first() { print(\"first\"); }<br />&nbsp; public void second() { print(\"second\"); }<br />&nbsp; public void third() { print(\"third\"); }<br />}<br />The same instance of Foo will be passed to three different threads. Thread A","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/3e17a90d-8d3d-4655-9ad5-34bee8157e21.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"multi-threading","slug":"multi-threading"}],"slug":"print-in-order-multi-threading-easy-leetcode","total":0},{"id":1619,"title":"Classes More Than 5 Students - Sql - Easy - LeetCode","imageUrl":"icon_e71c8d7a-4f1f-4f65-8676-b2f2b13032cb.jpg","dateCreated":"2020-10-17T06:01:27.477Z","dateModified":"2020-10-17T06:01:38.886Z","contributedBy":"sumitc91","content":"There is a table courses with columns: student and class\nPlease list out all classes which have more than or equal to 5 students.\nFor example, the table:\n+---------+------------+<br />| student | class &nbsp; &nbsp; &nbsp;|<br />+---------+------------+<br />| A &nbsp; &nbsp;","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/e71c8d7a-4f1f-4f65-8676-b2f2b13032cb.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"sql","slug":"sql"}],"slug":"classes-more-than-5-students-sql-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}