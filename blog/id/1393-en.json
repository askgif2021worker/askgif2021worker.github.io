{"id":1393,"title":"Merge Sorted Array - Array - Easy - LeetCode","imageUrl":"icon_02b32bbd-c015-490d-8e8b-a74ef98ec2b0.png","dateCreated":"2020-09-25T08:32:32.823Z","dateModified":"2020-09-25T08:32:54.947Z","contributedBy":"sumitc91","content":"<pre class=\"language-csharp\"><code>public class Solution {\n    public void Merge(int[] nums1, int m, int[] nums2, int n) {\n        int i=m-1;\n        int j=n-1;\n        for(int x=m+n-1;x&gt;=0;x--){\n            if(i &gt;= 0 &amp;&amp; j &gt;= 0){\n                if(nums1[i]&gt;nums2[j]){\n                    nums1[x]=nums1[i];\n                    i--;\n                }\n                else{\n                    nums1[x]=nums2[j];\n                    j--;\n                }\n            }\n            else{\n                if(i&gt;=0){\n                    nums1[x]=nums1[i];\n                    i--;\n                }\n                if(j&gt;=0){\n                    nums1[x]=nums2[j];\n                    j--;\n                }\n            }\n            \n        }\n    }\n}</code></pre>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/02b32bbd-c015-490d-8e8b-a74ef98ec2b0.png","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"merge-sorted-array-array-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"recommendations":[{"id":1713,"title":"Reformat Phone Number - String - Easy - LeetCode","imageUrl":"icon_716c7816-48e6-45e6-840e-df068e41c6f6.jpg","dateCreated":"2021-01-05T04:21:52.889Z","dateModified":"2021-01-05T04:22:00.273Z","contributedBy":"sumitc91","content":"You are given a phone number as a string number. number consists of digits, spaces ' ', and/or dashes '-'.\nYou would like to reformat the phone number in a certain manner. Firstly, remove all spaces and dashes. Then, group the digits from left to right into blocks of length 3 until there a","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/716c7816-48e6-45e6-840e-df068e41c6f6.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"string","slug":"string"}],"slug":"reformat-phone-number-string-easy-leetcode","total":0},{"id":1705,"title":"Valid Triangle Number - Array - Medium - LeetCode","imageUrl":"icon_1cec6b01-c299-43b3-909b-3fb5fb1661e2.jpg","dateCreated":"2020-11-21T14:33:10.794Z","dateModified":"2020-11-21T14:33:17.755Z","contributedBy":"sumitc91","content":"Given an array consists of non-negative integers, your task is to count the number of triplets chosen from the array that can make triangles if we take them as side lengths of a triangle.<br />Example 1:<br />Input: [2,2,3,4]<br />Output: 3<br />Explanation:<br />Valid combinations are:&nbsp;<br ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/1cec6b01-c299-43b3-909b-3fb5fb1661e2.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"valid-triangle-number-array-medium-leetcode","total":0},{"id":1702,"title":"Subarray Sum Equals K - Array - Medium - LeetCode","imageUrl":"icon_5dec0e7e-af11-40c9-b0bb-98503e290084.jpg","dateCreated":"2020-11-21T04:33:22.934Z","dateModified":"2020-11-21T04:33:27.536Z","contributedBy":"sumitc91","content":"Given an array of integers nums and an integer k, return the total number of continuous subarrays whose sum equals to k.\n&nbsp;\nExample 1:\nInput: nums = [1,1,1], k = 2<br />Output: 2<br />Example 2:\nInput: nums = [1,2,3], k = 3<br />Output: 2<br />&nbsp;\nConstra","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/5dec0e7e-af11-40c9-b0bb-98503e290084.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"subarray-sum-equals-k-array-medium-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}