{"id":1394,"title":"Pascal's Triangle - Array - Easy - LeetCode","imageUrl":"icon_c3c29c5c-8b25-4372-bfcd-abed88f6f7e1.jpg","dateCreated":"2020-09-25T09:40:21.349Z","dateModified":"2020-09-25T09:40:34.078Z","contributedBy":"sumitc91","content":"<p>Given a non-negative integer numRows, generate the first numRows of Pascal's triangle.</p>\n<p><br />In Pascal's triangle, each number is the sum of the two numbers directly above it.</p>\n<p>Example:</p>\n<p>Input: 5<br />Output:<br />[<br />&nbsp; &nbsp; &nbsp;[1],<br />&nbsp; &nbsp; [1,1],<br />&nbsp; &nbsp;[1,2,1],<br />&nbsp; [1,3,3,1],<br />&nbsp;[1,4,6,4,1]<br />]</p>\n<p>&nbsp;</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    public IList&lt;IList&lt;int&gt;&gt; Generate(int numRows) {\n        var result = new List&lt;IList&lt;int&gt;&gt;();\n        if(numRows == 0){\n            return result;\n        }\n        var list = new List&lt;int&gt;();\n        list.Add(1);\n        result.Add(list);\n        \n        if(numRows == 1){\n            return result;\n        }\n        \n        list = new List&lt;int&gt;();\n        list.Add(1);\n        list.Add(1);\n        result.Add(list);\n        if(numRows == 2){\n            return result;\n        }\n        \n        for(int i=2;i&lt;numRows;i++){\n            list = new List&lt;int&gt;();\n            for(int j=0;j&lt;=result[i-1].Count;j++){\n                if(j==0){\n                    list.Add(result[i-1][0]);\n                }\n                else if(j==result[i-1].Count){\n                    list.Add(result[i-1][result[i-1].Count-1]);\n                }\n                else{\n                    list.Add(result[i-1][j-1]+result[i-1][j]);\n                }\n            }\n            result.Add(list);\n        }\n        \n        return result;\n    }\n}</code></pre>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/c3c29c5c-8b25-4372-bfcd-abed88f6f7e1.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"pascals-triangle-array-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"recommendations":[{"id":1727,"title":"Check if Array Is Sorted and Rotated - Array - Easy - LeetCode","imageUrl":"icon_2110d383-81cb-448a-8e4f-3773ff37294d.jpg","dateCreated":"2021-03-31T05:53:14.382Z","dateModified":"2021-03-31T05:53:27.431Z","contributedBy":"sumitc91","content":"Given an array nums, return true if the array was originally sorted in non-decreasing order, then rotated some number of positions (including zero). Otherwise, return false.\nThere may be duplicates in the original array.\nNote: An array A rotated by x positions results in an array B ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/2110d383-81cb-448a-8e4f-3773ff37294d.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"check-if-array-is-sorted-and-rotated-array-easy-leetcode","total":0},{"id":1653,"title":"Set Matrix Zeroes - Array - Medium - LeetCode","imageUrl":"icon_42006195-6b88-4b4d-a2d3-c695139d16b7.jpg","dateCreated":"2020-10-31T09:17:26.973Z","dateModified":"2020-10-31T09:17:33.085Z","contributedBy":"sumitc91","content":"Given an m x n matrix. If an element is 0, set its entire row and column to 0. Do it in-place.\nFollow up:\nA straight forward solution using O(mn) space is probably a bad idea.<br />A simple improvement uses O(m + n) space, but still not the best solution.<br />Could you devise a con","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/42006195-6b88-4b4d-a2d3-c695139d16b7.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"set-matrix-zeroes-array-medium-leetcode","total":0},{"id":1645,"title":"Jump Game - Array - Medium - LeetCode","imageUrl":"icon_a22e7bed-85b5-4837-89ef-0da32c81085c.jpg","dateCreated":"2020-10-28T06:44:43.217Z","dateModified":"2020-10-28T06:44:52.67Z","contributedBy":"sumitc91","content":"Given an array of non-negative integers, you are initially positioned at the first index of the array.\nEach element in the array represents your maximum jump length at that position.\nDetermine if you are able to reach the last index.\n&nbsp;\nExample 1:\nInput: num","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a22e7bed-85b5-4837-89ef-0da32c81085c.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"jump-game-array-medium-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}