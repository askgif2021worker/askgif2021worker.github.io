{"id":1395,"title":"Pascal's Triangle II - Array - Easy - LeetCode","imageUrl":"icon_4fa51d72-5a1a-46ef-95e0-5a24ed8e6fa5.jpg","dateCreated":"2020-09-25T10:02:57.93Z","dateModified":"2020-09-25T10:04:20.487Z","contributedBy":"sumitc91","content":"<p>Given an integer rowIndex, return the rowIndexth row of Pascal's triangle.</p>\n<p>Notice that the row index starts from 0.</p>\n<p><br />In Pascal's triangle, each number is the sum of the two numbers directly above it.</p>\n<p>Follow up:</p>\n<p>Could you optimize your algorithm to use only O(k) extra space?</p>\n<p>&nbsp;</p>\n<p>Example 1:</p>\n<p>Input: rowIndex = 3<br />Output: [1,3,3,1]<br />Example 2:</p>\n<p>Input: rowIndex = 0<br />Output: [1]<br />Example 3:</p>\n<p>Input: rowIndex = 1<br />Output: [1,1]<br />&nbsp;</p>\n<p>Constraints:</p>\n<p>0 &lt;= rowIndex &lt;= 40</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    public IList&lt;int&gt; GetRow(int rowIndex) {\n        var result = new List&lt;IList&lt;int&gt;&gt;();        \n        var list = new List&lt;int&gt;();\n        list.Add(1);\n        result.Add(list);\n        \n        if(rowIndex == 0){\n            return list;\n        }\n        \n        list = new List&lt;int&gt;();\n        list.Add(1);\n        list.Add(1);\n        result.Add(list);\n        if(rowIndex == 1){\n            return list;\n        }\n        \n        for(int i=2;i&lt;=rowIndex;i++){\n            list = new List&lt;int&gt;();\n            for(int j=0;j&lt;=result[i-1].Count;j++){\n                if(j==0){\n                    list.Add(result[i-1][0]);\n                }\n                else if(j==result[i-1].Count){\n                    list.Add(result[i-1][result[i-1].Count-1]);\n                }\n                else{\n                    list.Add(result[i-1][j-1]+result[i-1][j]);\n                }\n            }\n            result.Add(list);\n        }\n        \n        return result[rowIndex];\n    }\n}</code></pre>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/4fa51d72-5a1a-46ef-95e0-5a24ed8e6fa5.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"pascals-triangle-ii-array-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"recommendations":[{"id":1650,"title":"Unique Paths - Array - Medium - LeetCode","imageUrl":"icon_7d520a0b-1d85-4323-8864-5769e8bcd088.jpg","dateCreated":"2020-10-31T08:21:35.294Z","dateModified":"2020-10-31T08:21:40.324Z","contributedBy":"sumitc91","content":"A robot is located at the top-left corner of a m x n grid (marked 'Start' in the diagram below).\nThe robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid (marked 'Finish' in the diagram below).\nHow many possi","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/7d520a0b-1d85-4323-8864-5769e8bcd088.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"unique-paths-array-medium-leetcode","total":0},{"id":1611,"title":"Tenth Line - Bash - Easy - LeetCode","imageUrl":"icon_2f13c5c6-6e33-47bb-a84b-a78e7452f775.jpg","dateCreated":"2020-10-16T07:52:54.062Z","dateModified":"2020-10-16T07:53:14.702Z","contributedBy":"sumitc91","content":"Given a text file file.txt, print just the 10th line of the file.\nExample:\nAssume that file.txt has the following content:\nLine 1<br />Line 2<br />Line 3<br />Line 4<br />Line 5<br />Line 6<br />Line 7<br />Line 8<br />Line 9<br />Line 10<br />Your script should output the te","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/2f13c5c6-6e33-47bb-a84b-a78e7452f775.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"bash","slug":"bash"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"tenth-line-bash-easy-leetcode","total":0},{"id":1595,"title":"Cousins in Binary Tree - Tree - Easy - LeetCode","imageUrl":"icon_249b4ce9-a2e8-4b2a-a369-264d0c802503.jpg","dateCreated":"2020-10-09T09:24:10.362Z","dateModified":"2020-10-09T09:24:23.315Z","contributedBy":"sumitc91","content":"In a binary tree, the root node is at depth 0, and children of each depth k node are at depth k+1.\nTwo nodes of a binary tree are cousins if they have the same depth, but have different parents.\nWe are given the root of a binary tree with unique values, and the values x and y of two","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/249b4ce9-a2e8-4b2a-a369-264d0c802503.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"cousins-in-binary-tree-tree-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}