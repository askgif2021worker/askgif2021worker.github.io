{"id":1401,"title":"Missing Number - Array - Easy - LeetCode","imageUrl":"icon_c4c3eb93-1a20-41f3-9c67-4b2eadebc219.png","dateCreated":"2020-09-25T16:14:03.518Z","dateModified":"2020-09-25T16:14:15.646Z","contributedBy":"sumitc91","content":"<p>Given an array containing n distinct numbers taken from 0, 1, 2, ..., n, find the one that is missing from the array.</p>\n<p>Example 1:</p>\n<p>Input: [3,0,1]<br />Output: 2<br />Example 2:</p>\n<p>Input: [9,6,4,2,3,5,7,0,1]<br />Output: 8<br />Note:<br />Your algorithm should run in linear runtime complexity. Could you implement it using only constant extra space complexity?</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    public int MissingNumber(int[] nums) {\n        int len = nums.Length;\n        int expectedSum = len*(len+1)/2;\n        int sum = 0;\n        for(int i=0;i&lt;nums.Length;i++){\n            sum+=nums[i];\n        }\n        \n        return expectedSum - sum;\n    }\n}</code></pre>\n<p><br />Time Complexity: O(n)</p>\n<p>Space Complexity: O(1)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/c4c3eb93-1a20-41f3-9c67-4b2eadebc219.png","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"missing-number-array-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"recommendations":[{"id":1646,"title":"Merge Intervals - Array - Medium - LeetCode","imageUrl":"icon_a1913eb6-6b8f-4cbb-9c4e-096c9e76c6cd.jpg","dateCreated":"2020-10-30T13:34:51.72Z","dateModified":"2020-10-30T13:34:58.66Z","contributedBy":"sumitc91","content":"Given a collection of intervals, merge all overlapping intervals.\nExample 1:\nInput: intervals = [[1,3],[2,6],[8,10],[15,18]]<br />Output: [[1,6],[8,10],[15,18]]<br />Explanation: Since intervals [1,3] and [2,6] overlaps, merge them into [1,6].<br />Example 2:\nInput: intervals","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a1913eb6-6b8f-4cbb-9c4e-096c9e76c6cd.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"merge-intervals-array-medium-leetcode","total":0},{"id":1614,"title":"Fizz Buzz - List - Easy - LeetCode","imageUrl":"icon_6cbe0cee-fefe-40d0-8e0c-36270b4fa350.jpg","dateCreated":"2020-10-16T11:55:40.749Z","dateModified":"2020-10-16T11:55:50.939Z","contributedBy":"sumitc91","content":"Write a program that outputs the string representation of numbers from 1 to n.\nBut for multiples of three, it should output &ldquo;Fizz&rdquo; instead of the number and for the multiples of five output &ldquo;Buzz&rdquo;. For numbers which are multiples of both three and five output &ldquo","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/6cbe0cee-fefe-40d0-8e0c-36270b4fa350.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"fizz-buzz-list-easy-leetcode","total":0},{"id":1610,"title":"Valid Phone Numbers - Bash - Easy - LeetCode","imageUrl":"icon_903f4733-4a8e-4987-9d87-0e0feefd9f8e.jpg","dateCreated":"2020-10-16T07:46:02.223Z","dateModified":"2020-10-16T07:46:13.79Z","contributedBy":"sumitc91","content":"Given a text file file.txt that contains list of phone numbers (one per line), write a one liner bash script to print all valid phone numbers.\nYou may assume that a valid phone number must appear in one of the following two formats: (xxx) xxx-xxxx or xxx-xxx-xxxx. (x means a digit)\n","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/903f4733-4a8e-4987-9d87-0e0feefd9f8e.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"valid-phone-numbers-bash-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}