{"id":1407,"title":"K-diff Pairs in an Array - Array - Easy - LeetCode","imageUrl":"icon_19c845d0-7529-43ac-be58-96ea77a54e40.png","dateCreated":"2020-09-26T05:36:58.528Z","dateModified":"2020-09-26T05:37:11.735Z","contributedBy":"sumitc91","content":"<p>Given an array of integers and an integer k, you need to find the number of unique k-diff pairs in the array. Here a k-diff pair is defined as an integer pair (i, j), where i and j are both numbers in the array and their absolute difference is k.</p>\n<p>Example 1:<br />Input: [3, 1, 4, 1, 5], k = 2<br />Output: 2<br />Explanation: There are two 2-diff pairs in the array, (1, 3) and (3, 5).<br />Although we have two 1s in the input, we should only return the number of unique pairs.<br />Example 2:<br />Input:[1, 2, 3, 4, 5], k = 1<br />Output: 4<br />Explanation: There are four 1-diff pairs in the array, (1, 2), (2, 3), (3, 4) and (4, 5).<br />Example 3:<br />Input: [1, 3, 1, 5, 4], k = 0<br />Output: 1<br />Explanation: There is one 0-diff pair in the array, (1, 1).<br />Note:<br />The pairs (i, j) and (j, i) count as the same pair.<br />The length of the array won't exceed 10,000.<br />All the integers in the given input belong to the range: [-1e7, 1e7].</p>\n<p>&nbsp;</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    public int FindPairs(int[] nums, int k) {\n        if(nums.Length==0 || k &lt; 0){\n            return 0;\n        }\n        \n        var map = new Dictionary&lt;int,int&gt;();\n        for(int i=0;i&lt;nums.Length;i++){\n            if(map.ContainsKey(nums[i])){\n                map[nums[i]]++;\n            }\n            else{\n                map.Add(nums[i],1);\n            }\n        }\n        \n        var count = 0;\n        foreach(var item in map){\n            if(k==0){\n                if(item.Value&gt;1){\n                    count++;   \n                }                \n            }\n            else{\n                if(map.ContainsKey(item.Key-k)){\n                    count++;\n                }\n            }\n        }\n        \n        return count;\n    }\n}</code></pre>\n<p>&nbsp;</p>\n<p><br />Time Complexity: O(n)</p>\n<p>Space Complexity: O(n)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/19c845d0-7529-43ac-be58-96ea77a54e40.png","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"k-diff-pairs-in-an-array-array-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"recommendations":[{"id":1633,"title":"3Sum - Array - Medium - LeetCode","imageUrl":"icon_b05855a6-ac78-4434-a041-4682444c76bc.jpg","dateCreated":"2020-10-19T04:39:11.508Z","dateModified":"2020-10-19T04:39:21.598Z","contributedBy":"sumitc91","content":"Given an array nums of n integers, are there elements a, b, c in nums such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.\nNotice that the solution set must not contain duplicate triplets.\n&nbsp;\nExample 1:\nInput: nums = [-1,0,1,2","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/b05855a6-ac78-4434-a041-4682444c76bc.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"3sum-array-medium-leetcode","total":0},{"id":1632,"title":"Container With Most Water - Array - Medium - LeetCode","imageUrl":"icon_fc25ea42-813c-4de4-be8b-eb874d415c58.jpg","dateCreated":"2020-10-18T15:53:55.445Z","dateModified":"2020-10-18T15:54:07.342Z","contributedBy":"sumitc91","content":"Given n non-negative integers a1, a2, ..., an , where each represents a point at coordinate (i, ai). n vertical lines are drawn such that the two endpoints of line i is at (i, ai) and (i, 0). Find two lines, which, together with the x-axis forms a container, such that the container contains the m","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/fc25ea42-813c-4de4-be8b-eb874d415c58.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"container-with-most-water-array-medium-leetcode","total":0},{"id":1606,"title":"Combine Two Tables - Sql - Easy - LeetCode","imageUrl":"icon_88b1c8bf-74b6-45d3-8314-cbd4ac4ead29.jpg","dateCreated":"2020-10-16T05:53:11.599Z","dateModified":"2020-10-16T05:53:36.309Z","contributedBy":"sumitc91","content":"Write a SQL query for a report that provides the following information for each person in the Person table, regardless if there is an address for each of those people:\nTable: Person\n+-------------+---------+<br />| Column Name | Type &nbsp; &nbsp;|<br />+-------------+---------+<br ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/5b6e96ac-0881-4845-bd1a-6f2f1cbcf99e.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"mysql","slug":"mysql"},{"name":"sql","slug":"sql"}],"slug":"combine-two-tables-sql-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}