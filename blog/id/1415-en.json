{"id":1415,"title":"Maximum Product of Three Numbers - Array - Easy - LeetCode","imageUrl":"icon_73cc50fe-16f4-45fb-96f0-94470066150d.jpg","dateCreated":"2020-09-26T09:16:10.76Z","dateModified":"2020-09-26T09:16:25.182Z","contributedBy":"sumitc91","content":"<p>Given an integer array, find three numbers whose product is maximum and output the maximum product.</p>\n<p>Example 1:</p>\n<p>Input: [1,2,3]<br />Output: 6<br />&nbsp;</p>\n<p>Example 2:</p>\n<p>Input: [1,2,3,4]<br />Output: 24<br />&nbsp;</p>\n<p>Note:</p>\n<p>The length of the given array will be in range [3,104] and all elements are in the range [-1000, 1000].<br />Multiplication of any three numbers in the input won't exceed the range of 32-bit signed integer.</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    public int MaximumProduct(int[] nums) {\n        Array.Sort(nums);\n        int prod=1;\n        int len = nums.Length;\n        if(len&lt;=3){\n            for(int i=0;i&lt;len;i++){\n                prod*=nums[i];\n            }\n        }\n        else{\n            prod = Math.Max(nums[0]*nums[1]*nums[len-1], \n                           nums[len-1]*nums[len-2]*nums[len-3]);\n        }\n        \n        return prod;\n    }\n}</code></pre>\n<p>&nbsp;</p>\n<p><br />Time Complexity: O(nlogn)</p>\n<p>Space Complexity: O(1)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/73cc50fe-16f4-45fb-96f0-94470066150d.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"maximum-product-of-three-numbers-array-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"recommendations":[{"id":1723,"title":"Beautiful Arrangement II - Maths - Medium - LeetCode","imageUrl":"icon_b2d502bc-0983-4102-b87f-e37eff0ed0db.jpg","dateCreated":"2021-01-26T13:09:40.384Z","dateModified":"2021-01-26T13:09:46.827Z","contributedBy":"sumitc91","content":"Given two integers n and k, you need to construct a list that contains n different positive integers ranging from 1 to n and obeys the following requirement:<br />Suppose this list is [a1, a2, a3, ... , an], then the list [|a1 - a2|, |a2 - a3|, |a3 - a4|, ... , |an-1 - an|] has exactly k distinct","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/b2d502bc-0983-4102-b87f-e37eff0ed0db.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"maths","slug":"maths"},{"name":"medium","slug":"medium"}],"slug":"beautiful-arrangement-ii-maths-medium-leetcode","total":0},{"id":1714,"title":"Number of Students Unable to Eat Lunch - String - Easy - LeetCode","imageUrl":"icon_dad639fe-8bb2-4bcd-ba3d-af4e7cb5299b.jpg","dateCreated":"2021-01-06T10:28:07.741Z","dateModified":"2021-01-06T10:28:12.288Z","contributedBy":"sumitc91","content":"The school cafeteria offers circular and square sandwiches at lunch break, referred to by numbers 0 and 1 respectively. All students stand in a queue. Each student either prefers square or circular sandwiches.\nThe number of sandwiches in the cafeteria is equal to the number of students. Th","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/dad639fe-8bb2-4bcd-ba3d-af4e7cb5299b.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"string","slug":"string"}],"slug":"number-of-students-unable-to-eat-lunch-string-easy-leetcode","total":0},{"id":1603,"title":"Moving Stones Until Consecutive - Brainteaser - Easy - LeetCode","imageUrl":"icon_e620d162-e256-4aff-b3fa-67c0a4795dd6.jpg","dateCreated":"2020-10-16T05:13:52.149Z","dateModified":"2020-10-16T05:14:17.79Z","contributedBy":"sumitc91","content":"Three stones are on a number line at positions a, b, and c.\nEach turn, you pick up a stone at an endpoint (ie., either the lowest or highest position stone), and move it to an unoccupied position between those endpoints. &nbsp;Formally, let's say the stones are currently at positions x, y,","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/e620d162-e256-4aff-b3fa-67c0a4795dd6.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"brain-teaser","slug":"brain-teaser"},{"name":"brainteaser","slug":"brainteaser"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"moving-stones-until-consecutive-brainteaser-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}