{"id":1421,"title":"Find Pivot Index - Array - Easy - LeetCode","imageUrl":"icon_12158410-23b8-4a97-a739-63cfbdffb0eb.jpg","dateCreated":"2020-09-26T11:27:14.251Z","dateModified":"2020-09-26T11:27:32.526Z","contributedBy":"sumitc91","content":"<p>Given an array of integers nums, write a method that returns the \"pivot\" index of this array.</p>\n<p>We define the pivot index as the index where the sum of all the numbers to the left of the index is equal to the sum of all the numbers to the right of the index.</p>\n<p>If no such index exists, we should return -1. If there are multiple pivot indexes, you should return the left-most pivot index.</p>\n<p>&nbsp;</p>\n<p>Example 1:</p>\n<p>Input: nums = [1,7,3,6,5,6]<br />Output: 3<br />Explanation:<br />The sum of the numbers to the left of index 3 (nums[3] = 6) is equal to the sum of numbers to the right of index 3.<br />Also, 3 is the first index where this occurs.<br />Example 2:</p>\n<p>Input: nums = [1,2,3]<br />Output: -1<br />Explanation:<br />There is no index that satisfies the conditions in the problem statement.<br />&nbsp;</p>\n<p>Constraints:</p>\n<p>The length of nums will be in the range [0, 10000].<br />Each element nums[i] will be an integer in the range [-1000, 1000].</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    public int PivotIndex(int[] nums) { \n        \n        if(nums.Length==0){\n            return -1;\n        }\n        \n        var left = new int[nums.Length];\n        var right = new int[nums.Length];\n        \n        for(int i=0;i&lt;nums.Length;i++){\n            if(i==0){\n                left[i] = nums[i];\n            }\n            else{\n                left[i] = nums[i]+left[i-1];\n            }\n        }\n        \n        for(int i=nums.Length-1;i&gt;=0;i--){\n            if(i==nums.Length-1){\n                right[i]=nums[i];\n            }\n            else{\n                right[i]=nums[i]+right[i+1];\n            }\n        }\n        \n        if(right[1]==0){\n            return 0;\n        }\n        \n        for(int i=1;i&lt;nums.Length-1;i++){\n            if(left[i-1]==right[i+1]){\n                return i;\n            }\n        }\n        \n        if(left[nums.Length-2]==0){\n            return nums.Length-1;\n        }\n        \n        return -1;\n    }\n}</code></pre>\n<p>&nbsp;</p>\n<p><br />Time Complexity: O(n)</p>\n<p>Space Complexity: O(n)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/12158410-23b8-4a97-a739-63cfbdffb0eb.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"find-pivot-index-array-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"recommendations":[{"id":1660,"title":"Check Array Formation Through Concatenation - Array - Easy - LeetCode","imageUrl":"icon_85392267-2028-4c02-8f8a-96c1d2368591.jpg","dateCreated":"2020-11-03T06:50:35.06Z","dateModified":"2020-11-03T06:50:53.205Z","contributedBy":"sumitc91","content":"You are given an array of distinct integers arr and an array of integer arrays pieces, where the integers in pieces are distinct. Your goal is to form arr by concatenating the arrays in pieces in any order. However, you are not allowed to reorder the integers in each array pieces[i].\nRetur","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/85392267-2028-4c02-8f8a-96c1d2368591.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"check-array-formation-through-concatenation-array-easy-leetcode","total":0},{"id":1626,"title":"Reformat Department Table - Sql - Easy - LeetCode","imageUrl":"icon_59cdadef-bfee-4b37-bafa-ad7569c32e3f.jpg","dateCreated":"2020-10-18T04:10:25.839Z","dateModified":"2020-10-18T04:10:34.638Z","contributedBy":"sumitc91","content":"Table: Department\n+---------------+---------+<br />| Column Name &nbsp; | Type &nbsp; &nbsp;|<br />+---------------+---------+<br />| id &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;| int &nbsp; &nbsp; |<br />| revenue &nbsp; &nbsp; &nbsp; | int &nbsp; &nbsp; |<br />| month &nbsp; &nbsp; &nbsp","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/59cdadef-bfee-4b37-bafa-ad7569c32e3f.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"mysql","slug":"mysql"},{"name":"sql","slug":"sql"}],"slug":"reformat-department-table-sql-easy-leetcode","total":0},{"id":1606,"title":"Combine Two Tables - Sql - Easy - LeetCode","imageUrl":"icon_88b1c8bf-74b6-45d3-8314-cbd4ac4ead29.jpg","dateCreated":"2020-10-16T05:53:11.599Z","dateModified":"2020-10-16T05:53:36.309Z","contributedBy":"sumitc91","content":"Write a SQL query for a report that provides the following information for each person in the Person table, regardless if there is an address for each of those people:\nTable: Person\n+-------------+---------+<br />| Column Name | Type &nbsp; &nbsp;|<br />+-------------+---------+<br ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/5b6e96ac-0881-4845-bd1a-6f2f1cbcf99e.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"mysql","slug":"mysql"},{"name":"sql","slug":"sql"}],"slug":"combine-two-tables-sql-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}