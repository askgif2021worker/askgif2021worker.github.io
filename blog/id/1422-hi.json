{"id":1422,"title":"Min Cost Climbing Stairs - Array - Easy - LeetCode","imageUrl":"icon_fd2daeab-8bb6-4f16-9113-06f1a39a62e5.jpg","dateCreated":"2020-09-26T11:44:31.692Z","dateModified":"2020-09-26T11:44:45.247Z","contributedBy":"sumitc91","content":"<p>On a staircase, the i-th step has some non-negative cost cost[i] assigned (0 indexed).</p>\n<p>Once you pay the cost, you can either climb one or two steps. You need to find minimum cost to reach the top of the floor, and you can either start from the step with index 0, or the step with index 1.</p>\n<p>Example 1:<br />Input: cost = [10, 15, 20]<br />Output: 15<br />Explanation: Cheapest is start on cost[1], pay that cost and go to the top.<br />Example 2:<br />Input: cost = [1, 100, 1, 1, 1, 100, 1, 1, 100, 1]<br />Output: 6<br />Explanation: Cheapest is start on cost[0], and only step on 1s, skipping cost[3].<br />Note:<br />cost will have a length in the range [2, 1000].<br />Every cost[i] will be an integer in the range [0, 999]</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    public int MinCostClimbingStairs(int[] cost) {\n        if(cost.Length==0){\n            return 0;\n        }\n        \n        if(cost.Length==1){\n            return cost[0];\n        }\n        \n        for(int i=2;i&lt;cost.Length;i++){\n            cost[i]=Math.Min(cost[i-2],cost[i-1])+cost[i];\n        }\n        \n        return Math.Min(cost[cost.Length-1],cost[cost.Length-2]);\n    }\n}</code></pre>\n<p>&nbsp;</p>\n<p><br />Time Complexity: O(n)</p>\n<p>Space Complexity: O(1)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/fd2daeab-8bb6-4f16-9113-06f1a39a62e5.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"min-cost-climbing-stairs-array-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"recommendations":[{"id":1707,"title":"Maximum Repeating Substring - String - Easy - LeetCode","imageUrl":"icon_6c2a7180-5aaa-46ea-9f10-28d9ae8d0784.jpg","dateCreated":"2020-12-02T09:09:18.46Z","dateModified":"2020-12-02T09:09:24.372Z","contributedBy":"sumitc91","content":"For a string sequence, a string word is k-repeating if word concatenated k times is a substring of sequence. The word's maximum k-repeating value is the highest value k where word is k-repeating in sequence. If word is not a substring of sequence, word's maximum k-repeating value is 0.\nGiv","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/6c2a7180-5aaa-46ea-9f10-28d9ae8d0784.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"string","slug":"string"}],"slug":"maximum-repeating-substring-string-easy-leetcode","total":0},{"id":1703,"title":"Array Nesting - Array - Medium - LeetCode","imageUrl":"icon_5da00dcd-3cd3-4eb0-a2ee-26865bba7184.jpg","dateCreated":"2020-11-21T07:20:04.928Z","dateModified":"2020-11-21T07:20:11.837Z","contributedBy":"sumitc91","content":"A zero-indexed array A of length N contains all integers from 0 to N-1. Find and return the longest length of set S, where S[i] = {A[i], A[A[i]], A[A[A[i]]], ... } subjected to the rule below.\nSuppose the first element in S starts with the selection of element A[i] of index = i, the next e","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/5da00dcd-3cd3-4eb0-a2ee-26865bba7184.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"array-nesting-array-medium-leetcode","total":0},{"id":1659,"title":"बढ़ती आवृत्ति द्वारा क्रमबद्ध सरणी - सरणी - मध्यम - LeetCode","imageUrl":"icon_0607b46b-96fe-470e-a316-ee8bf5aeee8e.jpg","dateCreated":"2020-11-03T05:02:58.417Z","dateModified":"2020-11-03T05:10:52.862Z","contributedBy":"sumitc91","content":"Given an array of integers nums, sort the array in increasing order based on the frequency of the values. If multiple values have the same frequency, sort them in decreasing order.\nReturn the sorted array.\n&nbsp;\nExample 1:\nInput: nums = [1,1,2,2,2,3]<br />Output: [3,1","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/0607b46b-96fe-470e-a316-ee8bf5aeee8e.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"sort-array-by-increasing-frequency-array-medium-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}