{"id":1424,"title":"Toeplitz Matrix - Array - Easy - LeetCode","imageUrl":"icon_5954a56b-0b1d-46ca-80be-eb2a9770b7e3.jpg","dateCreated":"2020-09-26T12:55:54.744Z","dateModified":"2020-09-26T12:56:14.093Z","contributedBy":"sumitc91","content":"<p>A matrix is Toeplitz if every diagonal from top-left to bottom-right has the same element.</p>\n<p>Now given an M x N matrix, return True if and only if the matrix is Toeplitz.<br />&nbsp;</p>\n<p>Example 1:</p>\n<p>Input:<br />matrix = [<br />&nbsp; [1,2,3,4],<br />&nbsp; [5,1,2,3],<br />&nbsp; [9,5,1,2]<br />]<br />Output: True<br />Explanation:<br />In the above grid, the diagonals are:<br />\"[9]\", \"[5, 5]\", \"[1, 1, 1]\", \"[2, 2, 2]\", \"[3, 3]\", \"[4]\".<br />In each diagonal all elements are the same, so the answer is True.<br />Example 2:</p>\n<p>Input:<br />matrix = [<br />&nbsp; [1,2],<br />&nbsp; [2,2]<br />]<br />Output: False<br />Explanation:<br />The diagonal \"[1, 2]\" has different elements.</p>\n<p>Note:</p>\n<p>matrix will be a 2D array of integers.<br />matrix will have a number of rows and columns in range [1, 20].<br />matrix[i][j] will be integers in range [0, 99].</p>\n<p>Follow up:</p>\n<p>What if the matrix is stored on disk, and the memory is limited such that you can only load at most one row of the matrix into the memory at once?<br />What if the matrix is so large that you can only load up a partial row into the memory at once?</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    public bool IsToeplitzMatrix(int[][] matrix) {\n        int row = matrix.Length;\n        int column = matrix[0].Length;\n        for(int i=0;i&lt;row-1;i++){\n            for(int j=0;j&lt;column-1;j++){\n                if(matrix[i][j]!=matrix[i+1][j+1]){\n                    return false;\n                }\n            }\n        }\n        \n        return true;\n    }\n}</code></pre>\n<p>&nbsp;</p>\n<p><br />Time Complexity: O(m*n)</p>\n<p>Space Complexity: O(1)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/5954a56b-0b1d-46ca-80be-eb2a9770b7e3.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"toeplitz-matrix-array-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"recommendations":[{"id":1660,"title":"Check Array Formation Through Concatenation - Array - Easy - LeetCode","imageUrl":"icon_85392267-2028-4c02-8f8a-96c1d2368591.jpg","dateCreated":"2020-11-03T06:50:35.06Z","dateModified":"2020-11-03T06:50:53.205Z","contributedBy":"sumitc91","content":"You are given an array of distinct integers arr and an array of integer arrays pieces, where the integers in pieces are distinct. Your goal is to form arr by concatenating the arrays in pieces in any order. However, you are not allowed to reorder the integers in each array pieces[i].\nRetur","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/85392267-2028-4c02-8f8a-96c1d2368591.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"check-array-formation-through-concatenation-array-easy-leetcode","total":0},{"id":1627,"title":"Number of Days Between Two Dates - Maths - Easy - LeetCode","imageUrl":"icon_c8c70ab5-92c2-4bfd-ad83-d0a6afbe3ded.jpg","dateCreated":"2020-10-18T06:18:04.266Z","dateModified":"2020-10-18T06:18:17.665Z","contributedBy":"sumitc91","content":"Write a program to count the number of days between two dates.\nThe two dates are given as strings, their format is YYYY-MM-DD as shown in the examples.\n&nbsp;\nExample 1:\nInput: date1 = \"2019-06-29\", date2 = \"2019-06-30\"<br />Output: 1<br />Example 2:\nInput: date","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/c8c70ab5-92c2-4bfd-ad83-d0a6afbe3ded.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"maths","slug":"maths"}],"slug":"number-of-days-between-two-dates-maths-easy-leetcode","total":0},{"id":1592,"title":"Increasing Order Search Tree - Tree - Easy - LeetCode","imageUrl":"icon_32836fb6-9705-48a7-be70-4bd66b1c621e.jpg","dateCreated":"2020-10-09T07:45:00.338Z","dateModified":"2020-10-09T07:45:33.127Z","contributedBy":"sumitc91","content":"Given a binary search tree, rearrange the tree in in-order so that the leftmost node in the tree is now the root of the tree, and every node has no left child and only 1 right child.\nExample 1:<br />Input: [5,3,6,2,4,null,8,1,null,null,null,7,9]\n&nbsp; &nbsp; &nbsp; &nbsp;5<br />&nb","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/32836fb6-9705-48a7-be70-4bd66b1c621e.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"increasing-order-search-tree-tree-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}