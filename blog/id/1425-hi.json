{"id":1425,"title":"Positions of Large Groups - Array - Easy - LeetCode","imageUrl":"icon_3ca16058-3854-4dc8-adaa-b83107472a2b.jpg","dateCreated":"2020-09-26T13:06:51.71Z","dateModified":"2020-09-26T13:07:04.899Z","contributedBy":"sumitc91","content":"<p>In a string s of lowercase letters, these letters form consecutive groups of the same character.</p>\n<p>For example, a string like s = \"abbxxxxzyy\" has the groups \"a\", \"bb\", \"xxxx\", \"z\", and \"yy\".</p>\n<p>A group is identified by an interval [start, end], where start and end denote the start and end indices (inclusive) of the group. In the above example, \"xxxx\" has the interval [3,6].</p>\n<p>A group is considered large if it has 3 or more characters.</p>\n<p>Return the intervals of every large group sorted in increasing order by start index.</p>\n<p>&nbsp;</p>\n<p>Example 1:</p>\n<p>Input: s = \"abbxxxxzzy\"<br />Output: [[3,6]]<br />Explanation: \"xxxx\" is the only large group with start index 3 and end index 6.<br />Example 2:</p>\n<p>Input: s = \"abc\"<br />Output: []<br />Explanation: We have groups \"a\", \"b\", and \"c\", none of which are large groups.<br />Example 3:</p>\n<p>Input: s = \"abcdddeeeeaabbbcd\"<br />Output: [[3,5],[6,9],[12,14]]<br />Explanation: The large groups are \"ddd\", \"eeee\", and \"bbb\".<br />Example 4:</p>\n<p>Input: s = \"aba\"<br />Output: []<br />&nbsp;</p>\n<p>Constraints:</p>\n<p>1 &lt;= s.length &lt;= 1000<br />s contains lower-case English letters only.</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    public IList&lt;IList&lt;int&gt;&gt; LargeGroupPositions(string s) {\n        var result = new List&lt;IList&lt;int&gt;&gt;();\n        if(s.Length==0){\n            return result;\n        }\n        char last = s[0];\n        int count = 1;\n        int start = 0;\n        for(int i=1;i&lt;s.Length;i++){\n            if(s[i]==last){\n                count++;\n            }\n            else{\n                if(count&gt;=3){\n                    var data = new List&lt;int&gt;();\n                    data.Add(start);\n                    data.Add(i-1);\n                    result.Add(data);\n                }\n                last = s[i];\n                count = 1;\n                start = i;\n            }\n        }\n        \n        if(count&gt;=3)\n        {\n            var data = new List&lt;int&gt;();\n            data.Add(start);\n            data.Add(s.Length-1);\n            result.Add(data);\n        }\n        \n        return result;\n    }\n}</code></pre>\n<p>&nbsp;</p>\n<p><br />Time Complexity: O(n)</p>\n<p>Space Complexity: O(1)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/3ca16058-3854-4dc8-adaa-b83107472a2b.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"positions-of-large-groups-array-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"recommendations":[{"id":1727,"title":"Check if Array Is Sorted and Rotated - Array - Easy - LeetCode","imageUrl":"icon_2110d383-81cb-448a-8e4f-3773ff37294d.jpg","dateCreated":"2021-03-31T05:53:14.382Z","dateModified":"2021-03-31T05:53:27.431Z","contributedBy":"sumitc91","content":"Given an array nums, return true if the array was originally sorted in non-decreasing order, then rotated some number of positions (including zero). Otherwise, return false.\nThere may be duplicates in the original array.\nNote: An array A rotated by x positions results in an array B ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/2110d383-81cb-448a-8e4f-3773ff37294d.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"check-if-array-is-sorted-and-rotated-array-easy-leetcode","total":0},{"id":1704,"title":"Shortest Unsorted Continuous Subarray - Array - Medium - LeetCode","imageUrl":"icon_8ae155ae-c65a-4be5-8bc2-0e72f6588a6a.jpg","dateCreated":"2020-11-21T08:37:40.528Z","dateModified":"2020-11-21T08:37:59.841Z","contributedBy":"sumitc91","content":"Given an integer array nums, you need to find one continuous subarray that if you only sort this subarray in ascending order, then the whole array will be sorted in ascending order.\nReturn the shortest such subarray and output its length.\n&nbsp;\nExample 1:\nInput: nums ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/8ae155ae-c65a-4be5-8bc2-0e72f6588a6a.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"shortest-unsorted-continuous-subarray-array-medium-leetcode","total":0},{"id":1669,"title":"Maximum Product Subarray - Array - Medium - LeetCode","imageUrl":"icon_7f1afad0-6986-4b75-b8b1-48cc2da5b308.jpg","dateCreated":"2020-11-17T12:27:09.279Z","dateModified":"2020-11-17T12:27:13.842Z","contributedBy":"sumitc91","content":"Given an integer array nums, find the contiguous subarray within an array (containing at least one number) which has the largest product.\nExample 1:\nInput: [2,3,-2,4]<br />Output: 6<br />Explanation: [2,3] has the largest product 6.<br />Example 2:\nInput: [-2,0,-1]<br />Outpu","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/7f1afad0-6986-4b75-b8b1-48cc2da5b308.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"maximum-product-subarray-array-medium-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}