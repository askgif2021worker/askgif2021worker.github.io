{"id":1428,"title":"Fair Candy Swap - Array - Easy - LeetCode","imageUrl":"icon_fe15cb38-3939-4ab1-82ce-c672ddbe49ed.jpg","dateCreated":"2020-09-27T05:50:24.649Z","dateModified":"2020-09-27T05:50:36.445Z","contributedBy":"sumitc91","content":"<p>Alice and Bob have candy bars of different sizes: A[i] is the size of the i-th bar of candy that Alice has, and B[j] is the size of the j-th bar of candy that Bob has.</p>\n<p>Since they are friends, they would like to exchange one candy bar each so that after the exchange, they both have the same total amount of candy. &nbsp;(The total amount of candy a person has is the sum of the sizes of candy bars they have.)</p>\n<p>Return an integer array ans where ans[0] is the size of the candy bar that Alice must exchange, and ans[1] is the size of the candy bar that Bob must exchange.</p>\n<p>If there are multiple answers, you may return any one of them. &nbsp;It is guaranteed an answer exists.</p>\n<p>&nbsp;</p>\n<p>Example 1:</p>\n<p>Input: A = [1,1], B = [2,2]<br />Output: [1,2]<br />Example 2:</p>\n<p>Input: A = [1,2], B = [2,3]<br />Output: [1,2]<br />Example 3:</p>\n<p>Input: A = [2], B = [1,3]<br />Output: [2,3]<br />Example 4:</p>\n<p>Input: A = [1,2,5], B = [2,4]<br />Output: [5,4]<br />&nbsp;</p>\n<p>Note:</p>\n<p>1 &lt;= A.length &lt;= 10000<br />1 &lt;= B.length &lt;= 10000<br />1 &lt;= A[i] &lt;= 100000<br />1 &lt;= B[i] &lt;= 100000<br />It is guaranteed that Alice and Bob have different total amounts of candy.<br />It is guaranteed there exists an answer.</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    public int[] FairCandySwap(int[] A, int[] B) {\n        int sum1 = 0;\n        int sum2 = 0;\n        var ans = new int[2];\n        for(int i=0;i&lt;A.Length;i++){\n            sum1+=A[i];\n        }\n        \n        for(int i=0;i&lt;B.Length;i++){\n            sum2+=B[i];\n        }\n        \n        int avg = (sum1+sum2)/2;\n        \n        //A will give to B\n        if(sum1&lt;avg){\n            int diff = avg - sum1;\n            for(int i=0;i&lt;A.Length;i++){\n                for(int j=0;j&lt;B.Length;j++){\n                    if(B[j]-A[i]==diff){\n                        ans[0]=A[i];\n                        ans[1]=B[j];\n                        return ans;\n                    }\n                }\n            }\n        }\n        else{\n            int diff = sum1 - avg;\n            for(int i=0;i&lt;A.Length;i++){\n                for(int j=0;j&lt;B.Length;j++){\n                    if(A[i]-B[j]==diff){\n                        ans[0]=A[i];\n                        ans[1]=B[j];\n                        return ans;\n                    }\n                }\n            }\n        }\n        \n        return ans;\n    }\n}</code></pre>\n<p>&nbsp;</p>\n<p><br />Time Complexity: O(n*m)</p>\n<p>Space Complexity: O(1)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/fe15cb38-3939-4ab1-82ce-c672ddbe49ed.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"fair-candy-swap-array-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"recommendations":[{"id":1663,"title":"Defuse the Bomb - Array - Easy - LeetCode","imageUrl":"icon_e0c7ac1d-e52e-489e-849e-a7842cdb2c18.jpg","dateCreated":"2020-11-15T15:48:36.584Z","dateModified":"2020-11-15T15:48:43.094Z","contributedBy":"sumitc91","content":"You have a bomb to defuse, and your time is running out! Your informer will provide you with a circular array code of length of n and a key k.\nTo decrypt the code, you must replace every number. All the numbers are replaced simultaneously.\nIf k &gt; 0, replace the ith number with th","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/e0c7ac1d-e52e-489e-849e-a7842cdb2c18.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"defuse-the-bomb-array-easy-leetcode","total":0},{"id":1632,"title":"Container With Most Water - Array - Medium - LeetCode","imageUrl":"icon_fc25ea42-813c-4de4-be8b-eb874d415c58.jpg","dateCreated":"2020-10-18T15:53:55.445Z","dateModified":"2020-10-18T15:54:07.342Z","contributedBy":"sumitc91","content":"Given n non-negative integers a1, a2, ..., an , where each represents a point at coordinate (i, ai). n vertical lines are drawn such that the two endpoints of line i is at (i, ai) and (i, 0). Find two lines, which, together with the x-axis forms a container, such that the container contains the m","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/fc25ea42-813c-4de4-be8b-eb874d415c58.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"container-with-most-water-array-medium-leetcode","total":0},{"id":1610,"title":"Valid Phone Numbers - Bash - Easy - LeetCode","imageUrl":"icon_903f4733-4a8e-4987-9d87-0e0feefd9f8e.jpg","dateCreated":"2020-10-16T07:46:02.223Z","dateModified":"2020-10-16T07:46:13.79Z","contributedBy":"sumitc91","content":"Given a text file file.txt that contains list of phone numbers (one per line), write a one liner bash script to print all valid phone numbers.\nYou may assume that a valid phone number must appear in one of the following two formats: (xxx) xxx-xxxx or xxx-xxx-xxxx. (x means a digit)\n","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/903f4733-4a8e-4987-9d87-0e0feefd9f8e.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"valid-phone-numbers-bash-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}