{"id":1429,"title":"Monotonic Array - Array - Easy - LeetCode","imageUrl":"icon_b7e54e75-cdba-4437-86bf-60a3e2e9f7cf.jpg","dateCreated":"2020-09-27T06:04:01.588Z","dateModified":"2020-09-27T06:04:38.132Z","contributedBy":"sumitc91","content":"<p>An array is monotonic if it is either monotone increasing or monotone decreasing.</p>\n<p>An array A is monotone increasing if for all i &lt;= j, A[i] &lt;= A[j]. &nbsp;An array A is monotone decreasing if for all i &lt;= j, A[i] &gt;= A[j].</p>\n<p>Return true if and only if the given array A is monotonic.</p>\n<p>&nbsp;</p>\n<p>Example 1:</p>\n<p>Input: [1,2,2,3]<br />Output: true<br />Example 2:</p>\n<p>Input: [6,5,4,4]<br />Output: true<br />Example 3:</p>\n<p>Input: [1,3,2]<br />Output: false<br />Example 4:</p>\n<p>Input: [1,2,4,5]<br />Output: true<br />Example 5:</p>\n<p>Input: [1,1,1]<br />Output: true<br />&nbsp;</p>\n<p>Note:</p>\n<p>1 &lt;= A.length &lt;= 50000<br />-100000 &lt;= A[i] &lt;= 100000</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    public bool IsMonotonic(int[] A) {        \n        if(A.Length&lt;=1){\n            return true;\n        }\n        \n        bool inc = true; \n        bool dec = true;\n        for(int i=1;i&lt;A.Length;i++){\n            inc = inc &amp;&amp; A[i-1]&lt;=A[i];\n            dec = dec &amp;&amp; A[i-1]&gt;=A[i];\n        }\n        \n        return inc || dec;\n    }\n}</code></pre>\n<p>&nbsp;</p>\n<p><br />Time Complexity: O(n)</p>\n<p>Space Complexity: O(1)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/b7e54e75-cdba-4437-86bf-60a3e2e9f7cf.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"monotonic-array-array-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"recommendations":[{"id":1623,"title":"Number of Lines To Write String - String - Easy - LeetCode","imageUrl":"icon_1c27d36c-1576-4ab8-bf0a-6787e2a1a3a0.jpg","dateCreated":"2020-10-17T11:18:12.621Z","dateModified":"2020-10-17T11:18:22.116Z","contributedBy":"sumitc91","content":"We are to write the letters of a given string S, from left to right into lines. Each line has maximum width 100 units, and if writing a letter would cause the width of the line to exceed 100 units, it is written on the next line. We are given an array widths, an array where widths[0] is the width","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/1c27d36c-1576-4ab8-bf0a-6787e2a1a3a0.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"string","slug":"string"}],"slug":"number-of-lines-to-write-string-string-easy-leetcode","total":0},{"id":1603,"title":"Moving Stones Until Consecutive - Brainteaser - Easy - LeetCode","imageUrl":"icon_e620d162-e256-4aff-b3fa-67c0a4795dd6.jpg","dateCreated":"2020-10-16T05:13:52.149Z","dateModified":"2020-10-16T05:14:17.79Z","contributedBy":"sumitc91","content":"Three stones are on a number line at positions a, b, and c.\nEach turn, you pick up a stone at an endpoint (ie., either the lowest or highest position stone), and move it to an unoccupied position between those endpoints. &nbsp;Formally, let's say the stones are currently at positions x, y,","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/e620d162-e256-4aff-b3fa-67c0a4795dd6.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"brain-teaser","slug":"brain-teaser"},{"name":"brainteaser","slug":"brainteaser"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"moving-stones-until-consecutive-brainteaser-easy-leetcode","total":0},{"id":1595,"title":"Cousins in Binary Tree - Tree - Easy - LeetCode","imageUrl":"icon_249b4ce9-a2e8-4b2a-a369-264d0c802503.jpg","dateCreated":"2020-10-09T09:24:10.362Z","dateModified":"2020-10-09T09:24:23.315Z","contributedBy":"sumitc91","content":"In a binary tree, the root node is at depth 0, and children of each depth k node are at depth k+1.\nTwo nodes of a binary tree are cousins if they have the same depth, but have different parents.\nWe are given the root of a binary tree with unique values, and the values x and y of two","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/249b4ce9-a2e8-4b2a-a369-264d0c802503.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"cousins-in-binary-tree-tree-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}