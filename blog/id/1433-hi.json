{"id":1433,"title":"Valid Mountain Array - Array - Easy - LeetCode","imageUrl":"icon_250efc80-2f31-436f-9ecf-3cf7522aaf63.jpg","dateCreated":"2020-09-27T07:12:00.684Z","dateModified":"2020-09-27T07:12:13.075Z","contributedBy":"sumitc91","content":"<p>Given an array A of integers, return true if and only if it is a valid mountain array.</p>\n<p>Recall that A is a mountain array if and only if:</p>\n<p>A.length &gt;= 3<br />There exists some i with 0 &lt; i &lt; A.length - 1 such that:<br />A[0] &lt; A[1] &lt; ... A[i-1] &lt; A[i]<br />A[i] &gt; A[i+1] &gt; ... &gt; A[A.length - 1]&nbsp;</p>\n<p>Example 1:</p>\n<p>Input: [2,1]<br />Output: false<br />Example 2:</p>\n<p>Input: [3,5,5]<br />Output: false<br />Example 3:</p>\n<p>Input: [0,3,2,1]<br />Output: true<br />&nbsp;</p>\n<p>Note:</p>\n<p>0 &lt;= A.length &lt;= 10000<br />0 &lt;= A[i] &lt;= 10000&nbsp;</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    public bool ValidMountainArray(int[] A) {\n        if(A.Length&lt;3){\n            return false;\n        }\n        \n        if(A[0]&gt;A[1]){\n            return false;\n        }\n        \n        bool isIncreasing = true;        \n        for(int i=1;i&lt;A.Length;i++){\n            if(isIncreasing){\n                if(A[i-1]&gt;A[i]){\n                    isIncreasing=false;\n                }\n            }\n            else{\n                if(A[i-1]&lt;=A[i]){\n                    return false;\n                }\n            }\n        }\n        \n        //check if we found decreasing curve or not\n        return isIncreasing==false;\n    }\n}</code></pre>\n<p>&nbsp;</p>\n<p><br />Time Complexity: O(n)</p>\n<p>Space Complexity: O(1)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/250efc80-2f31-436f-9ecf-3cf7522aaf63.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"valid-mountain-array-array-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"recommendations":[{"id":1662,"title":"Search in Rotated Sorted Array II - Array - Medium - LeetCode","imageUrl":"icon_f90b9cf1-f98d-483f-9cb6-f0ccc23c9c57.jpg","dateCreated":"2020-11-10T06:51:27.488Z","dateModified":"2020-11-10T06:51:33.729Z","contributedBy":"sumitc91","content":"Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.\n(i.e., [0,0,1,2,2,5,6] might become [2,5,6,0,0,1,2]).\nYou are given a target value to search. If found in the array return true, otherwise return false.\nExample 1:\nInput: num","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/f90b9cf1-f98d-483f-9cb6-f0ccc23c9c57.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"search-in-rotated-sorted-array-ii-array-medium-leetcode","total":0},{"id":1608,"title":"Duplicate Emails - Sql - Easy - LeetCode","imageUrl":"icon_bd99f209-a7f9-453d-9a5a-c63d4392098f.jpg","dateCreated":"2020-10-16T07:15:00.174Z","dateModified":"2020-10-16T07:15:10.2Z","contributedBy":"sumitc91","content":"Write a SQL query to find all duplicate emails in a table named Person.\n+----+---------+<br />| Id | Email &nbsp; |<br />+----+---------+<br />| 1 &nbsp;| a@b.com |<br />| 2 &nbsp;| c@d.com |<br />| 3 &nbsp;| a@b.com |<br />+----+---------+<br />For example, your query should return the fo","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/bd99f209-a7f9-453d-9a5a-c63d4392098f.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"duplicate-emails-sql-easy-leetcode","total":0},{"id":1598,"title":"Find the Town Judge - Tree - Easy - LeetCode","imageUrl":"icon_2f8d0898-e59c-49cd-b25f-5234ed605d94.jpg","dateCreated":"2020-10-14T09:05:56.984Z","dateModified":"2020-10-14T09:06:09.069Z","contributedBy":"sumitc91","content":"In a town, there are N people labelled from 1 to N. &nbsp;There is a rumor that one of these people is secretly the town judge.\nIf the town judge exists, then:\nThe town judge trusts nobody.<br />Everybody (except for the town judge) trusts the town judge.<br />There is exactly one p","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/2f8d0898-e59c-49cd-b25f-5234ed605d94.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"graph","slug":"graph"},{"name":"leetcode","slug":"leetcode"}],"slug":"find-the-town-judge-tree-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}