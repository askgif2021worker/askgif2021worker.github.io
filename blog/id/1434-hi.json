{"id":1434,"title":"Squares of a Sorted Array - Array - Easy - LeetCode","imageUrl":"icon_d54bc893-8a99-4de6-ae9c-e6878c253063.jpg","dateCreated":"2020-09-27T07:42:12.373Z","dateModified":"2020-09-27T07:42:26.225Z","contributedBy":"sumitc91","content":"<p>Given an array of integers A sorted in non-decreasing order, return an array of the squares of each number, also in sorted non-decreasing order.</p>\n<p>Example 1:</p>\n<p>Input: [-4,-1,0,3,10]<br />Output: [0,1,9,16,100]<br />Example 2:</p>\n<p>Input: [-7,-3,2,3,11]<br />Output: [4,9,9,49,121]<br />&nbsp;</p>\n<p>Note:</p>\n<p>1 &lt;= A.length &lt;= 10000<br />-10000 &lt;= A[i] &lt;= 10000<br />A is sorted in non-decreasing order.</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    public int[] SortedSquares(int[] A) {\n        var stack = new Stack&lt;int&gt;();        \n        var pos = new int[A.Length];\n        var posLen = 0;\n        int i = 0;\n        for(i=0;i&lt;A.Length;i++){\n            if(A[i]&lt;0){\n                stack.Push(A[i]*A[i]);\n            }\n            else{\n                pos[posLen]=A[i]*A[i];\n                posLen++;\n            }\n        }\n        \n        i=0;\n        int j=0;\n        while(stack.Count&gt;0){\n            if(posLen==0 || j&gt;=posLen){\n                A[i]=stack.Pop();\n            }\n            else if(stack.Peek()&lt;pos[j]){\n                A[i]=stack.Pop();\n            }\n            else{\n                A[i]=pos[j];\n                j++;\n            }\n            i++;\n        }\n        \n        while(j&lt;posLen){\n            A[i]=pos[j];\n            j++;\n            i++;\n        }\n        \n        return A;\n    }\n}</code></pre>\n<p>&nbsp;</p>\n<p><br />Time Complexity: O(n)</p>\n<p>Space Complexity: O(n)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/d54bc893-8a99-4de6-ae9c-e6878c253063.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"squares-of-a-sorted-array-array-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"recommendations":[{"id":1715,"title":"Determine if String Halves Are Alike - String - Easy - LeetCode","imageUrl":"icon_8d5b87e0-0bd8-47c9-8f55-cfff94e5858d.jpg","dateCreated":"2021-01-08T09:24:14.63Z","dateModified":"2021-01-08T09:24:20.084Z","contributedBy":"sumitc91","content":"You are given a string s of even length. Split this string into two halves of equal lengths, and let a be the first half and b be the second half.\nTwo strings are alike if they have the same number of vowels ('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'). Notice that s contains upperca","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/8d5b87e0-0bd8-47c9-8f55-cfff94e5858d.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"string","slug":"string"}],"slug":"determine-if-string-halves-are-alike-string-easy-leetcode","total":0},{"id":1674,"title":"Combination Sum III - Array - Medium - LeetCode","imageUrl":"icon_becf4b84-69f9-4582-a8d7-d32b8422353a.jpg","dateCreated":"2020-11-18T11:38:07.946Z","dateModified":"2020-11-18T11:38:14.249Z","contributedBy":"sumitc91","content":"Find all valid combinations of k numbers that sum up to n such that the following conditions are true:\nOnly numbers 1 through 9 are used.<br />Each number is used at most once.<br />Return a list of all possible valid combinations. The list must not contain the same combination twice, and ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/becf4b84-69f9-4582-a8d7-d32b8422353a.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"combination-sum-iii-array-medium-leetcode","total":0},{"id":1672,"title":"Rotate Array - Array - Medium - LeetCode","imageUrl":"icon_37fb5cd6-ca4d-4282-9a29-a03ba8523202.jpg","dateCreated":"2020-11-18T07:21:27.3Z","dateModified":"2020-11-18T07:21:33.323Z","contributedBy":"sumitc91","content":"Given an array, rotate the array to the right by k steps, where k is non-negative.\nFollow up:\nTry to come up as many solutions as you can, there are at least 3 different ways to solve this problem.<br />Could you do it in-place with O(1) extra space?<br />&nbsp;\nExample 1:</p","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/37fb5cd6-ca4d-4282-9a29-a03ba8523202.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"rotate-array-array-medium-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}