{"id":1442,"title":"Matrix Diagonal Sum - Array - Easy - LeetCode","imageUrl":"icon_eebed956-7fbf-4156-b01a-644970265fbb.jpg","dateCreated":"2020-09-27T12:51:56.56Z","dateModified":"2020-09-27T12:52:12.921Z","contributedBy":"sumitc91","content":"<p>Given a square matrix mat, return the sum of the matrix diagonals.</p>\n<p>Only include the sum of all the elements on the primary diagonal and all the elements on the secondary diagonal that are not part of the primary diagonal.</p>\n<p>Example 1:</p>\n<p>Input: mat = [[1,2,3],<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; [4,5,6],<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; [7,8,9]]<br />Output: 25<br />Explanation: Diagonals sum: 1 + 5 + 9 + 3 + 7 = 25<br />Notice that element mat[1][1] = 5 is counted only once.<br />Example 2:</p>\n<p>Input: mat = [[1,1,1,1],<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; [1,1,1,1],<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; [1,1,1,1],<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; [1,1,1,1]]<br />Output: 8<br />Example 3:</p>\n<p>Input: mat = [[5]]<br />Output: 5<br />&nbsp;</p>\n<p>Constraints:</p>\n<p>n == mat.length == mat[i].length<br />1 &lt;= n &lt;= 100<br />1 &lt;= mat[i][j] &lt;= 100</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    public int DiagonalSum(int[][] mat) {\n        int sum = 0;\n        for(int i=0;i&lt;mat.Length;i++){\n            int j = mat.Length-i-1;            \n            sum+=mat[i][i];\n            if(j!=i){                \n                sum+=mat[i][j];\n            }            \n            j--;\n        }\n         \n        return sum;\n    }\n}</code></pre>\n<p>&nbsp;</p>\n<p><br />Time Complexity: O(n)</p>\n<p>Space Complexity: O(1)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/eebed956-7fbf-4156-b01a-644970265fbb.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"matrix-diagonal-sum-array-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"recommendations":[{"id":1679,"title":"Insert Delete GetRandom O(1) - Array - Medium - LeetCode","imageUrl":"icon_8589fcba-acbd-4690-8c6e-3f8e5511c176.jpg","dateCreated":"2020-11-19T06:35:11.658Z","dateModified":"2020-11-19T06:35:19.394Z","contributedBy":"sumitc91","content":"Implement the RandomizedSet class:\nbool insert(int val) Inserts an item val into the set if not present. Returns true if the item was not present, false otherwise.<br />bool remove(int val) Removes an item val from the set if present. Returns true if the item was present, false otherwise.<","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/8589fcba-acbd-4690-8c6e-3f8e5511c176.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"insert-delete-getrandom-o1-array-medium-leetcode","total":0},{"id":1669,"title":"Maximum Product Subarray - Array - Medium - LeetCode","imageUrl":"icon_7f1afad0-6986-4b75-b8b1-48cc2da5b308.jpg","dateCreated":"2020-11-17T12:27:09.279Z","dateModified":"2020-11-17T12:27:13.842Z","contributedBy":"sumitc91","content":"Given an integer array nums, find the contiguous subarray within an array (containing at least one number) which has the largest product.\nExample 1:\nInput: [2,3,-2,4]<br />Output: 6<br />Explanation: [2,3] has the largest product 6.<br />Example 2:\nInput: [-2,0,-1]<br />Outpu","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/7f1afad0-6986-4b75-b8b1-48cc2da5b308.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"maximum-product-subarray-array-medium-leetcode","total":0},{"id":1649,"title":"Spiral Matrix II - Array - Medium - LeetCode","imageUrl":"icon_6df8412b-55e5-4d25-9094-489e2623ffe0.jpg","dateCreated":"2020-10-31T08:11:06.067Z","dateModified":"2020-10-31T08:11:30.766Z","contributedBy":"sumitc91","content":"Given a positive integer n, generate a square matrix filled with elements from 1 to n2 in spiral order.\nExample:\nInput: 3<br />Output:<br />[<br />&nbsp;[ 1, 2, 3 ],<br />&nbsp;[ 8, 9, 4 ],<br />&nbsp;[ 7, 6, 5 ]<br />]\n&nbsp;\n<pre class=\"language-csharp\"><code>public cla","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/6df8412b-55e5-4d25-9094-489e2623ffe0.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"spiral-matrix-ii-array-medium-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}