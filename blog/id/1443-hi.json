{"id":1443,"title":"Special Positions in a Binary Matrix - Array - Easy - LeetCode","imageUrl":"icon_323844a0-3f00-4ac5-a1f4-97c37ba7e74f.jpg","dateCreated":"2020-09-27T13:24:16.856Z","dateModified":"2020-09-27T13:24:31.525Z","contributedBy":"sumitc91","content":"<p>Given a rows x cols matrix mat, where mat[i][j] is either 0 or 1, return the number of special positions in mat.</p>\n<p>A position (i,j) is called special if mat[i][j] == 1 and all other elements in row i and column j are 0 (rows and columns are 0-indexed).</p>\n<p>&nbsp;</p>\n<p>Example 1:</p>\n<p>Input: mat = [[1,0,0],<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; [0,0,1],<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; [1,0,0]]<br />Output: 1<br />Explanation: (1,2) is a special position because mat[1][2] == 1 and all other elements in row 1 and column 2 are 0.<br />Example 2:</p>\n<p>Input: mat = [[1,0,0],<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; [0,1,0],<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; [0,0,1]]<br />Output: 3<br />Explanation: (0,0), (1,1) and (2,2) are special positions.&nbsp;<br />Example 3:</p>\n<p>Input: mat = [[0,0,0,1],<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; [1,0,0,0],<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; [0,1,1,0],<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; [0,0,0,0]]<br />Output: 2<br />Example 4:</p>\n<p>Input: mat = [[0,0,0,0,0],<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; [1,0,0,0,0],<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; [0,1,0,0,0],<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; [0,0,1,0,0],<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; [0,0,0,1,1]]<br />Output: 3<br />&nbsp;</p>\n<p>Constraints:</p>\n<p>rows == mat.length<br />cols == mat[i].length<br />1 &lt;= rows, cols &lt;= 100<br />mat[i][j] is 0 or 1.</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    public int NumSpecial(int[][] mat) {\n        int m = mat.Length;\n        int n = mat[0].Length;\n        int res = 0;\n        var col = new int[n];\n        var row = new int[m];\n        for (int i = 0; i &lt; m; i++) \n            for (int j = 0; j &lt; n; j++) \n                if (mat[i][j] == 1){\n                    col[j]++;\n                    row[i]++;\n                } \n        for (int i = 0; i &lt; m; i++) \n            for (int j = 0; j &lt; n; j++) \n                if (mat[i][j] == 1 &amp;&amp; row[i] == 1 &amp;&amp; col[j] == 1) res++;\n        return res;\n    }\n    \n   \n}</code></pre>\n<p>&nbsp;</p>\n<p><br />Time Complexity: O(n)</p>\n<p>Space Complexity: O(n)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/323844a0-3f00-4ac5-a1f4-97c37ba7e74f.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"special-positions-in-a-binary-matrix-array-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"recommendations":[{"id":1710,"title":"Count the Number of Consistent Strings - String - Easy - LeetCode","imageUrl":"icon_6dacc55b-f13f-4e2c-a0ff-d00050cfb65a.jpg","dateCreated":"2020-12-28T13:45:06.506Z","dateModified":"2020-12-28T13:45:12.666Z","contributedBy":"sumitc91","content":"You are given a string allowed consisting of distinct characters and an array of strings words. A string is consistent if all characters in the string appear in the string allowed.\nReturn the number of consistent strings in the array words.\n&nbsp;\nExample 1:\nInput: all","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/6dacc55b-f13f-4e2c-a0ff-d00050cfb65a.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"string","slug":"string"}],"slug":"count-the-number-of-consistent-strings-string-easy-leetcode","total":0},{"id":1647,"title":"Slowest Key - Array - Easy - LeetCode","imageUrl":"icon_836f29a5-8a43-4160-b64a-fbf8416788bd.jpg","dateCreated":"2020-10-31T03:14:43.566Z","dateModified":"2020-10-31T03:14:48.648Z","contributedBy":"sumitc91","content":"A newly designed keypad was tested, where a tester pressed a sequence of n keys, one at a time.\nYou are given a string keysPressed of length n, where keysPressed[i] was the ith key pressed in the testing sequence, and a sorted list releaseTimes, where releaseTimes[i] was the time the ith k","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/836f29a5-8a43-4160-b64a-fbf8416788bd.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"slowest-key-array-easy-leetcode","total":0},{"id":1597,"title":"Flood Fill - Tree - Easy - LeetCode","imageUrl":"icon_0e3c9311-ee03-4845-8887-471eb8b67c05.jpg","dateCreated":"2020-10-09T13:26:25.345Z","dateModified":"2020-10-09T13:26:36.925Z","contributedBy":"sumitc91","content":"An image is represented by a 2-D array of integers, each integer representing the pixel value of the image (from 0 to 65535).\nGiven a coordinate (sr, sc) representing the starting pixel (row and column) of the flood fill, and a pixel value newColor, \"flood fill\" the image.\nTo perfor","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/0e3c9311-ee03-4845-8887-471eb8b67c05.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"flood-fill-tree-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}