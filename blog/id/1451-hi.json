{"id":1451,"title":"Find the Difference - Hash Table - Easy - LeetCode","imageUrl":"icon_0be92be0-c25e-4e63-af97-19c0f08ad376.jpg","dateCreated":"2020-09-28T05:13:07.735Z","dateModified":"2020-09-28T05:13:36.041Z","contributedBy":"sumitc91","content":"<p>Given two strings s and t which consist of only lowercase letters.</p>\n<p>String t is generated by random shuffling string s and then add one more letter at a random position.</p>\n<p>Find the letter that was added in t.</p>\n<p>Example:</p>\n<p>Input:<br />s = \"abcd\"<br />t = \"abcde\"</p>\n<p>Output:<br />e</p>\n<p>Explanation:<br />'e' is the letter that was added.</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    public char FindTheDifference(string s, string t) {\n        var map = new Dictionary&lt;char, int&gt;();\n        for(int i=0;i&lt;s.Length;i++){\n            if(map.ContainsKey(s[i])){\n                map[s[i]]++;\n            }\n            else{\n                map.Add(s[i],1);\n            }\n        }\n        \n        var map2 = new Dictionary&lt;char, int&gt;();\n        for(int i=0;i&lt;t.Length;i++){\n            if(map2.ContainsKey(t[i])){\n                map2[t[i]]++;\n            }\n            else{\n                map2.Add(t[i],1);\n            }\n        }\n        \n        foreach(var item in map2){\n            if(!map.ContainsKey(item.Key)){\n                return item.Key;\n            }\n            \n            if(map[item.Key]!=item.Value){\n                return item.Key;\n            }\n        }\n        \n        return '0';\n    }\n}</code></pre>\n<p>&nbsp;</p>\n<p><br />Time Complexity: O(n)</p>\n<p>Space Complexity: O(n)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/0be92be0-c25e-4e63-af97-19c0f08ad376.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"find-the-difference-hash-table-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"hash-table","slug":"hash-table"},{"name":"leetcode","slug":"leetcode"}],"recommendations":[{"id":1702,"title":"Subarray Sum Equals K - Array - Medium - LeetCode","imageUrl":"icon_5dec0e7e-af11-40c9-b0bb-98503e290084.jpg","dateCreated":"2020-11-21T04:33:22.934Z","dateModified":"2020-11-21T04:33:27.536Z","contributedBy":"sumitc91","content":"Given an array of integers nums and an integer k, return the total number of continuous subarrays whose sum equals to k.\n&nbsp;\nExample 1:\nInput: nums = [1,1,1], k = 2<br />Output: 2<br />Example 2:\nInput: nums = [1,2,3], k = 3<br />Output: 2<br />&nbsp;\nConstra","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/5dec0e7e-af11-40c9-b0bb-98503e290084.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"subarray-sum-equals-k-array-medium-leetcode","total":0},{"id":1615,"title":"License Key Formatting - String - Easy - LeetCode","imageUrl":"icon_168f3a9d-b3aa-4758-a48d-b2e53a3ad538.jpg","dateCreated":"2020-10-17T04:06:23.384Z","dateModified":"2020-10-17T04:06:32.538Z","contributedBy":"sumitc91","content":"You are given a license key represented as a string S which consists of only alphanumeric character and dashes. The string is separated into N+1 groups by N dashes.\nGiven a number K, we would want to reformat the strings such that each group contains exactly K characters, except for the fi","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/168f3a9d-b3aa-4758-a48d-b2e53a3ad538.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"string","slug":"string"}],"slug":"license-key-formatting-string-easy-leetcode","total":0},{"id":1598,"title":"Find the Town Judge - Tree - Easy - LeetCode","imageUrl":"icon_2f8d0898-e59c-49cd-b25f-5234ed605d94.jpg","dateCreated":"2020-10-14T09:05:56.984Z","dateModified":"2020-10-14T09:06:09.069Z","contributedBy":"sumitc91","content":"In a town, there are N people labelled from 1 to N. &nbsp;There is a rumor that one of these people is secretly the town judge.\nIf the town judge exists, then:\nThe town judge trusts nobody.<br />Everybody (except for the town judge) trusts the town judge.<br />There is exactly one p","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/2f8d0898-e59c-49cd-b25f-5234ed605d94.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"graph","slug":"graph"},{"name":"leetcode","slug":"leetcode"}],"slug":"find-the-town-judge-tree-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}