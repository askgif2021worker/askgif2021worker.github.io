{"id":1456,"title":"Keyboard Row - Hash Table - Easy - LeetCode","imageUrl":"icon_d5c97f10-e192-42bb-b895-e916685b751f.jpg","dateCreated":"2020-09-28T12:04:49.008Z","dateModified":"2020-09-28T12:05:05.346Z","contributedBy":"sumitc91","content":"<p>Given a List of words, return the words that can be typed using letters of alphabet on only one row's of American keyboard like the image below.</p>\n<p>Example:</p>\n<p>Input: [\"Hello\", \"Alaska\", \"Dad\", \"Peace\"]<br />Output: [\"Alaska\", \"Dad\"]<br />&nbsp;</p>\n<p>Note:</p>\n<p>You may use one character in the keyboard more than once.<br />You may assume the input string will only contain letters of alphabet.</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    public string[] FindWords(string[] words) {\n        if(words.Length==0){\n            return words;\n        }\n        \n        var strArr = new string[]{\"qwertyuiop\", \"asdfghjkl\", \"zxcvbnm\"};\n        var map = new Dictionary&lt;char,int&gt;();\n        for(int i=0;i&lt;strArr.Length;i++){\n            for(int j=0;j&lt;strArr[i].Length;j++){\n                map.Add(strArr[i][j],i);\n            }\n        }\n                \n        var result = new List&lt;string&gt;();\n        for(int i=0;i&lt;words.Length;i++){\n            var str =words[i].ToLower();\n            int index = map[str[0]];\n            bool found = true;\n            for(int j=1;j&lt;str.Length;j++){\n                if(map[str[j]]!=index){\n                    found = false;\n                    break;\n                }\n            }  \n            if(found){\n                result.Add(words[i]);\n            }            \n        }\n        \n        return result.ToArray();\n    }\n}</code></pre>\n<p>&nbsp;</p>\n<p><br />Time Complexity: O(m*n)</p>\n<p>Space Complexity: O(m*n)</p>\n<p>Where m is the number of strings and n is the maximum character in the string.</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/d5c97f10-e192-42bb-b895-e916685b751f.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"keyboard-row-hash-table-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"hash-table","slug":"hash-table"},{"name":"leetcode","slug":"leetcode"}],"recommendations":[{"id":1715,"title":"Determine if String Halves Are Alike - String - Easy - LeetCode","imageUrl":"icon_8d5b87e0-0bd8-47c9-8f55-cfff94e5858d.jpg","dateCreated":"2021-01-08T09:24:14.63Z","dateModified":"2021-01-08T09:24:20.084Z","contributedBy":"sumitc91","content":"You are given a string s of even length. Split this string into two halves of equal lengths, and let a be the first half and b be the second half.\nTwo strings are alike if they have the same number of vowels ('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'). Notice that s contains upperca","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/8d5b87e0-0bd8-47c9-8f55-cfff94e5858d.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"string","slug":"string"}],"slug":"determine-if-string-halves-are-alike-string-easy-leetcode","total":0},{"id":1663,"title":"Defuse the Bomb - Array - Easy - LeetCode","imageUrl":"icon_e0c7ac1d-e52e-489e-849e-a7842cdb2c18.jpg","dateCreated":"2020-11-15T15:48:36.584Z","dateModified":"2020-11-15T15:48:43.094Z","contributedBy":"sumitc91","content":"You have a bomb to defuse, and your time is running out! Your informer will provide you with a circular array code of length of n and a key k.\nTo decrypt the code, you must replace every number. All the numbers are replaced simultaneously.\nIf k &gt; 0, replace the ith number with th","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/e0c7ac1d-e52e-489e-849e-a7842cdb2c18.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"defuse-the-bomb-array-easy-leetcode","total":0},{"id":1634,"title":"3Sum Closest - Array - Medium - LeetCode","imageUrl":"icon_981f57b3-a4c6-4c16-baeb-a49e75fe9497.jpg","dateCreated":"2020-10-23T07:22:34.29Z","dateModified":"2020-10-23T07:22:55.266Z","contributedBy":"sumitc91","content":"Given an array nums of n integers and an integer target, find three integers in nums such that the sum is closest to target. Return the sum of the three integers. You may assume that each input would have exactly one solution.\n&nbsp;\nExample 1:\nInput: nums = [-1,2,1,-4], targ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/981f57b3-a4c6-4c16-baeb-a49e75fe9497.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"3sum-closest-array-medium-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}