{"id":1458,"title":"Longest Harmonious Subsequence - Hash Table - Easy - LeetCode","imageUrl":"icon_45a24081-3799-4d29-afc5-fb66c0e1768f.jpg","dateCreated":"2020-09-28T12:36:27.856Z","dateModified":"2020-09-28T12:37:16.489Z","contributedBy":"sumitc91","content":"<p>We define a harmonious array as an array where the difference between its maximum value and its minimum value is exactly 1.</p>\n<p>Given an integer array nums, return the length of its longest harmonious subsequence among all its possible subsequences.</p>\n<p>A subsequence of array is a sequence that can be derived from the array by deleting some or no elements without changing the order of the remaining elements.</p>\n<p>&nbsp;</p>\n<p>Example 1:</p>\n<p>Input: nums = [1,3,2,2,5,2,3,7]<br />Output: 5<br />Explanation: The longest harmonious subsequence is [3,2,2,2,3].<br />Example 2:</p>\n<p>Input: nums = [1,2,3,4]<br />Output: 2<br />Example 3:</p>\n<p>Input: nums = [1,1,1,1]<br />Output: 0<br />&nbsp;</p>\n<p>Constraints:</p>\n<p>1 &lt;= nums.length &lt;= 2 * 104<br />-109 &lt;= nums[i] &lt;= 109</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    public int FindLHS(int[] nums) {\n        var map = new Dictionary&lt;int,int&gt;();        \n        for(int i=0;i&lt;nums.Length;i++){\n            if(map.ContainsKey(nums[i])){\n                map[nums[i]]++;\n            }\n            else{\n                map.Add(nums[i],1);                \n            }\n        }\n        \n        int max = 0;\n        foreach(var item in map){\n            if(map.ContainsKey(item.Key+1)){\n                max = Math.Max(max, item.Value+map[item.Key+1]);\n            }\n        }\n                \n        return max;\n    }\n}</code></pre>\n<p>&nbsp;</p>\n<p><br />Time Complexity: O(n)</p>\n<p>Space Complexity: O(n)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/45a24081-3799-4d29-afc5-fb66c0e1768f.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"longest-harmonious-subsequence-hash-table-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"hash-table","slug":"hash-table"},{"name":"leetcode","slug":"leetcode"}],"recommendations":[{"id":1665,"title":"Subsets II - Array - Medium - LeetCode","imageUrl":"icon_aaa8f566-bd39-4867-a4ad-9d2ec8eb9fec.jpg","dateCreated":"2020-11-17T08:34:58.632Z","dateModified":"2020-11-17T08:35:04.765Z","contributedBy":"sumitc91","content":"Given a collection of integers that might contain duplicates, nums, return all possible subsets (the power set).\nNote: The solution set must not contain duplicate subsets.\nExample:\nInput: [1,2,2]<br />Output:<br />[<br />&nbsp; [2],<br />&nbsp; [1],<br />&nbsp; [1,2,2],<br />","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/aaa8f566-bd39-4867-a4ad-9d2ec8eb9fec.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"subsets-ii-array-medium-leetcode","total":0},{"id":1622,"title":"Rotate String - String - Easy - LeetCode","imageUrl":"icon_cfadbae1-5a57-4a8d-8e75-47f7f8493641.jpg","dateCreated":"2020-10-17T06:43:07.643Z","dateModified":"2020-10-17T06:43:14.01Z","contributedBy":"sumitc91","content":"We are given two strings, A and B.\nA shift on A consists of taking string A and moving the leftmost character to the rightmost position. For example, if A = 'abcde', then it will be 'bcdea' after one shift on A. Return True if and only if A can become B after some number of shifts on A.</p","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/021208ce-72e5-4026-a526-0c8b482a8d72.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"string","slug":"string"}],"slug":"rotate-string-string-easy-leetcode","total":0},{"id":1601,"title":"N-th Tribonacci Number - Recursion - Easy - LeetCode","imageUrl":"icon_8864cfe3-0823-418f-867d-6299b93c28bd.jpg","dateCreated":"2020-10-15T09:12:30.383Z","dateModified":"2020-10-15T09:12:56.022Z","contributedBy":"sumitc91","content":"The Tribonacci sequence Tn is defined as follows:&nbsp;\nT0 = 0, T1 = 1, T2 = 1, and Tn+3 = Tn + Tn+1 + Tn+2 for n &gt;= 0.\nGiven n, return the value of Tn.\n&nbsp;\nExample 1:\nInput: n = 4<br />Output: 4<br />Explanation:<br />T_3 = 0 + 1 + 1 = 2<br />T_4 = 1 + 1 ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/8864cfe3-0823-418f-867d-6299b93c28bd.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"dynamic-programming","slug":"dynamic-programming"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"recursion","slug":"recursion"}],"slug":"n-th-tribonacci-number-recursion-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}