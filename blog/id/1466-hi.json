{"id":1466,"title":"Shortest Completing Word","imageUrl":"icon_106f9cca-fb20-4894-91c6-0b6645098163.jpg","dateCreated":"2020-09-30T04:36:30.097Z","dateModified":"2020-09-30T04:36:39.493Z","contributedBy":"sumitc91","content":"<p>Given a string licensePlate and an array of strings words, find the shortest completing word in words.</p>\n<p>A completing word is a word that contains all the letters in licensePlate. Ignore numbers and spaces in licensePlate, and treat letters as case insensitive. If a letter appears more than once in licensePlate, then it must appear in the word the same number of times or more.</p>\n<p>For example, if licensePlate = \"aBc 12c\", then it contains letters 'a', 'b' (ignoring case), and 'c' twice. Possible completing words are \"abccdef\", \"caaacab\", and \"cbca\".</p>\n<p>Return the shortest completing word in words. It is guaranteed an answer exists. If there are multiple shortest completing words, return the first one that occurs in words.</p>\n<p>&nbsp;</p>\n<p>Example 1:</p>\n<p>Input: licensePlate = \"1s3 PSt\", words = [\"step\",\"steps\",\"stripe\",\"stepple\"]<br />Output: \"steps\"<br />Explanation: licensePlate contains letters 's', 'p', 's' (ignoring case), and 't'.<br />\"step\" contains 't' and 'p', but only contains 1 's'.<br />\"steps\" contains 't', 'p', and both 's' characters.<br />\"stripe\" is missing an 's'.<br />\"stepple\" is missing an 's'.<br />Since \"steps\" is the only word containing all the letters, that is the answer.<br />Example 2:</p>\n<p>Input: licensePlate = \"1s3 456\", words = [\"looks\",\"pest\",\"stew\",\"show\"]<br />Output: \"pest\"<br />Explanation: licensePlate only contains the letter 's'. All the words contain 's', but among these \"pest\", \"stew\", and \"show\" are shortest. The answer is \"pest\" because it is the word that appears earliest of the 3.<br />Example 3:</p>\n<p>Input: licensePlate = \"Ah71752\", words = [\"suggest\",\"letter\",\"of\",\"husband\",\"easy\",\"education\",\"drug\",\"prevent\",\"writer\",\"old\"]<br />Output: \"husband\"<br />Example 4:</p>\n<p>Input: licensePlate = \"OgEu755\", words = [\"enough\",\"these\",\"play\",\"wide\",\"wonder\",\"box\",\"arrive\",\"money\",\"tax\",\"thus\"]<br />Output: \"enough\"<br />Example 5:</p>\n<p>Input: licensePlate = \"iMSlpe4\", words = [\"claim\",\"consumer\",\"student\",\"camera\",\"public\",\"never\",\"wonder\",\"simple\",\"thought\",\"use\"]<br />Output: \"simple\"</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    public string ShortestCompletingWord(string licensePlate, string[] words) {\n        var map = new Dictionary&lt;char,int&gt;();\n        for(int i=0;i&lt;licensePlate.Length;i++){\n            licensePlate = licensePlate.ToLower();\n            if(licensePlate[i]&gt;=65 &amp;&amp; licensePlate[i]&gt;= 90){\n                if(map.ContainsKey(licensePlate[i])){\n                    map[licensePlate[i]]++;\n                }\n                else{\n                    map.Add(licensePlate[i],1);\n                }\n            }\n        }\n        \n        int minLen = int.MaxValue;\n        string ans = string.Empty;\n        for(int i=0;i&lt;words.Length;i++){\n            var wordMap = new Dictionary&lt;char,int&gt;();\n            var word = words[i].ToLower();\n            for(int j=0;j&lt;words[i].Length;j++){\n                if(wordMap.ContainsKey(word[j])){\n                    wordMap[word[j]]++;\n                }\n                else{\n                    wordMap.Add(word[j],1);\n                }\n            }\n                        \n            bool found = true;            \n            foreach(var item in map){\n                if(wordMap.ContainsKey(item.Key)){\n                    if(wordMap[item.Key]&lt;item.Value){\n                        found = false;\n                        break;\n                    }\n                }\n                else{\n                    found = false;\n                    break;\n                }\n            }\n            \n            if(found &amp;&amp; words[i].Length&lt;minLen){\n                minLen = words[i].Length;\n                ans = words[i];\n            }\n        }\n        \n        return ans;\n    }\n}</code></pre>\n<p>Time Complexity: O(m*n)</p>\n<p>Space complexity: O(m*n)</p>\n<p>Where m and n are the total number of strings and length of strings.</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/106f9cca-fb20-4894-91c6-0b6645098163.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"shortest-completing-word","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"hash-table","slug":"hash-table"},{"name":"leetcode","slug":"leetcode"}],"recommendations":[{"id":1664,"title":"Design an Ordered Stream - Array - Easy - LeetCode","imageUrl":"icon_ee2c2f78-fadb-4eec-b972-5425cc0c84b8.jpg","dateCreated":"2020-11-16T03:10:10.642Z","dateModified":"2020-11-16T03:10:15.886Z","contributedBy":"sumitc91","content":"There are n (id, value) pairs, where id is an integer between 1 and n and value is a string. No two pairs have the same id.\nDesign a stream that takes the n pairs in an arbitrary order, and returns the values over several calls in increasing order of their ids.\nImplement the Ordered","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/ee2c2f78-fadb-4eec-b972-5425cc0c84b8.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"design-an-ordered-stream-array-easy-leetcode","total":0},{"id":1607,"title":"Employees Earning More Than Their Managers - Sql - Easy - LeetCode","imageUrl":"icon_0a6cfc7c-14b2-43e5-8538-b4498ef0b5c3.jpg","dateCreated":"2020-10-16T06:26:34.794Z","dateModified":"2020-10-16T06:26:46.282Z","contributedBy":"sumitc91","content":"The Employee table holds all employees including their managers. Every employee has an Id, and there is also a column for the manager Id.\n+----+-------+--------+-----------+<br />| Id | Name &nbsp;| Salary | ManagerId |<br />+----+-------+--------+-----------+<br />| 1 &nbsp;| Joe &nbsp; |","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/0a6cfc7c-14b2-43e5-8538-b4498ef0b5c3.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"mysql","slug":"mysql"},{"name":"sql","slug":"sql"}],"slug":"employees-earning-more-than-their-managers-sql-easy-leetcode","total":0},{"id":1606,"title":"Combine Two Tables - Sql - Easy - LeetCode","imageUrl":"icon_88b1c8bf-74b6-45d3-8314-cbd4ac4ead29.jpg","dateCreated":"2020-10-16T05:53:11.599Z","dateModified":"2020-10-16T05:53:36.309Z","contributedBy":"sumitc91","content":"Write a SQL query for a report that provides the following information for each person in the Person table, regardless if there is an address for each of those people:\nTable: Person\n+-------------+---------+<br />| Column Name | Type &nbsp; &nbsp;|<br />+-------------+---------+<br ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/5b6e96ac-0881-4845-bd1a-6f2f1cbcf99e.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"mysql","slug":"mysql"},{"name":"sql","slug":"sql"}],"slug":"combine-two-tables-sql-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}