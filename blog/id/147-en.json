{"id":147,"title":"Upload an image on Amazon S3 using C# in .net MVC 4.5 / Core 2.1?","imageUrl":"e4f724bc-e4de-46a9-b9a6-ca64de2af932_aws-s3.jpeg","dateCreated":"2018-11-06T05:25:11.052Z","dateModified":"2018-11-06T05:25:32.345Z","contributedBy":"AskGif","content":"<p>Query:</p>\r\n<p>I want to upload and manage images on my Amazon S3 server. is there any c# plugin already available for the same? I'm using .net MVC 4.5 framework.</p>\r\n<p>I tried from the below link Upload an Object Using the AWS SDK for .NET</p>\r\n<p><a title=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/UploadObjSingleOpNET.html\" href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/UploadObjSingleOpNET.html\">http://docs.aws.amazon.com/AmazonS3/latest/dev/UploadObjSingleOpNET.html</a></p>\r\n<p>But it is not working.</p>\r\n<p>&nbsp;</p>\r\n<p>Solution:</p>\r\n<p>I have created following class for specifically uploading an image on S3 server. you can make a few changes on input type and return type of the method to make it work for you.</p>\r\n<p>you just need to provide AccessKey and SecretKey of IAM.</p>\r\n<p>&nbsp;</p>\r\n<pre class=\"language-csharp\"><code>using System;\r\nusing System.Collections.Generic;\r\nusing System.Drawing;\r\nusing System.Drawing.Drawing2D;\r\nusing System.Drawing.Imaging;\r\nusing System.IO;\r\nusing System.Linq;\r\nusing System.Net;\r\nusing System.Reflection;\r\nusing System.Web;\r\nusing Amazon.S3;\r\nusing Amazon.S3.Model;\r\nusing urNotice.Common.Infrastructure.Common.Config;\r\nusing urNotice.Common.Infrastructure.Model.urNoticeModel.ResponseWrapper;\r\nusing urNotice.Services.ErrorLogger;\r\n\r\nnamespace urNotice.Services.UploadImageService\r\n{\r\n  public class S3ImageUploadServices\r\n  {\r\n\r\nprivate static readonly ILogger Logger = new Logger(Convert.ToString(MethodBase.GetCurrentMethod().DeclaringType));        \r\nprivate static readonly string _awsAccessKey = AwsConfig._awsAccessKey;\r\nprivate static readonly string _awsSecretKey = AwsConfig._awsSecretKey;\r\nprivate static readonly string _bucketName = AwsConfig._bucketName;\r\nprivate static readonly string _amazonS3PublicUrl = AwsConfig._amazonS3PublicUrl;\r\n\r\npublic static ImgurImageResponse UploadMultipleImagesToImgur(IEnumerable&lt;HttpPostedFileBase&gt; files, string albumid)\r\n{\r\n\r\n\r\n    var fileName = Guid.NewGuid().ToString();\r\n    var path = albumid + \"/\" + fileName;\r\n    var imgurImage = new ImgurImageResponse();\r\n    foreach (HttpPostedFileBase file in files)\r\n    {\r\n\r\n        try\r\n        {\r\n            path = path +\".\"+ file.FileName.Split('.').Last();\r\n            IAmazonS3 client;\r\n            Stream inputSteram = ResizeImageFile(file.InputStream, 1024);\r\n            using (client = Amazon.AWSClientFactory.CreateAmazonS3Client(_awsAccessKey, _awsSecretKey, Amazon.RegionEndpoint.APSoutheast1))\r\n            {\r\n                var request = new PutObjectRequest()\r\n                {\r\n                    BucketName = _bucketName,\r\n                    CannedACL = S3CannedACL.PublicRead,//PERMISSION TO FILE PUBLIC ACCESIBLE\r\n                    Key = string.Format(path),\r\n                    InputStream = inputSteram//SEND THE FILE STREAM\r\n                };\r\n\r\n                client.PutObject(request);\r\n            }\r\n        }\r\n        catch (Exception ex)\r\n        {\r\n\r\n            Logger.Error(\"Exception Occured while uploading to Amazon S3 : \"+ex, ex);\r\n        }\r\n\r\n            imgurImage.data = new imgurData();\r\n\r\n            imgurImage.data.link = _amazonS3PublicUrl+\"/\"+_bucketName+\"/\"+path;\r\n            imgurImage.data.link_s = _amazonS3PublicUrl + \"/\" + _bucketName + \"/\" + path;\r\n            imgurImage.data.link_m = _amazonS3PublicUrl + \"/\" + _bucketName + \"/\" + path;\r\n            imgurImage.data.link_l = _amazonS3PublicUrl + \"/\" + _bucketName + \"/\" + path;\r\n            imgurImage.data.copyText = \"\";\r\n\r\n    }\r\n    return imgurImage;\r\n}\r\n\r\npublic static ImgurImageResponse UploadSingleImageToImgur(HttpPostedFileBase file, string albumid)\r\n{\r\n\r\n\r\n    var fileName = Guid.NewGuid().ToString();\r\n    var path = albumid + \"/\" + fileName;\r\n    var imgurImage = new ImgurImageResponse();\r\n\r\n        try\r\n        {\r\n            path = path + \".\" + file.FileName.Split('.').Last();\r\n            IAmazonS3 client;\r\n            Stream inputSteram = null;\r\n\r\n            if (file.FileName.Split('.')[1] == \"gif\")\r\n            {\r\n                inputSteram = file.InputStream;\r\n            }\r\n            else\r\n            {\r\n                inputSteram = ResizeImageFile(file.InputStream, 1024);\r\n            }\r\n\r\n            using (client = Amazon.AWSClientFactory.CreateAmazonS3Client(_awsAccessKey, _awsSecretKey, Amazon.RegionEndpoint.APSoutheast1))\r\n            {\r\n                var request = new PutObjectRequest()\r\n                {\r\n                    BucketName = _bucketName,\r\n                    CannedACL = S3CannedACL.PublicRead,//PERMISSION TO FILE PUBLIC ACCESIBLE\r\n                    Key = string.Format(path),\r\n                    InputStream = inputSteram,//SEND THE FILE STREAM,                            \r\n                };\r\n\r\n\r\n                if (file.FileName.Split('.')[1] == \"gif\")\r\n                {\r\n                    request.ContentType = \"image/gif\";\r\n                }\r\n\r\n                client.PutObject(request);\r\n            }\r\n        }\r\n        catch (Exception ex)\r\n        {\r\n\r\n            Logger.Error(\"Exception Occured while uploading to Amazon S3 : \" + ex, ex);\r\n        }\r\n\r\n        imgurImage.data = new imgurData();\r\n\r\n        imgurImage.data.link = _amazonS3PublicUrl + \"/\" + _bucketName + \"/\" + path;\r\n        imgurImage.data.link_s = _amazonS3PublicUrl + \"/\" + _bucketName + \"/\" + path;\r\n        imgurImage.data.link_m = _amazonS3PublicUrl + \"/\" + _bucketName + \"/\" + path;\r\n        imgurImage.data.link_l = _amazonS3PublicUrl + \"/\" + _bucketName + \"/\" + path;\r\n        imgurImage.data.copyText = \"\";\r\n\r\n\r\n    return imgurImage;\r\n}\r\n\r\npublic static byte[] StreamToByteArray(Stream input)\r\n{\r\n    byte[] buffer = new byte[16 * 1024];\r\n    using (MemoryStream ms = new MemoryStream())\r\n    {\r\n        int read;\r\n        while ((read = input.Read(buffer, 0, buffer.Length)) &gt; 0)\r\n        {\r\n            ms.Write(buffer, 0, read);\r\n        }\r\n        return ms.ToArray();\r\n    }\r\n}\r\n\r\npublic static Stream GifImageFileWithoutCompression(Stream imageFileStream) // Set targetSize to 1024\r\n{\r\n    byte[] imageFile = StreamToByteArray(imageFileStream);\r\n    using (System.Drawing.Image oldImage = System.Drawing.Image.FromStream(new MemoryStream(imageFile)))\r\n    {\r\n        using (Bitmap newImage = new Bitmap(oldImage.Width, oldImage.Height, PixelFormat.Format24bppRgb))\r\n        {\r\n            MemoryStream m = new MemoryStream();\r\n            newImage.Save(m, ImageFormat.Gif);\r\n            return new MemoryStream(m.GetBuffer());\r\n\r\n        }\r\n    }\r\n}\r\n\r\npublic static Stream ResizeImageFile(Stream imageFileStream, int targetSize) // Set targetSize to 1024\r\n{\r\n    byte[] imageFile = StreamToByteArray(imageFileStream);\r\n    using (System.Drawing.Image oldImage = System.Drawing.Image.FromStream(new MemoryStream(imageFile)))\r\n    {\r\n        Size newSize = CalculateDimensions(oldImage.Size, targetSize);\r\n        using (Bitmap newImage = new Bitmap(newSize.Width, newSize.Height, PixelFormat.Format24bppRgb))\r\n        {\r\n            using (Graphics canvas = Graphics.FromImage(newImage))\r\n            {\r\n                canvas.SmoothingMode = SmoothingMode.AntiAlias;\r\n                canvas.InterpolationMode = InterpolationMode.HighQualityBicubic;\r\n                canvas.PixelOffsetMode = PixelOffsetMode.HighQuality;\r\n                canvas.DrawImage(oldImage, new Rectangle(new Point(0, 0), newSize));\r\n                MemoryStream m = new MemoryStream();\r\n                newImage.Save(m, ImageFormat.Jpeg);\r\n                return new MemoryStream(m.GetBuffer());\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\npublic static Size CalculateDimensions(Size oldSize, int targetSize)\r\n{\r\n    Size newSize = new Size();\r\n    if (oldSize.Height &gt; oldSize.Width)\r\n    {\r\n        newSize.Width = (int)(oldSize.Width * ((float)targetSize / (float)oldSize.Height));\r\n        newSize.Height = targetSize;\r\n    }\r\n    else\r\n    {\r\n        newSize.Width = targetSize;\r\n        newSize.Height = (int)(oldSize.Height * ((float)targetSize / (float)oldSize.Width));\r\n    }\r\n    return newSize;\r\n}\r\n\r\npublic static ImgurImageResponse UploadSingleImageToS3FromPath(String imagePath, string albumid,String fileName)\r\n{\r\n\r\n\r\n    //var fileName = values[1].Replace(\" \", \"_\") + \"_image.png\";\r\n    var path = albumid + \"/\" + fileName;\r\n    var imgurImage = new ImgurImageResponse();\r\n\r\n    try\r\n    {\r\n        //path = path + \".\" + imageType;\r\n\r\n        byte[] photo = File.ReadAllBytes(imagePath);\r\n        IAmazonS3 client;                \r\n        using (client = Amazon.AWSClientFactory.CreateAmazonS3Client(_awsAccessKey, _awsSecretKey, Amazon.RegionEndpoint.APSoutheast1))\r\n        {\r\n            var request = new PutObjectRequest()\r\n            {\r\n                BucketName = _bucketName,\r\n                CannedACL = S3CannedACL.PublicRead,//PERMISSION TO FILE PUBLIC ACCESIBLE\r\n                Key = string.Format(path),\r\n                InputStream = new MemoryStream(photo)//SEND THE FILE STREAM\r\n            };\r\n\r\n            client.PutObject(request);\r\n            if (File.Exists(@imagePath))\r\n            {\r\n                File.Delete(@imagePath);\r\n            }\r\n        }\r\n    }\r\n    catch (Exception ex)\r\n    {\r\n\r\n        Logger.Error(\"Exception Occured while uploading to Amazon S3 : \" + ex, ex);\r\n    }\r\n\r\n    imgurImage.data = new imgurData();\r\n\r\n    imgurImage.data.link = _amazonS3PublicUrl + \"/\" + _bucketName + \"/\" + path;\r\n    imgurImage.data.link_s = _amazonS3PublicUrl + \"/\" + _bucketName + \"/\" + path;\r\n    imgurImage.data.link_m = _amazonS3PublicUrl + \"/\" + _bucketName + \"/\" + path;\r\n    imgurImage.data.link_l = _amazonS3PublicUrl + \"/\" + _bucketName + \"/\" + path;\r\n    imgurImage.data.copyText = \"\";\r\n\r\n\r\n    return imgurImage;\r\n}\r\npublic static String SaveImageOnServer(String imageUrl, String saveLocation)\r\n{\r\n    byte[] imageBytes;\r\n    HttpWebRequest imageRequest = (HttpWebRequest)WebRequest.Create(imageUrl);\r\n    WebResponse imageResponse = imageRequest.GetResponse();\r\n\r\n    Stream responseStream = imageResponse.GetResponseStream();\r\n\r\n    using (BinaryReader br = new BinaryReader(responseStream))\r\n    {\r\n        imageBytes = br.ReadBytes(500000);\r\n        br.Close();\r\n    }\r\n    responseStream.Close();\r\n    imageResponse.Close();\r\n\r\n    FileStream fs = new FileStream(saveLocation, FileMode.Create);\r\n    BinaryWriter bw = new BinaryWriter(fs);\r\n    try\r\n    {\r\n        bw.Write(imageBytes);\r\n    }\r\n    finally\r\n    {\r\n        fs.Close();\r\n        bw.Close();\r\n    }\r\n\r\n    return saveLocation;\r\n}\r\n}\r\n}</code></pre>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/e4f724bc-e4de-46a9-b9a6-ca64de2af932_aws-s3.jpeg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"upload-an-image-on-amazon-s3-using-c-in-.net-mvc-4.5-core-2.1","tags":[{"name":"amazon-web-services","slug":"amazon-web-services"},{"name":"dot-net","slug":"dot-net"},{"name":"aws","slug":"aws"},{"name":"c-sharp","slug":"c-sharp"},{"name":"asp-dot-net","slug":"asp-dot-net"},{"name":"amazon-s3","slug":"amazon-s3"}],"recommendations":[{"id":1352,"title":"Shift 2D Grid - Array - Easy - LeetCode","imageUrl":"396f6cfc-2966-4853-8c2c-4c293c9d49cf-array.png","dateCreated":"2020-06-11T07:25:28.679Z","dateModified":"2020-06-11T07:25:42.604Z","contributedBy":"AskGif","content":"Given a 2D grid of size m x n and an integer k. You need to shift the grid k times.\r\nIn one shift operation:\r\nElement at grid[i][j] moves to grid[i][j + 1].\r\nElement at grid[i][n - 1] moves to grid[i + 1][0].\r\nElement at grid[m - 1][n - 1] moves to grid[0][0].\r\n","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/396f6cfc-2966-4853-8c2c-4c293c9d49cf-array.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"data-structure","slug":"data-structure"},{"name":"c-sharp","slug":"c-sharp"},{"name":"leetcode","slug":"leetcode"},{"name":"easy","slug":"easy"},{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"}],"slug":"shift-2d-grid-array-easy-leetcode","total":0},{"id":1350,"title":"Find Winner on a Tic Tac Toe Game - Array - Easy - LeetCode","imageUrl":"4bc52609-200a-43b9-80bf-709900ecc433-array.png","dateCreated":"2020-06-10T08:12:34.456Z","dateModified":"2020-06-10T08:12:46.86Z","contributedBy":"AskGif","content":"Tic-tac-toe is played by two players A and B on a 3 x 3 grid.\r\nHere are the rules of Tic-Tac-Toe:\r\nPlayers take turns placing characters into empty squares (\" \").\r\nThe first player A always places \"X\" characters, while the second player B always places \"O\" characters.\r\n<p","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/4bc52609-200a-43b9-80bf-709900ecc433-array.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"array","slug":"array"},{"name":"c-sharp","slug":"c-sharp"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"algorithm","slug":"algorithm"},{"name":"easy","slug":"easy"}],"slug":"find-winner-on-a-tic-tac-toe-game-array-easy-leetcode","total":0},{"id":147,"title":"Upload an image on Amazon S3 using C# in .net MVC 4.5 / Core 2.1?","imageUrl":"e4f724bc-e4de-46a9-b9a6-ca64de2af932_aws-s3.jpeg","dateCreated":"2018-11-06T05:25:11.052Z","dateModified":"2018-11-06T05:25:32.345Z","contributedBy":"AskGif","content":"Query:\r\nI want to upload and manage images on my Amazon S3 server. is there any c# plugin already available for the same? I'm using .net MVC 4.5 framework.\r\nI tried from the below link Upload an Object Using the AWS SDK for .NET\r\n<a title=\"http://docs.aws.amazon.com/AmazonS3/","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/e4f724bc-e4de-46a9-b9a6-ca64de2af932_aws-s3.jpeg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"amazon-web-services","slug":"amazon-web-services"},{"name":"dot-net","slug":"dot-net"},{"name":"aws","slug":"aws"},{"name":"c-sharp","slug":"c-sharp"},{"name":"asp-dot-net","slug":"asp-dot-net"},{"name":"amazon-s3","slug":"amazon-s3"}],"slug":"upload-an-image-on-amazon-s3-using-c-in-.net-mvc-4.5-core-2.1","total":0},{"id":2,"title":"How to create AWS free tier account","imageUrl":"6476345a-5b48-4ce1-926b-deccd5e32610_fi_aws_free_tier.jpg","dateCreated":"2018-06-21T16:46:26.687Z","dateModified":"2018-08-02T10:27:06.092Z","contributedBy":"AskGif","content":"AWS Provides 1 year Free usage for new users for Learning purpose. you can utilize aws for learning purpose.\r\nFollow following steps :","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/6476345a-5b48-4ce1-926b-deccd5e32610_fi_aws_free_tier.jpg","category":{"name":"tutorials","slug":"tutorials"},"tags":[{"name":"free-server","slug":"free-server"},{"name":"aws","slug":"aws"}],"slug":"how-to-create-aws-free-tier-account","total":0}]}