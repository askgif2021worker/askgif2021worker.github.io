{"id":1470,"title":"Verifying an Alien Dictionary - Hash Table - Easy - LeetCode","imageUrl":"icon_caaa6a37-2dda-43c5-b9ab-28a3018ff410.jpg","dateCreated":"2020-09-30T06:32:14.764Z","dateModified":"2020-09-30T06:32:44.033Z","contributedBy":"sumitc91","content":"<p>In an alien language, surprisingly they also use english lowercase letters, but possibly in a different order. The order of the alphabet is some permutation of lowercase letters.</p>\n<p>Given a sequence of words written in the alien language, and the order of the alphabet, return true if and only if the given words are sorted lexicographicaly in this alien language.</p>\n<p>&nbsp;</p>\n<p>Example 1:</p>\n<p>Input: words = [\"hello\",\"leetcode\"], order = \"hlabcdefgijkmnopqrstuvwxyz\"<br />Output: true<br />Explanation: As 'h' comes before 'l' in this language, then the sequence is sorted.<br />Example 2:</p>\n<p>Input: words = [\"word\",\"world\",\"row\"], order = \"worldabcefghijkmnpqstuvxyz\"<br />Output: false<br />Explanation: As 'd' comes after 'l' in this language, then words[0] &gt; words[1], hence the sequence is unsorted.<br />Example 3:</p>\n<p>Input: words = [\"apple\",\"app\"], order = \"abcdefghijklmnopqrstuvwxyz\"<br />Output: false<br />Explanation: The first three characters \"app\" match, and the second string is shorter (in size.) According to lexicographical rules \"apple\" &gt; \"app\", because 'l' &gt; '&empty;', where '&empty;' is defined as the blank character which is less than any other character (More info).<br />&nbsp;</p>\n<p>Constraints:</p>\n<p>1 &lt;= words.length &lt;= 100<br />1 &lt;= words[i].length &lt;= 20<br />order.length == 26<br />All characters in words[i] and order are English lowercase letters.</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    public bool IsAlienSorted(string[] words, string order) {\n        var map = new Dictionary&lt;char,int&gt;();\n        for(int i=0;i&lt;order.Length;i++){\n            map.Add(order[i],i);\n        }\n        \n        if(words.Length==1){\n            return true;\n        }\n        \n        for(int i=1;i&lt;words.Length;i++){\n            if(!Helper(map,words[i-1],words[i],0)){\n                return false;\n            }\n        }\n        \n        return true;\n    }\n    \n    private bool Helper(Dictionary&lt;char,int&gt; map, string word1, string word2, int index){                \n        \n        if(index&gt;=word1.Length || index&gt;=word2.Length){\n            return word2.Length&gt;word1.Length;\n        }\n        \n        if(map[word1[index]]&lt;map[word2[index]]){            \n            return true;\n        }\n        \n        if(map[word1[index]]&gt;map[word2[index]]){                        \n            return false;\n        }\n        \n        return Helper(map,word1,word2,index+1);\n    }\n}</code></pre>\n<p>Time Complexity: O(m*n)</p>\n<p>Space Complexity: O(m*n)</p>\n<p>Where m and n are the number of strings and length of strings.</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/caaa6a37-2dda-43c5-b9ab-28a3018ff410.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"verifying-an-alien-dictionary-hash-table-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"hash-table","slug":"hash-table"},{"name":"leetcode","slug":"leetcode"}],"recommendations":[{"id":1725,"title":"Sum of Unique Elements - Array - Easy - LeetCode","imageUrl":"icon_9e341651-0933-4893-84a8-1d3f65898dda.jpg","dateCreated":"2021-02-13T13:13:53.857Z","dateModified":"2021-02-13T13:13:59.576Z","contributedBy":"sumitc91","content":"You are given an integer array nums. The unique elements of an array are the elements that appear exactly once in the array.\nReturn the sum of all the unique elements of nums.\n&nbsp;\nExample 1:\nInput: nums = [1,2,3,2]<br />Output: 4<br />Explanation: The unique element","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/9e341651-0933-4893-84a8-1d3f65898dda.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"sum-of-unique-elements-array-easy-leetcode","total":0},{"id":1718,"title":"Calculate Money in Leetcode Bank - Maths - Easy - LeetCode","imageUrl":"icon_8f7ac85a-3434-4f99-ba13-6b64b13831b7.jpg","dateCreated":"2021-01-10T05:17:33.968Z","dateModified":"2021-01-10T05:17:40.265Z","contributedBy":"sumitc91","content":"Hercy wants to save money for his first car. He puts money in the Leetcode bank every day.\nHe starts by putting in $1 on Monday, the first day. Every day from Tuesday to Sunday, he will put in $1 more than the day before. On every subsequent Monday, he will put in $1 more than the previous","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/8f7ac85a-3434-4f99-ba13-6b64b13831b7.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"गणित","slug":"maths"}],"slug":"calculate-money-in-leetcode-bank-maths-easy-leetcode","total":0},{"id":1605,"title":"Number of Recent Calls - Queue - Easy - LeetCode","imageUrl":"icon_52ed4bb2-be8a-4dff-832b-3355d3a7b296.jpg","dateCreated":"2020-10-16T05:43:32.617Z","dateModified":"2020-10-16T05:44:07.781Z","contributedBy":"sumitc91","content":"You have a RecentCounter class which counts the number of recent requests within a certain time frame.\nImplement the RecentCounter class:\nRecentCounter() Initializes the counter with zero recent requests.<br />int ping(int t) Adds a new request at time t, where t represents some tim","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/946ba741-b1aa-4d55-9040-0f04c2d3678f.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"queue","slug":"queue"}],"slug":"number-of-recent-calls-queue-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}