{"id":1480,"title":"Palindrome Linked List - Linked List - Easy - LeetCode","imageUrl":"icon_27fe1716-6853-4551-bc24-ce6a639d5a8c.jpg","dateCreated":"2020-09-30T10:05:59.602Z","dateModified":"2020-09-30T10:06:16.532Z","contributedBy":"sumitc91","content":"<p>Given a singly linked list, determine if it is a palindrome.</p>\n<p>Example 1:</p>\n<p>Input: 1-&gt;2<br />Output: false<br />Example 2:</p>\n<p>Input: 1-&gt;2-&gt;2-&gt;1<br />Output: true<br />Follow up:<br />Could you do it in O(n) time and O(1) space?</p>\n<pre class=\"language-csharp\"><code>/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     public int val;\n *     public ListNode next;\n *     public ListNode(int val=0, ListNode next=null) {\n *         this.val = val;\n *         this.next = next;\n *     }\n * }\n */\npublic class Solution {\n    public bool IsPalindrome(ListNode head) {\n        ListNode fast = head;\n        ListNode slow = head;\n        while (fast != null &amp;&amp; fast.next != null) {\n            fast = fast.next.next;\n            slow = slow.next;\n        }\n        \n        if (fast != null) { // odd nodes: let right half smaller\n            slow = slow.next;\n        }\n        \n        slow = reverse(slow);\n        fast = head;\n\n        while (slow != null) {\n            if (fast.val != slow.val) {\n                return false;\n            }\n            fast = fast.next;\n            slow = slow.next;\n        }\n        return true;\n    }\n    \n    public ListNode reverse(ListNode head) {\n        ListNode prev = null;\n        while (head != null) {\n            ListNode next = head.next;\n            head.next = prev;\n            prev = head;\n            head = next;\n        }\n        return prev;\n    }\n}</code></pre>\n<p>Time Complexity: O(n)</p>\n<p>Space Complexity: O(1)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/27fe1716-6853-4551-bc24-ce6a639d5a8c.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"palindrome-linked-list-linked-list-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"linked-list","slug":"linked-list"}],"recommendations":[{"id":1675,"title":"Majority Element II - Array - Medium - LeetCode","imageUrl":"icon_17b104bf-91b6-48b5-a7b8-2d58b5ba4b4e.jpg","dateCreated":"2020-11-18T12:22:28.829Z","dateModified":"2020-11-18T12:22:35.442Z","contributedBy":"sumitc91","content":"Given an integer array of size n, find all elements that appear more than &lfloor; n/3 &rfloor; times.\nFollow-up: Could you solve the problem in linear time and in O(1) space?\n&nbsp;\nExample 1:\nInput: nums = [3,2,3]<br />Output: [3]<br />Example 2:\nInput: nums =","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/17b104bf-91b6-48b5-a7b8-2d58b5ba4b4e.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"majority-element-ii-array-medium-leetcode","total":0},{"id":1655,"title":"Sort Colors - Array - Medium - LeetCode","imageUrl":"icon_d14c2a98-a56d-44ac-9a21-2ed77349737c.jpg","dateCreated":"2020-10-31T11:30:17.677Z","dateModified":"2020-10-31T11:30:24.576Z","contributedBy":"sumitc91","content":"Given an array nums with n objects colored red, white, or blue, sort them in-place so that objects of the same color are adjacent, with the colors in the order red, white, and blue.\nHere, we will use the integers 0, 1, and 2 to represent the color red, white, and blue respectively.\n","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/d14c2a98-a56d-44ac-9a21-2ed77349737c.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"sort-colors-array-medium-leetcode","total":0},{"id":1648,"title":"Insert Interval - Array - Medium - LeetCode","imageUrl":"icon_5a35d970-95af-493c-9aca-0b4bed037719.jpg","dateCreated":"2020-10-31T06:40:08.43Z","dateModified":"2020-10-31T06:40:18.214Z","contributedBy":"sumitc91","content":"Given a set of non-overlapping intervals, insert a new interval into the intervals (merge if necessary).\nYou may assume that the intervals were initially sorted according to their start times.\n&nbsp;\nExample 1:\nInput: intervals = [[1,3],[6,9]], newInterval = [2,5]<br /","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/5a35d970-95af-493c-9aca-0b4bed037719.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"insert-interval-array-medium-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}