{"id":1485,"title":"Sqrt(x) (newtons method) - Math - Easy - LeetCode","imageUrl":"icon_b2e41a6c-6439-4535-9c5c-d23753b8730a.jpg","dateCreated":"2020-10-01T03:32:21.406Z","dateModified":"2020-10-01T03:32:35.514Z","contributedBy":"sumitc91","content":"<p>Implement int sqrt(int x).</p>\n<p>Compute and return the square root of x, where x is guaranteed to be a non-negative integer.</p>\n<p>Since the return type is an integer, the decimal digits are truncated and only the integer part of the result is returned.</p>\n<p>Example 1:</p>\n<p>Input: 4<br />Output: 2<br />Example 2:</p>\n<p>Input: 8<br />Output: 2<br />Explanation: The square root of 8 is 2.82842..., and since&nbsp;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;the decimal part is truncated, 2 is returned.</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    public int MySqrt(int x) {\n        long num = x;\n        while (num*num &gt; x)\n            num = (num + x/num) / 2;\n        return (int) num;\n    }\n}</code></pre>\n<p>Time Complexity: O(logn)</p>\n<p>Space Complexity: O(1)</p>\n<p>Given y = f(x), find the root x such that f(x) = 0, geometrically<br />speaking, find the intersection of the function y and the x-axis.</p>\n<p>For a roughly estimated root x0, it's coordinate on the function<br />is P(x0, f(x0)). We can find P's tangent line L whose slope is m,<br />such that the intersection of the L and the x-axis, say S(x1, 0),<br />it's function value f(x1) is closer to the real root of y = f(x),<br />comparing to the f(x0).</p>\n<p>Set m = f'(x0), where f' denotes the differential on x0 ... (1)<br />The slope m is defined by PS: m = (f(x0) - 0) / (x0 - x1) ... (2)<br />Combine (1) (2), f'(x0) = f(x0) / (x0 - x1)<br />=&gt; x0 - x1 = f(x0) / f'(x0)<br />=&gt; x1 = x0 - f(x0) / f'(x0)</p>\n<p>x(n+1) = x(n) - f(x(n)) / f'(x(n))<br />By applying Newton's method to the root problem, finding the<br />r such that r^2 equals to the input x is the same as finding the<br />root of f(r) where</p>\n<p>f(r) = r^2 - x = 0<br />=&gt; r(n+1) = r(n) - f(r(n)) / f'(r(n))<br />=&gt; r(n+1) = r(n) - (r(n)^2 - x) / 2 * r(n)<br />=&gt; r(n+1) = r(n) - r(n) / 2 + x / 2 * r(n)<br />=&gt; r(n+1) = (r(n) + x / r(n)) / 2</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/b2e41a6c-6439-4535-9c5c-d23753b8730a.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"sqrtx-newtons-method-math-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"गणित","slug":"maths"}],"recommendations":[{"id":1668,"title":"Triangle - Array - Medium - LeetCode","imageUrl":"icon_40571e99-73c8-48d0-aa94-4a53cb2adbce.jpg","dateCreated":"2020-11-17T12:18:25.997Z","dateModified":"2020-11-17T12:18:30.576Z","contributedBy":"sumitc91","content":"Given a triangle, find the minimum path sum from top to bottom. Each step you may move to adjacent numbers on the row below.\nFor example, given the following triangle\n[<br />&nbsp; &nbsp; &nbsp;[2],<br />&nbsp; &nbsp; [3,4],<br />&nbsp; &nbsp;[6,5,7],<br />&nbsp; [4,1,8,3]<br />]<br","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/40571e99-73c8-48d0-aa94-4a53cb2adbce.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"triangle-array-medium-leetcode","total":0},{"id":1633,"title":"3Sum - Array - Medium - LeetCode","imageUrl":"icon_b05855a6-ac78-4434-a041-4682444c76bc.jpg","dateCreated":"2020-10-19T04:39:11.508Z","dateModified":"2020-10-19T04:39:21.598Z","contributedBy":"sumitc91","content":"Given an array nums of n integers, are there elements a, b, c in nums such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.\nNotice that the solution set must not contain duplicate triplets.\n&nbsp;\nExample 1:\nInput: nums = [-1,0,1,2","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/b05855a6-ac78-4434-a041-4682444c76bc.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"3sum-array-medium-leetcode","total":0},{"id":1598,"title":"Find the Town Judge - Tree - Easy - LeetCode","imageUrl":"icon_2f8d0898-e59c-49cd-b25f-5234ed605d94.jpg","dateCreated":"2020-10-14T09:05:56.984Z","dateModified":"2020-10-14T09:06:09.069Z","contributedBy":"sumitc91","content":"In a town, there are N people labelled from 1 to N. &nbsp;There is a rumor that one of these people is secretly the town judge.\nIf the town judge exists, then:\nThe town judge trusts nobody.<br />Everybody (except for the town judge) trusts the town judge.<br />There is exactly one p","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/2f8d0898-e59c-49cd-b25f-5234ed605d94.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"graph","slug":"graph"},{"name":"leetcode","slug":"leetcode"}],"slug":"find-the-town-judge-tree-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}