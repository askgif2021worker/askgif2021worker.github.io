{"id":1494,"title":"Arranging Coins - Math - Easy - LeetCode","imageUrl":"icon_2eaaea00-81da-43f5-a24a-bf3013d38eed.jpg","dateCreated":"2020-10-01T07:15:16.596Z","dateModified":"2020-10-01T07:15:27.417Z","contributedBy":"sumitc91","content":"<p>You have a total of n coins that you want to form in a staircase shape, where every k-th row must have exactly k coins.</p>\n<p>Given n, find the total number of full staircase rows that can be formed.</p>\n<p>n is a non-negative integer and fits within the range of a 32-bit signed integer.</p>\n<p>Example 1:</p>\n<p>n = 5</p>\n<p>The coins can form the following rows:<br />*<br />* *<br />* *</p>\n<p>Because the 3rd row is incomplete, we return 2.<br />Example 2:</p>\n<p>n = 8</p>\n<p>The coins can form the following rows:<br />*<br />* *<br />* * *<br />* *</p>\n<p>Because the 4th row is incomplete, we return 3.</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    public int ArrangeCoins(int n) {\n        return (int) ((Math.Sqrt(1 + 8.0 * n) - 1) / 2);\n    }\n}</code></pre>\n<p>Time Complexity: O(1)</p>\n<p>Space Complexity: O(1)</p>\n<p>&nbsp;</p>\n<p>Complexity Analysis<br />Uniform cost model is used as Cost Model and n is the input number. b in this case would be 2.</p>\n<p>Time Complexity:</p>\n<p>Best Case O(1) : With respect to the input, the algorithm will always perform basic mathematical operation that run in constant time.<br />Average Case O(1) : With respect to the input, the algorithm will always perform basic mathematical operation that run in constant time.<br />Worst Case O(1) : With respect to the input, the algorithm will always perform basic mathematical operation that run in constant time.<br />Auxiliary Space:</p>\n<p>Worst Case O(1) : No extra space is used.<br />Algorithm<br />Approach: Mathematics</p>\n<p>The problem is basically asking the maximum length of consecutive number that has the running sum lesser or equal to n. In other word, find x that satisfy the following condition:</p>\n<p>1 + 2 + 3 + 4 + 5 + 6 + 7 + ... + x &lt;= n<br />sum_{i=1}^x i &lt;= n<br />Running sum can be simplified,</p>\n<p>(x * ( x + 1)) / 2 &lt;= n<br />Using quadratic formula, x is evaluated to be,</p>\n<p>x = 1 / 2 * (-sqrt(8 * n + 1)-1) (Inapplicable) or x = 1 / 2 * (sqrt(8 * n + 1)-1)<br />Negative root is ignored and positive root is used instead. Note that 8.0 * n is very important because it will cause Java to implicitly autoboxed the intermediate result into double data type. The code will not work if it is simply 8 * n. Alternatively, an explicit casting can be done 8 * (long) n).</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/2eaaea00-81da-43f5-a24a-bf3013d38eed.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"arranging-coins-math-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"maths","slug":"maths"}],"recommendations":[{"id":1680,"title":"Find All Duplicates in an Array - Array - Medium - LeetCode","imageUrl":"icon_5a6c2b89-77d6-4d5e-978b-35b19f85ed66.jpg","dateCreated":"2020-11-19T07:32:23.312Z","dateModified":"2020-11-19T07:32:30.12Z","contributedBy":"sumitc91","content":"Given an array of integers, 1 &le; a[i] &le; n (n = size of array), some elements appear twice and others appear once.\nFind all the elements that appear twice in this array.\nCould you do it without extra space and in O(n) runtime?\nExample:<br />Input:<br />[4,3,2,7,8,2,3,1]</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/5a6c2b89-77d6-4d5e-978b-35b19f85ed66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"find-all-duplicates-in-an-array-array-medium-leetcode","total":0},{"id":1678,"title":"Game of Life - Array - Medium - LeetCode","imageUrl":"icon_67a9ece8-2eeb-48f8-8881-4af10f198260.jpg","dateCreated":"2020-11-19T03:57:26.799Z","dateModified":"2020-11-19T03:57:33.216Z","contributedBy":"sumitc91","content":"According to the Wikipedia's article: \"The Game of Life, also known simply as Life, is a cellular automaton devised by the British mathematician John Horton Conway in 1970.\"\nGiven a board with m by n cells, each cell has an initial state live (1) or dead (0). Each cell interacts with its e","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/67a9ece8-2eeb-48f8-8881-4af10f198260.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"game-of-life-array-medium-leetcode","total":0},{"id":1611,"title":"Tenth Line - Bash - Easy - LeetCode","imageUrl":"icon_2f13c5c6-6e33-47bb-a84b-a78e7452f775.jpg","dateCreated":"2020-10-16T07:52:54.062Z","dateModified":"2020-10-16T07:53:14.702Z","contributedBy":"sumitc91","content":"Given a text file file.txt, print just the 10th line of the file.\nExample:\nAssume that file.txt has the following content:\nLine 1<br />Line 2<br />Line 3<br />Line 4<br />Line 5<br />Line 6<br />Line 7<br />Line 8<br />Line 9<br />Line 10<br />Your script should output the te","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/2f13c5c6-6e33-47bb-a84b-a78e7452f775.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"bash","slug":"bash"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"tenth-line-bash-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}