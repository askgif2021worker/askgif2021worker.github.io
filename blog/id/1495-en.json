{"id":1495,"title":"Minimum Moves to Equal Array Elements - Math - Easy - LeetCode","imageUrl":"icon_ce38a801-416c-4bc1-becb-29e3581c4d92.jpg","dateCreated":"2020-10-01T07:23:56.582Z","dateModified":"2020-10-01T07:24:08.701Z","contributedBy":"sumitc91","content":"<p>Given a non-empty integer array of size n, find the minimum number of moves required to make all array elements equal, where a move is incrementing n - 1 elements by 1.</p>\n<p>Example:</p>\n<p>Input:<br />[1,2,3]</p>\n<p>Output:<br />3</p>\n<p>Explanation:<br />Only three moves are needed (remember each move increments two elements):</p>\n<p>[1,2,3] &nbsp;=&gt; &nbsp;[2,3,3] &nbsp;=&gt; &nbsp;[3,4,3] &nbsp;=&gt; &nbsp;[4,4,4]</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    public int MinMoves(int[] nums) {\n        if(nums.Length &lt; 2){\n            return 0;   \n        }\n        int min=Int32.MaxValue;\n        int sum=0;\n        foreach(int item in nums)\n        {\n            sum+=item;\n            min=Math.Min(min,item);\n        }\n        \n        return sum-min*nums.Length;\n    }\n}</code></pre>\n<p>Time Complexity: O(n)</p>\n<p>Space Complexity: O(1)</p>\n<p>&nbsp;</p>\n<p>let's define sum as the sum of all the numbers, before any moves; minNum as the min number int the list; n is the length of the list;</p>\n<p>After say m moves, we get all the numbers as x, and we will get the following equation</p>\n<p>&nbsp;sum + m * (n - 1) = x * n<br />and actually,</p>\n<p>&nbsp; x = minNum + m<br />This part may be a little confusing, but @shijungg explained very well. let me explain a little again. it comes from two observations:</p>\n<p>the minimum number will always be minimum until it reaches the final number, because every move, other numbers (besides the max) will be incremented too;<br />from above, we can get, the minimum number will be incremented in every move. So, if the final number is x, it would be minNum + moves;<br />and finally, we will get</p>\n<p>&nbsp; sum - minNum * n = m<br />This is just a math calculation.</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/ce38a801-416c-4bc1-becb-29e3581c4d92.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"minimum-moves-to-equal-array-elements-math-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"maths","slug":"maths"}],"recommendations":[{"id":1663,"title":"Defuse the Bomb - Array - Easy - LeetCode","imageUrl":"icon_e0c7ac1d-e52e-489e-849e-a7842cdb2c18.jpg","dateCreated":"2020-11-15T15:48:36.584Z","dateModified":"2020-11-15T15:48:43.094Z","contributedBy":"sumitc91","content":"You have a bomb to defuse, and your time is running out! Your informer will provide you with a circular array code of length of n and a key k.\nTo decrypt the code, you must replace every number. All the numbers are replaced simultaneously.\nIf k &gt; 0, replace the ith number with th","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/e0c7ac1d-e52e-489e-849e-a7842cdb2c18.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"defuse-the-bomb-array-easy-leetcode","total":0},{"id":1655,"title":"Sort Colors - Array - Medium - LeetCode","imageUrl":"icon_d14c2a98-a56d-44ac-9a21-2ed77349737c.jpg","dateCreated":"2020-10-31T11:30:17.677Z","dateModified":"2020-10-31T11:30:24.576Z","contributedBy":"sumitc91","content":"Given an array nums with n objects colored red, white, or blue, sort them in-place so that objects of the same color are adjacent, with the colors in the order red, white, and blue.\nHere, we will use the integers 0, 1, and 2 to represent the color red, white, and blue respectively.\n","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/d14c2a98-a56d-44ac-9a21-2ed77349737c.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"sort-colors-array-medium-leetcode","total":0},{"id":1630,"title":"Mean of Array After Removing Some Elements - Array - Easy - LeetCode","imageUrl":"icon_9f50a4a2-b70b-453a-934d-064ef9684592.jpg","dateCreated":"2020-10-18T09:36:20.32Z","dateModified":"2020-10-18T09:36:35.59Z","contributedBy":"sumitc91","content":"1619. Mean of Array After Removing Some Elements<br />Easy\n30\n5\nAdd to List\nShare<br />Given an integer array arr, return the mean of the remaining integers after removing the smallest 5% and the largest 5% of the elements.\nAnswers within 10-5 of the actual answ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/9f50a4a2-b70b-453a-934d-064ef9684592.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"mean-of-array-after-removing-some-elements-array-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}