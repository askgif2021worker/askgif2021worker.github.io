{"id":1497,"title":"Range Addition II - Math - Easy - LeetCode","imageUrl":"icon_b771b25f-e48c-4127-82d1-3265d1972793.jpg","dateCreated":"2020-10-01T08:04:54.827Z","dateModified":"2020-10-01T08:05:06.387Z","contributedBy":"sumitc91","content":"<p>Given an m * n matrix M initialized with all 0's and several update operations.</p>\n<p>Operations are represented by a 2D array, and each operation is represented by an array with two positive integers a and b, which means M[i][j] should be added by one for all 0 &lt;= i &lt; a and 0 &lt;= j &lt; b.</p>\n<p>You need to count and return the number of maximum integers in the matrix after performing all the operations.</p>\n<p>Example 1:<br />Input:&nbsp;<br />m = 3, n = 3<br />operations = [[2,2],[3,3]]<br />Output: 4<br />Explanation:&nbsp;<br />Initially, M =&nbsp;<br />[[0, 0, 0],<br />&nbsp;[0, 0, 0],<br />&nbsp;[0, 0, 0]]</p>\n<p>After performing [2,2], M =&nbsp;<br />[[1, 1, 0],<br />&nbsp;[1, 1, 0],<br />&nbsp;[0, 0, 0]]</p>\n<p>After performing [3,3], M =&nbsp;<br />[[2, 2, 1],<br />&nbsp;[2, 2, 1],<br />&nbsp;[1, 1, 1]]</p>\n<p>So the maximum integer in M is 2, and there are four of it in M. So return 4.<br />Note:<br />The range of m and n is [1,40000].<br />The range of a is [1,m], and the range of b is [1,n].<br />The range of operations size won't exceed 10,000.</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    public int MaxCount(int m, int n, int[][] ops) {\n        int x = m;\n        int y = n;\n        for(int i=0;i&lt;ops.Length;i++){\n            x = Math.Min(ops[i][0],x);\n            y = Math.Min(ops[i][1],y);\n        }\n        return x*y;\n    }\n}</code></pre>\n<p>Time Complexity: O(n)</p>\n<p>Space Complexity: O(1)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/b771b25f-e48c-4127-82d1-3265d1972793.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"range-addition-ii-math-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"maths","slug":"maths"}],"recommendations":[{"id":1726,"title":"Maximum Swap - Array - Medium - LeetCode","imageUrl":"icon_16589057-204a-4929-8beb-ec745719515b.jpg","dateCreated":"2021-03-04T10:15:19.693Z","dateModified":"2021-03-04T10:16:54.289Z","contributedBy":"sumitc91","content":"Given a non-negative integer, you could swap two digits at most once to get the maximum valued number. Return the maximum valued number you could get.\nExample 1:<br />Input: 2736<br />Output: 7236<br />Explanation: Swap the number 2 and the number 7.<br />Example 2:<br />Input: 9973<br />O","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/16589057-204a-4929-8beb-ec745719515b.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"maximum-swap-array-medium-leetcode","total":0},{"id":1654,"title":"Search a 2D Matrix - Array - Medium - LeetCode","imageUrl":"icon_4ecd9aac-a00a-4a8f-ad7b-e7e4a75307ac.jpg","dateCreated":"2020-10-31T10:10:06.758Z","dateModified":"2020-10-31T10:10:15.329Z","contributedBy":"sumitc91","content":"Write an efficient algorithm that searches for a value in an m x n matrix. This matrix has the following properties:\nIntegers in each row are sorted from left to right.<br />The first integer of each row is greater than the last integer of the previous row.<br />&nbsp;\nExample 1:</p","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/4ecd9aac-a00a-4a8f-ad7b-e7e4a75307ac.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"search-a-2d-matrix-array-medium-leetcode","total":0},{"id":1621,"title":"Swap Salary - Sql - Easy - LeetCode","imageUrl":"icon_d5dae622-be43-4a7d-a90e-4173c15f3195.jpg","dateCreated":"2020-10-17T06:35:01.639Z","dateModified":"2020-10-17T06:36:00.564Z","contributedBy":"sumitc91","content":"Given a table salary, such as the one below, that has m=male and f=female values. Swap all f and m values (i.e., change all f values to m and vice versa) with a single update statement and no intermediate temp table.\nNote that you must write a single update statement, DO NOT write any sele","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/d5dae622-be43-4a7d-a90e-4173c15f3195.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"sql","slug":"sql"}],"slug":"swap-salary-sql-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}