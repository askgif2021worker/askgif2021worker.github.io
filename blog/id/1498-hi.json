{"id":1498,"title":"Self Dividing Numbers - Math - Easy - LeetCode","imageUrl":"icon_dc3aee0a-e457-4742-8a7e-1d772cdf7371.jpg","dateCreated":"2020-10-01T08:13:02.092Z","dateModified":"2020-10-01T08:13:28.279Z","contributedBy":"sumitc91","content":"<p>A self-dividing number is a number that is divisible by every digit it contains.</p>\n<p>For example, 128 is a self-dividing number because 128 % 1 == 0, 128 % 2 == 0, and 128 % 8 == 0.</p>\n<p>Also, a self-dividing number is not allowed to contain the digit zero.</p>\n<p>Given a lower and upper number bound, output a list of every possible self dividing number, including the bounds if possible.</p>\n<p>Example 1:<br />Input:&nbsp;<br />left = 1, right = 22<br />Output: [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]<br />Note:</p>\n<p>The boundaries of each input argument are 1 &lt;= left &lt;= right &lt;= 10000.</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    public IList&lt;int&gt; SelfDividingNumbers(int left, int right) {\n        var result = new List&lt;int&gt;();\n        for(int i=left;i&lt;=right;i++){\n            if(i&lt;10){\n                result.Add(i);\n            }\n            else if(IsValid(i)){\n                result.Add(i);\n            }\n        }\n        \n        return result;\n    }\n    \n    private bool IsValid(int num){\n        int temp = num;\n        while(temp&gt;0){\n            int mod = temp%10;\n            if(mod==0 || num%mod!=0){\n                return false;\n            }\n            temp=temp/10;\n        }\n        \n        return true;\n    }\n}</code></pre>\n<p>Time Complexity: O(n)</p>\n<p>Space Complexity: O(1)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/dc3aee0a-e457-4742-8a7e-1d772cdf7371.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"self-dividing-numbers-math-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"गणित","slug":"maths"}],"recommendations":[{"id":1717,"title":"Task Scheduler - Array - Medium - LeetCode","imageUrl":"icon_ce3e557e-274e-4956-a16f-a62c66777be4.jpg","dateCreated":"2021-01-09T09:25:26.524Z","dateModified":"2021-01-09T09:25:33.09Z","contributedBy":"sumitc91","content":"Given a characters array tasks, representing the tasks a CPU needs to do, where each letter represents a different task. Tasks could be done in any order. Each task is done in one unit of time. For each unit of time, the CPU could complete either one task or just be idle.\nHowever, there is","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/ce3e557e-274e-4956-a16f-a62c66777be4.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"task-scheduler-array-medium-leetcode","total":0},{"id":1702,"title":"Subarray Sum Equals K - Array - Medium - LeetCode","imageUrl":"icon_5dec0e7e-af11-40c9-b0bb-98503e290084.jpg","dateCreated":"2020-11-21T04:33:22.934Z","dateModified":"2020-11-21T04:33:27.536Z","contributedBy":"sumitc91","content":"Given an array of integers nums and an integer k, return the total number of continuous subarrays whose sum equals to k.\n&nbsp;\nExample 1:\nInput: nums = [1,1,1], k = 2<br />Output: 2<br />Example 2:\nInput: nums = [1,2,3], k = 3<br />Output: 2<br />&nbsp;\nConstra","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/5dec0e7e-af11-40c9-b0bb-98503e290084.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"subarray-sum-equals-k-array-medium-leetcode","total":0},{"id":1593,"title":"Range Sum of BST - Tree - Easy - LeetCode","imageUrl":"icon_2d446765-9ada-4072-93c3-eedfb56f7794.jpg","dateCreated":"2020-10-09T08:49:41.585Z","dateModified":"2020-10-09T08:49:55.954Z","contributedBy":"sumitc91","content":"Given the root node of a binary search tree, return the sum of values of all nodes with value between L and R (inclusive).\nThe binary search tree is guaranteed to have unique values.\n&nbsp;\nExample 1:\nInput: root = [10,5,15,3,7,null,18], L = 7, R = 15<br />Output: 32<b","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/2d446765-9ada-4072-93c3-eedfb56f7794.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"range-sum-of-bst-tree-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}