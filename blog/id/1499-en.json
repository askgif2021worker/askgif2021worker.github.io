{"id":1499,"title":"Largest Triangle Area - Math - Easy - LeetCode","imageUrl":"icon_eaf56ec1-789b-4bd9-aa61-c1a60fec6af2.jpg","dateCreated":"2020-10-01T08:26:55.685Z","dateModified":"2020-10-01T08:27:29.83Z","contributedBy":"sumitc91","content":"<p>You have a list of points in the plane. Return the area of the largest triangle that can be formed by any 3 of the points.</p>\n<p>Example:<br />Input: points = [[0,0],[0,1],[1,0],[0,2],[2,0]]<br />Output: 2<br />Explanation:&nbsp;<br />The five points are show in the figure below. The red triangle is the largest.</p>\n<p><br />Notes:</p>\n<p>3 &lt;= points.length &lt;= 50.<br />No points will be duplicated.<br />&nbsp;-50 &lt;= points[i][j] &lt;= 50.<br />Answers within 10^-6 of the true value will be accepted as correct.</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    public double LargestTriangleArea(int[][] points) {\n        double maxArea = 0;\n        for(int i=0;i&lt;points.Length;i++){\n            for(int j=0;j&lt;points.Length;j++){\n                for(int k=0;k&lt;points.Length;k++){\n                    double a = Math.Sqrt(Math.Pow(points[i][0]-points[j][0],2)+Math.Pow(points[i][1]-points[j][1],2));\n                    \n                    double b = Math.Sqrt(Math.Pow(points[i][0]-points[k][0],2)+Math.Pow(points[i][1]-points[k][1],2));\n                    \n                    double c = Math.Sqrt(Math.Pow(points[j][0]-points[k][0],2)+Math.Pow(points[j][1]-points[k][1],2));\n                    \n                    double s = (a+b+c)/2;\n                    double area = Math.Sqrt(s*(s-b)*(s-c)*(s-a));\n                    if(area&gt;maxArea){\n                        maxArea = area;\n                    }\n                }\n            }\n        }\n        \n        return maxArea;\n    }\n}</code></pre>\n<p>Time Complexity: O(n^3)</p>\n<p>Space Complexity: O(1)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/eaf56ec1-789b-4bd9-aa61-c1a60fec6af2.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"largest-triangle-area-math-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"maths","slug":"maths"}],"recommendations":[{"id":1681,"title":"Circular Array Loop - Array - Medium - LeetCode","imageUrl":"icon_32298a91-8bd5-4e63-872d-105103726a20.jpg","dateCreated":"2020-11-19T09:05:08.281Z","dateModified":"2020-11-19T09:05:14.582Z","contributedBy":"sumitc91","content":"You are given a circular array nums of positive and negative integers. If a number k at an index is positive, then move forward k steps. Conversely, if it's negative (-k), move backward k steps. Since the array is circular, you may assume that the last element's next element is the first element,","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/32298a91-8bd5-4e63-872d-105103726a20.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"circular-array-loop-array-medium-leetcode","total":0},{"id":1680,"title":"Find All Duplicates in an Array - Array - Medium - LeetCode","imageUrl":"icon_5a6c2b89-77d6-4d5e-978b-35b19f85ed66.jpg","dateCreated":"2020-11-19T07:32:23.312Z","dateModified":"2020-11-19T07:32:30.12Z","contributedBy":"sumitc91","content":"Given an array of integers, 1 &le; a[i] &le; n (n = size of array), some elements appear twice and others appear once.\nFind all the elements that appear twice in this array.\nCould you do it without extra space and in O(n) runtime?\nExample:<br />Input:<br />[4,3,2,7,8,2,3,1]</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/5a6c2b89-77d6-4d5e-978b-35b19f85ed66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"find-all-duplicates-in-an-array-array-medium-leetcode","total":0},{"id":1663,"title":"Defuse the Bomb - Array - Easy - LeetCode","imageUrl":"icon_e0c7ac1d-e52e-489e-849e-a7842cdb2c18.jpg","dateCreated":"2020-11-15T15:48:36.584Z","dateModified":"2020-11-15T15:48:43.094Z","contributedBy":"sumitc91","content":"You have a bomb to defuse, and your time is running out! Your informer will provide you with a circular array code of length of n and a key k.\nTo decrypt the code, you must replace every number. All the numbers are replaced simultaneously.\nIf k &gt; 0, replace the ith number with th","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/e0c7ac1d-e52e-489e-849e-a7842cdb2c18.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"defuse-the-bomb-array-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}