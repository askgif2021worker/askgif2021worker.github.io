{"id":1500,"title":"Rectangle Overlap - Math - Easy - LeetCode","imageUrl":"icon_080b186b-998b-473e-b4ea-241762659cc1.jpg","dateCreated":"2020-10-01T08:59:23.448Z","dateModified":"2020-10-01T08:59:36.446Z","contributedBy":"sumitc91","content":"<p>A rectangle is represented as a list [x1, y1, x2, y2], where (x1, y1) are the coordinates of its bottom-left corner, and (x2, y2) are the coordinates of its top-right corner.</p>\n<p>Two rectangles overlap if the area of their intersection is positive. &nbsp;To be clear, two rectangles that only touch at the corner or edges do not overlap.</p>\n<p>Given two (axis-aligned) rectangles, return whether they overlap.</p>\n<p>Example 1:</p>\n<p>Input: rec1 = [0,0,2,2], rec2 = [1,1,3,3]<br />Output: true<br />Example 2:</p>\n<p>Input: rec1 = [0,0,1,1], rec2 = [1,0,2,1]<br />Output: false<br />Notes:</p>\n<p>Both rectangles rec1 and rec2 are lists of 4 integers.<br />All coordinates in rectangles will be between -10^9 and 10^9.</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    public bool IsRectangleOverlap(int[] rec1, int[] rec2) {\n        int width = distance(rec1[0],rec2[0],rec1[2],rec2[2]);\n        int height = distance(rec1[1],rec2[1],rec1[3],rec2[3]);\n        \n        if(width&lt;=0 || height&lt;=0){\n            return false;\n        }\n        \n        return true;\n    }\n    \n    int distance(int bxy1, int bxy2, int txy1, int txy2) {\n        if(bxy1 &gt; txy2 || bxy2 &gt; txy1) {\n            return 0;\n        }\n        return Math.Min(txy1, txy2) - Math.Max(bxy1, bxy2);\n    }\n}</code></pre>\n<p>Time Complexity: O(1)</p>\n<p>Space Complexity: O(1)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/080b186b-998b-473e-b4ea-241762659cc1.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"rectangle-overlap-math-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"maths","slug":"maths"}],"recommendations":[{"id":1726,"title":"Maximum Swap - Array - Medium - LeetCode","imageUrl":"icon_16589057-204a-4929-8beb-ec745719515b.jpg","dateCreated":"2021-03-04T10:15:19.693Z","dateModified":"2021-03-04T10:16:54.289Z","contributedBy":"sumitc91","content":"Given a non-negative integer, you could swap two digits at most once to get the maximum valued number. Return the maximum valued number you could get.\nExample 1:<br />Input: 2736<br />Output: 7236<br />Explanation: Swap the number 2 and the number 7.<br />Example 2:<br />Input: 9973<br />O","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/16589057-204a-4929-8beb-ec745719515b.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"maximum-swap-array-medium-leetcode","total":0},{"id":1716,"title":"Maximum Units on a Truck - Array - Easy - LeetCode","imageUrl":"icon_3aedf9be-e325-4d16-b5ad-e180a12291dc.jpg","dateCreated":"2021-01-08T09:45:52.965Z","dateModified":"2021-01-08T09:46:00.078Z","contributedBy":"sumitc91","content":"You are assigned to put some amount of boxes onto one truck. You are given a 2D array boxTypes, where boxTypes[i] = [numberOfBoxesi, numberOfUnitsPerBoxi]:\nnumberOfBoxesi is the number of boxes of type i.<br />numberOfUnitsPerBoxi is the number of units in each box of the type i.<br />You ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/3aedf9be-e325-4d16-b5ad-e180a12291dc.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"maximum-units-on-a-truck-array-easy-leetcode","total":0},{"id":1599,"title":"Flower Planting With No Adjacent - Graph - Easy - LeetCode","imageUrl":"icon_db7a0ad4-994c-4a3a-a3c6-63035a00d2da.jpg","dateCreated":"2020-10-15T05:15:37.382Z","dateModified":"2020-10-15T05:15:47.948Z","contributedBy":"sumitc91","content":"You have n gardens, labeled from 1 to n, and an array paths where paths[i] = [xi, yi] describes the existence of a bidirectional path from garden xi to garden yi. In each garden, you want to plant one of 4 types of flowers.\nThere is no garden that has more than three paths coming into or l","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/db7a0ad4-994c-4a3a-a3c6-63035a00d2da.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"graph","slug":"graph"},{"name":"leetcode","slug":"leetcode"}],"slug":"flower-planting-with-no-adjacent-graph-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}