{"id":1502,"title":"Projection Area of 3D Shapes - Math - Easy - LeetCode","imageUrl":"icon_4877ab14-0709-4d15-a4cf-f1938e812aa7.jpg","dateCreated":"2020-10-01T09:29:11.098Z","dateModified":"2020-10-01T09:29:24.899Z","contributedBy":"sumitc91","content":"<p>On a N * N grid, we place some 1 * 1 * 1 cubes that are axis-aligned with the x, y, and z axes.</p>\n<p>Each value v = grid[i][j] represents a tower of v cubes placed on top of grid cell (i, j).</p>\n<p>Now we view the projection of these cubes onto the xy, yz, and zx planes.</p>\n<p>A projection is like a shadow, that maps our 3 dimensional figure to a 2 dimensional plane.&nbsp;</p>\n<p>Here, we are viewing the \"shadow\" when looking at the cubes from the top, the front, and the side.</p>\n<p>Return the total area of all three projections.</p>\n<p>&nbsp;</p>\n<p>Example 1:</p>\n<p>Input: [[2]]<br />Output: 5<br />Example 2:</p>\n<p>Input: [[1,2],[3,4]]<br />Output: 17<br />Explanation:&nbsp;<br />Here are the three projections (\"shadows\") of the shape made with each axis-aligned plane.</p>\n<p>Example 3:</p>\n<p>Input: [[1,0],[0,2]]<br />Output: 8<br />Example 4:</p>\n<p>Input: [[1,1,1],[1,0,1],[1,1,1]]<br />Output: 14<br />Example 5:</p>\n<p>Input: [[2,2,2],[2,1,2],[2,2,2]]<br />Output: 21<br />&nbsp;</p>\n<p>Note:</p>\n<p>1 &lt;= grid.length = grid[0].length &lt;= 50<br />0 &lt;= grid[i][j] &lt;= 50</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    public int ProjectionArea(int[][] grid) {\n        int res = 0, n = grid.Length;\n        for (int i = 0; i &lt; n; ++i) {\n            int x = 0, y = 0;\n            for (int j = 0; j &lt; n; ++j) {\n                x = Math.Max(x, grid[i][j]);\n                y = Math.Max(y, grid[j][i]);\n                if (grid[i][j] &gt; 0) ++res;\n            }\n            res += x + y;\n        }\n        return res;\n    }\n}</code></pre>\n<p>Time Complexity: O(n^2)</p>\n<p>Space Complexity: O(1)</p>\n<p>&nbsp;</p>\n<p>Explanation<br />front-back projection area on xz = sum(max value for every col)<br />right-left projection area on yz = sum(max value for every row)<br />top-down projection area on xy = sum(1 for every v &gt; 0)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/4877ab14-0709-4d15-a4cf-f1938e812aa7.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"projection-area-of-3d-shapes-math-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"गणित","slug":"maths"}],"recommendations":[{"id":1676,"title":"Product of Array Except Self - Array - Medium - LeetCode","imageUrl":"icon_454cf76b-ed84-4192-9a20-cb564088e9c1.jpg","dateCreated":"2020-11-18T12:44:47.018Z","dateModified":"2020-11-18T12:44:53.26Z","contributedBy":"sumitc91","content":"Given an array nums of n integers where n &gt; 1, &nbsp;return an array output such that output[i] is equal to the product of all the elements of nums except nums[i].\nExample:\nInput: &nbsp;[1,2,3,4]<br />Output: [24,12,8,6]<br />Constraint: It's guaranteed that the product of the el","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/454cf76b-ed84-4192-9a20-cb564088e9c1.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"product-of-array-except-self-array-medium-leetcode","total":0},{"id":1636,"title":"Two Strings - HashMap - Easy - HackerRank","imageUrl":"icon_b574251c-e9c0-4be6-9bc1-7c86f8da1806.jpg","dateCreated":"2020-10-24T07:22:16.972Z","dateModified":"2020-10-24T07:22:22.952Z","contributedBy":"sumitc91","content":"Given two strings, determine if they share a common substring. A substring may be as small as one character.\nFor example, the words \"a\", \"and\", \"art\" share the common substring . The words \"be\" and \"cat\" do not share a substring.\nFunction Description\nComplete the function two","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/b574251c-e9c0-4be6-9bc1-7c86f8da1806.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"hackerrank","slug":"hackerrank"},{"name":"hash-table","slug":"hash-table"}],"slug":"two-strings-hashmap-easy-hackerrank","total":0},{"id":1629,"title":"Maximum Nesting Depth of the Parentheses - Stack - Easy - LeetCode","imageUrl":"icon_9d515e72-4c83-4541-9650-c0972215972d.jpg","dateCreated":"2020-10-18T08:20:30.391Z","dateModified":"2020-10-18T08:20:41.012Z","contributedBy":"sumitc91","content":"A string is a valid parentheses string (denoted VPS) if it meets one of the following:\nIt is an empty string \"\", or a single character not equal to \"(\" or \")\",<br />It can be written as AB (A concatenated with B), where A and B are VPS's, or<br />It can be written as (A), where A is a VPS.","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/9d515e72-4c83-4541-9650-c0972215972d.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"stack","slug":"stack"}],"slug":"maximum-nesting-depth-of-the-parentheses-stack-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}