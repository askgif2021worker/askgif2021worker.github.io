{"id":1503,"title":"Surface Area of 3D Shapes - Math - Easy - LeetCode","imageUrl":"icon_478ad947-6343-40e3-826f-8eb9be28d781.jpg","dateCreated":"2020-10-01T09:41:06.834Z","dateModified":"2020-10-01T09:41:39.129Z","contributedBy":"sumitc91","content":"<p>On a N * N grid, we place some 1 * 1 * 1 cubes.</p>\n<p>Each value v = grid[i][j] represents a tower of v cubes placed on top of grid cell (i, j).</p>\n<p>Return the total surface area of the resulting shapes.</p>\n<p>&nbsp;</p>\n<p>Example 1:</p>\n<p>Input: [[2]]<br />Output: 10<br />Example 2:</p>\n<p>Input: [[1,2],[3,4]]<br />Output: 34<br />Example 3:</p>\n<p>Input: [[1,0],[0,2]]<br />Output: 16<br />Example 4:</p>\n<p>Input: [[1,1,1],[1,0,1],[1,1,1]]<br />Output: 32<br />Example 5:</p>\n<p>Input: [[2,2,2],[2,1,2],[2,2,2]]<br />Output: 46<br />&nbsp;</p>\n<p>Note:</p>\n<p>1 &lt;= N &lt;= 50<br />0 &lt;= grid[i][j] &lt;= 50</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    public int SurfaceArea(int[][] grid) {\n        int res = 0, n = grid.Length;\n        for (int i = 0; i &lt; n; ++i) {\n            for (int j = 0; j &lt; n; ++j) {\n                if (grid[i][j] &gt; 0) res += grid[i][j] * 4 + 2;\n                if (i &gt; 0) res -= Math.Min(grid[i][j], grid[i - 1][j]) * 2;\n                if (j &gt; 0) res -= Math.Min(grid[i][j], grid[i][j - 1]) * 2;\n            }\n        }\n        return res;\n    }\n}</code></pre>\n<p>Time Complexity: O(n^2)</p>\n<p>Space Complexity: O(1)</p>\n<p>For each tower, its surface area is 4 * v + 2<br />However, 2 adjacent tower will hide the area of connected part.<br />The hidden part is min(v1, v2) and we need just minus this area * 2</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/478ad947-6343-40e3-826f-8eb9be28d781.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"surface-area-of-3d-shapes-math-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"गणित","slug":"maths"}],"recommendations":[{"id":1727,"title":"Check if Array Is Sorted and Rotated - Array - Easy - LeetCode","imageUrl":"icon_2110d383-81cb-448a-8e4f-3773ff37294d.jpg","dateCreated":"2021-03-31T05:53:14.382Z","dateModified":"2021-03-31T05:53:27.431Z","contributedBy":"sumitc91","content":"Given an array nums, return true if the array was originally sorted in non-decreasing order, then rotated some number of positions (including zero). Otherwise, return false.\nThere may be duplicates in the original array.\nNote: An array A rotated by x positions results in an array B ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/2110d383-81cb-448a-8e4f-3773ff37294d.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"check-if-array-is-sorted-and-rotated-array-easy-leetcode","total":0},{"id":1679,"title":"Insert Delete GetRandom O(1) - Array - Medium - LeetCode","imageUrl":"icon_8589fcba-acbd-4690-8c6e-3f8e5511c176.jpg","dateCreated":"2020-11-19T06:35:11.658Z","dateModified":"2020-11-19T06:35:19.394Z","contributedBy":"sumitc91","content":"Implement the RandomizedSet class:\nbool insert(int val) Inserts an item val into the set if not present. Returns true if the item was not present, false otherwise.<br />bool remove(int val) Removes an item val from the set if present. Returns true if the item was present, false otherwise.<","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/8589fcba-acbd-4690-8c6e-3f8e5511c176.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"insert-delete-getrandom-o1-array-medium-leetcode","total":0},{"id":1612,"title":"Delete Duplicate Emails - SQL - Easy - LeetCode","imageUrl":"icon_a8c368b1-ddbd-45ca-96b4-7558b7166a74.jpg","dateCreated":"2020-10-16T11:31:27.16Z","dateModified":"2020-10-16T11:31:37.404Z","contributedBy":"sumitc91","content":"Write a SQL query to delete all duplicate email entries in a table named Person, keeping only unique emails based on its smallest Id.\n+----+------------------+<br />| Id | Email &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />+----+------------------+<br />| 1 &nbsp;| john@example.com |<br","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a8c368b1-ddbd-45ca-96b4-7558b7166a74.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"mysql","slug":"mysql"},{"name":"sql","slug":"sql"}],"slug":"delete-duplicate-emails-sql-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}