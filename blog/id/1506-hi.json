{"id":1506,"title":"Largest Perimeter Triangle - Math - Easy - LeetCode","imageUrl":"icon_cea5286f-59a8-4da8-beef-cc7084081a3f.jpg","dateCreated":"2020-10-01T10:22:51.148Z","dateModified":"2020-10-01T10:23:34.559Z","contributedBy":"sumitc91","content":"<p>Given an array A of positive lengths, return the largest perimeter of a triangle with non-zero area, formed from 3 of these lengths.</p>\n<p>If it is impossible to form any triangle of non-zero area, return 0.</p>\n<p>&nbsp;</p>\n<p>Example 1:</p>\n<p>Input: [2,1,2]<br />Output: 5<br />Example 2:</p>\n<p>Input: [1,2,1]<br />Output: 0<br />Example 3:</p>\n<p>Input: [3,2,3,4]<br />Output: 10<br />Example 4:</p>\n<p>Input: [3,6,2,3]<br />Output: 8<br />&nbsp;</p>\n<p>Note:</p>\n<p>3 &lt;= A.length &lt;= 10000<br />1 &lt;= A[i] &lt;= 10^6</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    public int LargestPerimeter(int[] A) {\n        Array.Sort(A);\n        for(int i=A.Length-1;i&gt;1;i--){\n            if(A[i]&lt;A[i-1]+A[i-2]){\n                return A[i]+A[i-1]+A[i-2];\n            }\n        }\n        return 0;\n    }\n}</code></pre>\n<p>Time Complexity: O(nlogn)</p>\n<p>Space Complexity: O(1)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/cea5286f-59a8-4da8-beef-cc7084081a3f.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"largest-perimeter-triangle-math-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"गणित","slug":"maths"}],"recommendations":[{"id":1678,"title":"Game of Life - Array - Medium - LeetCode","imageUrl":"icon_67a9ece8-2eeb-48f8-8881-4af10f198260.jpg","dateCreated":"2020-11-19T03:57:26.799Z","dateModified":"2020-11-19T03:57:33.216Z","contributedBy":"sumitc91","content":"According to the Wikipedia's article: \"The Game of Life, also known simply as Life, is a cellular automaton devised by the British mathematician John Horton Conway in 1970.\"\nGiven a board with m by n cells, each cell has an initial state live (1) or dead (0). Each cell interacts with its e","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/67a9ece8-2eeb-48f8-8881-4af10f198260.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"game-of-life-array-medium-leetcode","total":0},{"id":1645,"title":"Jump Game - Array - Medium - LeetCode","imageUrl":"icon_a22e7bed-85b5-4837-89ef-0da32c81085c.jpg","dateCreated":"2020-10-28T06:44:43.217Z","dateModified":"2020-10-28T06:44:52.67Z","contributedBy":"sumitc91","content":"Given an array of non-negative integers, you are initially positioned at the first index of the array.\nEach element in the array represents your maximum jump length at that position.\nDetermine if you are able to reach the last index.\n&nbsp;\nExample 1:\nInput: num","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a22e7bed-85b5-4837-89ef-0da32c81085c.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"jump-game-array-medium-leetcode","total":0},{"id":1626,"title":"Reformat Department Table - Sql - Easy - LeetCode","imageUrl":"icon_59cdadef-bfee-4b37-bafa-ad7569c32e3f.jpg","dateCreated":"2020-10-18T04:10:25.839Z","dateModified":"2020-10-18T04:10:34.638Z","contributedBy":"sumitc91","content":"Table: Department\n+---------------+---------+<br />| Column Name &nbsp; | Type &nbsp; &nbsp;|<br />+---------------+---------+<br />| id &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;| int &nbsp; &nbsp; |<br />| revenue &nbsp; &nbsp; &nbsp; | int &nbsp; &nbsp; |<br />| month &nbsp; &nbsp; &nbsp","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/59cdadef-bfee-4b37-bafa-ad7569c32e3f.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"mysql","slug":"mysql"},{"name":"sql","slug":"sql"}],"slug":"reformat-department-table-sql-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}