{"id":1508,"title":"Divisor Game - Math - Easy - LeetCode","imageUrl":"icon_6b96da3e-1c05-4ea4-b518-1870b9638ba6.jpg","dateCreated":"2020-10-01T15:52:22.837Z","dateModified":"2020-10-01T15:52:33.634Z","contributedBy":"sumitc91","content":"<p>Alice and Bob take turns playing a game, with Alice starting first.</p>\n<p>Initially, there is a number N on the chalkboard. &nbsp;On each player's turn, that player makes a move consisting of:</p>\n<p>Choosing any x with 0 &lt; x &lt; N and N % x == 0.<br />Replacing the number N on the chalkboard with N - x.<br />Also, if a player cannot make a move, they lose the game.</p>\n<p>Return True if and only if Alice wins the game, assuming both players play optimally.</p>\n<p>&nbsp;</p>\n<p>Example 1:</p>\n<p>Input: 2<br />Output: true<br />Explanation: Alice chooses 1, and Bob has no more moves.<br />Example 2:</p>\n<p>Input: 3<br />Output: false<br />Explanation: Alice chooses 1, Bob chooses 1, and Alice has no more moves.<br />&nbsp;</p>\n<p>Note:</p>\n<p>1 &lt;= N &lt;= 1000</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    public bool DivisorGame(int N) {\n        return N%2==0;\n    }\n}</code></pre>\n<p>Time Complexity: O(1)</p>\n<p>Space Complexity: O(1)</p>\n<p>&nbsp;</p>\n<p>Conclusion<br />If N is even, can win.<br />If N is odd, will lose.</p>\n<p>Recursive Prove （Top-down)<br />If N is even.<br />We can choose x = 1.<br />The opponent will get N - 1, which is a odd.<br />Reduce to the case odd and he will lose.</p>\n<p>If N is odd,<br />2.1 If N = 1, lose directly.<br />2.2 We have to choose an odd x.<br />The opponent will get N - x, which is a even.<br />Reduce to the case even and he will win.</p>\n<p>So the N will change odd and even alternatively until N = 1.</p>\n<p>Mathematical Induction Prove （Bottom-up)<br />N = 1, lose directly<br />N = 2, will win choosing x = 1.<br />N = 3, must lose choosing x = 1.<br />N = 4, will win choosing x = 1.<br />....</p>\n<p>For N &lt;= n, we have find that:<br />If N is even, can win.<br />If N is odd, will lose.</p>\n<p>For the case N = n + 1<br />If N is even, we can win choosing x = 1,<br />give the opponent an odd number N - 1 = n,<br />force him to lose,<br />because we have found that all odd N &lt;= n will lose.</p>\n<p>If N is odd, there is no even x that N % x == 0.<br />As a result, we give the opponent a even number N - x,<br />and the opponent can win,<br />because we have found that all even N &lt;= n can win.</p>\n<p>Now we prove that, for all N &lt;= n,<br />If N is even, can win.<br />If N is odd, will lose.</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/6b96da3e-1c05-4ea4-b518-1870b9638ba6.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"divisor-game-math-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"maths","slug":"maths"}],"recommendations":[{"id":1716,"title":"Maximum Units on a Truck - Array - Easy - LeetCode","imageUrl":"icon_3aedf9be-e325-4d16-b5ad-e180a12291dc.jpg","dateCreated":"2021-01-08T09:45:52.965Z","dateModified":"2021-01-08T09:46:00.078Z","contributedBy":"sumitc91","content":"You are assigned to put some amount of boxes onto one truck. You are given a 2D array boxTypes, where boxTypes[i] = [numberOfBoxesi, numberOfUnitsPerBoxi]:\nnumberOfBoxesi is the number of boxes of type i.<br />numberOfUnitsPerBoxi is the number of units in each box of the type i.<br />You ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/3aedf9be-e325-4d16-b5ad-e180a12291dc.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"maximum-units-on-a-truck-array-easy-leetcode","total":0},{"id":1709,"title":"Goal Parser Interpretation - String - Easy - LeetCode","imageUrl":"icon_1a301e38-c33f-42ee-b91b-84f1471554f8.jpg","dateCreated":"2020-12-07T04:02:11.892Z","dateModified":"2020-12-07T04:02:17.242Z","contributedBy":"sumitc91","content":"You own a Goal Parser that can interpret a string command. The command consists of an alphabet of \"G\", \"()\" and/or \"(al)\" in some order. The Goal Parser will interpret \"G\" as the string \"G\", \"()\" as the string \"o\", and \"(al)\" as the string \"al\". The interpreted strings are then concatenated in th","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/1a301e38-c33f-42ee-b91b-84f1471554f8.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"string","slug":"string"}],"slug":"goal-parser-interpretation-string-easy-leetcode","total":0},{"id":1665,"title":"Subsets II - Array - Medium - LeetCode","imageUrl":"icon_aaa8f566-bd39-4867-a4ad-9d2ec8eb9fec.jpg","dateCreated":"2020-11-17T08:34:58.632Z","dateModified":"2020-11-17T08:35:04.765Z","contributedBy":"sumitc91","content":"Given a collection of integers that might contain duplicates, nums, return all possible subsets (the power set).\nNote: The solution set must not contain duplicate subsets.\nExample:\nInput: [1,2,2]<br />Output:<br />[<br />&nbsp; [2],<br />&nbsp; [1],<br />&nbsp; [1,2,2],<br />","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/aaa8f566-bd39-4867-a4ad-9d2ec8eb9fec.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"subsets-ii-array-medium-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}