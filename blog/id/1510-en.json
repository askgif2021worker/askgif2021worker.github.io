{"id":1510,"title":"Distribute Candies to People - Math - Easy - LeetCode","imageUrl":"icon_b81399d9-b1f5-4133-9676-1ec08349c7da.jpg","dateCreated":"2020-10-01T16:14:45.272Z","dateModified":"2020-10-01T16:15:10.613Z","contributedBy":"sumitc91","content":"<p>We distribute some number of candies, to a row of n = num_people people in the following way:</p>\n<p>We then give 1 candy to the first person, 2 candies to the second person, and so on until we give n candies to the last person.</p>\n<p>Then, we go back to the start of the row, giving n + 1 candies to the first person, n + 2 candies to the second person, and so on until we give 2 * n candies to the last person.</p>\n<p>This process repeats (with us giving one more candy each time, and moving to the start of the row after we reach the end) until we run out of candies. &nbsp;The last person will receive all of our remaining candies (not necessarily one more than the previous gift).</p>\n<p>Return an array (of length num_people and sum candies) that represents the final distribution of candies.</p>\n<p>&nbsp;</p>\n<p>Example 1:</p>\n<p>Input: candies = 7, num_people = 4<br />Output: [1,2,3,1]<br />Explanation:<br />On the first turn, ans[0] += 1, and the array is [1,0,0,0].<br />On the second turn, ans[1] += 2, and the array is [1,2,0,0].<br />On the third turn, ans[2] += 3, and the array is [1,2,3,0].<br />On the fourth turn, ans[3] += 1 (because there is only one candy left), and the final array is [1,2,3,1].<br />Example 2:</p>\n<p>Input: candies = 10, num_people = 3<br />Output: [5,2,3]<br />Explanation:&nbsp;<br />On the first turn, ans[0] += 1, and the array is [1,0,0].<br />On the second turn, ans[1] += 2, and the array is [1,2,0].<br />On the third turn, ans[2] += 3, and the array is [1,2,3].<br />On the fourth turn, ans[0] += 4, and the final array is [5,2,3].<br />&nbsp;</p>\n<p>Constraints:</p>\n<p>1 &lt;= candies &lt;= 10^9<br />1 &lt;= num_people &lt;= 1000</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    public int[] DistributeCandies(int candies, int num_people) {\n        int num = 1;\n        int i=0;\n        var res = new int[num_people];\n        while(candies&gt;0){\n            res[i]+=Math.Min(num,candies);\n            candies-=num;\n            i++;\n            num++;\n            if(i==num_people){\n                i=0;\n            }\n        }\n        return res;\n    }\n}</code></pre>\n<p>Time Complexity: O(n)</p>\n<p>Space Complexity: O(n)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/b81399d9-b1f5-4133-9676-1ec08349c7da.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"distribute-candies-to-people-math-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"maths","slug":"maths"}],"recommendations":[{"id":1716,"title":"Maximum Units on a Truck - Array - Easy - LeetCode","imageUrl":"icon_3aedf9be-e325-4d16-b5ad-e180a12291dc.jpg","dateCreated":"2021-01-08T09:45:52.965Z","dateModified":"2021-01-08T09:46:00.078Z","contributedBy":"sumitc91","content":"You are assigned to put some amount of boxes onto one truck. You are given a 2D array boxTypes, where boxTypes[i] = [numberOfBoxesi, numberOfUnitsPerBoxi]:\nnumberOfBoxesi is the number of boxes of type i.<br />numberOfUnitsPerBoxi is the number of units in each box of the type i.<br />You ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/3aedf9be-e325-4d16-b5ad-e180a12291dc.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"maximum-units-on-a-truck-array-easy-leetcode","total":0},{"id":1679,"title":"Insert Delete GetRandom O(1) - Array - Medium - LeetCode","imageUrl":"icon_8589fcba-acbd-4690-8c6e-3f8e5511c176.jpg","dateCreated":"2020-11-19T06:35:11.658Z","dateModified":"2020-11-19T06:35:19.394Z","contributedBy":"sumitc91","content":"Implement the RandomizedSet class:\nbool insert(int val) Inserts an item val into the set if not present. Returns true if the item was not present, false otherwise.<br />bool remove(int val) Removes an item val from the set if present. Returns true if the item was present, false otherwise.<","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/8589fcba-acbd-4690-8c6e-3f8e5511c176.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"insert-delete-getrandom-o1-array-medium-leetcode","total":0},{"id":1676,"title":"Product of Array Except Self - Array - Medium - LeetCode","imageUrl":"icon_454cf76b-ed84-4192-9a20-cb564088e9c1.jpg","dateCreated":"2020-11-18T12:44:47.018Z","dateModified":"2020-11-18T12:44:53.26Z","contributedBy":"sumitc91","content":"Given an array nums of n integers where n &gt; 1, &nbsp;return an array output such that output[i] is equal to the product of all the elements of nums except nums[i].\nExample:\nInput: &nbsp;[1,2,3,4]<br />Output: [24,12,8,6]<br />Constraint: It's guaranteed that the product of the el","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/454cf76b-ed84-4192-9a20-cb564088e9c1.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"product-of-array-except-self-array-medium-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}