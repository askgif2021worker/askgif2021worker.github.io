{"id":1512,"title":"Prime Arrangements - Math - Easy - LeetCode","imageUrl":"icon_ec98c3ac-6620-48f4-92a2-3b95d370a27a.jpg","dateCreated":"2020-10-02T05:02:38.154Z","dateModified":"2020-10-02T05:02:49.754Z","contributedBy":"sumitc91","content":"<p>Return the number of permutations of 1 to n so that prime numbers are at prime indices (1-indexed.)</p>\n<p>(Recall that an integer is prime if and only if it is greater than 1, and cannot be written as a product of two positive integers both smaller than it.)</p>\n<p>Since the answer may be large, return the answer modulo 10^9 + 7.</p>\n<p>&nbsp;</p>\n<p>Example 1:</p>\n<p>Input: n = 5<br />Output: 12<br />Explanation: For example [1,2,5,4,3] is a valid permutation, but [5,2,3,4,1] is not because the prime number 5 is at index 1.<br />Example 2:</p>\n<p>Input: n = 100<br />Output: 682289015<br />&nbsp;</p>\n<p>Constraints:</p>\n<p>1 &lt;= n &lt;= 100</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    public int NumPrimeArrangements(int n) {        \n        int mod = (int)Math.Pow(10, 9) + 7;\n        int count = 0;\n        for (int i = 2; i &lt;= n; i++){\n            if (IsPrime(i)){\n                count++;   \n            }                \n        }            \n\n        long res = 1;\n        for (int i = count; i &gt; 0; i--)\n        {\n            res = (res * i) % mod;\n            res %= mod;\n        }\n\n        for (int i = n - count; i &gt; 0; i--)\n        {\n            res = (res * i) % mod;\n            res %= mod;\n        }\n\n        return (int)res;\n    }\n    \n    bool IsPrime(int num)\n    {\n        for (int i = 2; i &lt;= num / 2; i++){\n            if (num % i == 0){\n                return false;    \n            }                  \n        }            \n\n        return true;\n    }\n}</code></pre>\n<p>Time Complexity: O(n^2)</p>\n<p>Space Complexity: O(1)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/ec98c3ac-6620-48f4-92a2-3b95d370a27a.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"prime-arrangements-math-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"गणित","slug":"maths"}],"recommendations":[{"id":1654,"title":"Search a 2D Matrix - Array - Medium - LeetCode","imageUrl":"icon_4ecd9aac-a00a-4a8f-ad7b-e7e4a75307ac.jpg","dateCreated":"2020-10-31T10:10:06.758Z","dateModified":"2020-10-31T10:10:15.329Z","contributedBy":"sumitc91","content":"Write an efficient algorithm that searches for a value in an m x n matrix. This matrix has the following properties:\nIntegers in each row are sorted from left to right.<br />The first integer of each row is greater than the last integer of the previous row.<br />&nbsp;\nExample 1:</p","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/4ecd9aac-a00a-4a8f-ad7b-e7e4a75307ac.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"search-a-2d-matrix-array-medium-leetcode","total":0},{"id":1647,"title":"Slowest Key - Array - Easy - LeetCode","imageUrl":"icon_836f29a5-8a43-4160-b64a-fbf8416788bd.jpg","dateCreated":"2020-10-31T03:14:43.566Z","dateModified":"2020-10-31T03:14:48.648Z","contributedBy":"sumitc91","content":"A newly designed keypad was tested, where a tester pressed a sequence of n keys, one at a time.\nYou are given a string keysPressed of length n, where keysPressed[i] was the ith key pressed in the testing sequence, and a sorted list releaseTimes, where releaseTimes[i] was the time the ith k","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/836f29a5-8a43-4160-b64a-fbf8416788bd.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"slowest-key-array-easy-leetcode","total":0},{"id":1605,"title":"Number of Recent Calls - Queue - Easy - LeetCode","imageUrl":"icon_52ed4bb2-be8a-4dff-832b-3355d3a7b296.jpg","dateCreated":"2020-10-16T05:43:32.617Z","dateModified":"2020-10-16T05:44:07.781Z","contributedBy":"sumitc91","content":"You have a RecentCounter class which counts the number of recent requests within a certain time frame.\nImplement the RecentCounter class:\nRecentCounter() Initializes the counter with zero recent requests.<br />int ping(int t) Adds a new request at time t, where t represents some tim","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/946ba741-b1aa-4d55-9040-0f04c2d3678f.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"queue","slug":"queue"}],"slug":"number-of-recent-calls-queue-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}