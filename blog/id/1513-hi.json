{"id":1513,"title":"Find Positive Integer Solution for a Given Equation - Math - Easy - LeetCode","imageUrl":"icon_861bfca3-6a88-4da4-9489-d24f8110c821.jpg","dateCreated":"2020-10-02T06:53:43.807Z","dateModified":"2020-10-02T06:53:54.369Z","contributedBy":"sumitc91","content":"<p>Given a function &nbsp;f(x, y) and a value z, return all positive integer pairs x and y where f(x,y) == z.</p>\n<p>The function is constantly increasing, i.e.:</p>\n<p>f(x, y) &lt; f(x + 1, y)<br />f(x, y) &lt; f(x, y + 1)<br />The function interface is defined like this:&nbsp;</p>\n<p>interface CustomFunction {<br />public:<br />&nbsp; // Returns positive integer f(x, y) for any given positive integer x and y.<br />&nbsp; int f(int x, int y);<br />};<br />For custom testing purposes you're given an integer function_id and a target z as input, where function_id represents one function from a secret internal list, on the examples you'll know only two functions from the list. &nbsp;</p>\n<p>You may return the solutions in any order.</p>\n<p>&nbsp;</p>\n<p>Example 1:</p>\n<p>Input: function_id = 1, z = 5<br />Output: [[1,4],[2,3],[3,2],[4,1]]<br />Explanation: function_id = 1 means that f(x, y) = x + y<br />Example 2:</p>\n<p>Input: function_id = 2, z = 5<br />Output: [[1,5],[5,1]]<br />Explanation: function_id = 2 means that f(x, y) = x * y<br />&nbsp;</p>\n<p>Constraints:</p>\n<p>1 &lt;= function_id &lt;= 9<br />1 &lt;= z &lt;= 100<br />It's guaranteed that the solutions of f(x, y) == z will be on the range 1 &lt;= x, y &lt;= 1000<br />It's also guaranteed that f(x, y) will fit in 32 bit signed integer if 1 &lt;= x, y &lt;= 1000</p>\n<pre class=\"language-csharp\"><code>/*\n * // This is the custom function interface.\n * // You should not implement it, or speculate about its implementation\n * public class CustomFunction {\n *     // Returns f(x, y) for any given positive integers x and y.\n *     // Note that f(x, y) is increasing with respect to both x and y.\n *     // i.e. f(x, y) &lt; f(x + 1, y), f(x, y) &lt; f(x, y + 1)\n *     public int f(int x, int y);\n * };\n */\n\npublic class Solution {\n    public IList&lt;IList&lt;int&gt;&gt; FindSolution(CustomFunction customfunction, int z) {\n        var res = new List&lt;IList&lt;int&gt;&gt;();\n        int x = 1;\n        int y = 1000;\n        while (x &lt;= 1000 &amp;&amp; y &gt; 0) {\n            int v = customfunction.f(x, y);\n            if (v &gt; z){\n                --y;   \n            }\n            else if (v &lt; z){\n                ++x; \n            }\n            else{\n                var arr = new List&lt;int&gt;();\n                arr.Add(x++);\n                arr.Add(y--);\n                res.Add(arr);\n            }\n        }\n        return res;\n    }\n}</code></pre>\n<p>Time Complexity: O(n)</p>\n<p>Space Complexity: O(n)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/861bfca3-6a88-4da4-9489-d24f8110c821.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"find-positive-integer-solution-for-a-given-equation-math-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"गणित","slug":"maths"}],"recommendations":[{"id":1706,"title":"Check If Two String Arrays are Equivalent - String - Easy - LeetCode","imageUrl":"icon_38460c51-4f08-46d0-82ef-1f2263c60127.jpg","dateCreated":"2020-11-24T13:04:46.01Z","dateModified":"2020-11-24T13:04:50.906Z","contributedBy":"sumitc91","content":"Given two string arrays word1 and word2, return true if the two arrays represent the same string, and false otherwise.\nA string is represented by an array if the array elements concatenated in order forms the string.\n&nbsp;\nExample 1:\nInput: word1 = [\"ab\", \"c\"], word2 ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/38460c51-4f08-46d0-82ef-1f2263c60127.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"string","slug":"string"}],"slug":"check-if-two-string-arrays-are-equivalent-string-easy-leetcode","total":0},{"id":1664,"title":"Design an Ordered Stream - Array - Easy - LeetCode","imageUrl":"icon_ee2c2f78-fadb-4eec-b972-5425cc0c84b8.jpg","dateCreated":"2020-11-16T03:10:10.642Z","dateModified":"2020-11-16T03:10:15.886Z","contributedBy":"sumitc91","content":"There are n (id, value) pairs, where id is an integer between 1 and n and value is a string. No two pairs have the same id.\nDesign a stream that takes the n pairs in an arbitrary order, and returns the values over several calls in increasing order of their ids.\nImplement the Ordered","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/ee2c2f78-fadb-4eec-b972-5425cc0c84b8.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"design-an-ordered-stream-array-easy-leetcode","total":0},{"id":1595,"title":"Cousins in Binary Tree - Tree - Easy - LeetCode","imageUrl":"icon_249b4ce9-a2e8-4b2a-a369-264d0c802503.jpg","dateCreated":"2020-10-09T09:24:10.362Z","dateModified":"2020-10-09T09:24:23.315Z","contributedBy":"sumitc91","content":"In a binary tree, the root node is at depth 0, and children of each depth k node are at depth k+1.\nTwo nodes of a binary tree are cousins if they have the same depth, but have different parents.\nWe are given the root of a binary tree with unique values, and the values x and y of two","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/249b4ce9-a2e8-4b2a-a369-264d0c802503.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"cousins-in-binary-tree-tree-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}