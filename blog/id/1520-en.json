{"id":1520,"title":"Reformat Date - String - Easy - LeetCode","imageUrl":"icon_52b9f146-d608-44e9-8fe3-68cb454d96f7.jpg","dateCreated":"2020-10-02T10:00:01.731Z","dateModified":"2020-10-02T10:00:14.916Z","contributedBy":"sumitc91","content":"<p>Given a date string in the form Day Month Year, where:</p>\n<p>Day is in the set {\"1st\", \"2nd\", \"3rd\", \"4th\", ..., \"30th\", \"31st\"}.<br />Month is in the set {\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"}.<br />Year is in the range [1900, 2100].<br />Convert the date string to the format YYYY-MM-DD, where:</p>\n<p>YYYY denotes the 4 digit year.<br />MM denotes the 2 digit month.<br />DD denotes the 2 digit day.<br />&nbsp;</p>\n<p>Example 1:</p>\n<p>Input: date = \"20th Oct 2052\"<br />Output: \"2052-10-20\"<br />Example 2:</p>\n<p>Input: date = \"6th Jun 1933\"<br />Output: \"1933-06-06\"<br />Example 3:</p>\n<p>Input: date = \"26th May 1960\"<br />Output: \"1960-05-26\"<br />&nbsp;</p>\n<p>Constraints:</p>\n<p>The given dates are guaranteed to be valid, so no error handling is necessary.</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    public string ReformatDate(string date) {\n        \n        var arr = date.Split(' ');\n        var sb = new StringBuilder();\n        \n        sb.Append(arr[2]);\n        sb.Append(\"-\");\n        sb.Append(GetMonth(arr[1]));\n        sb.Append(\"-\");\n        \n        if(Char.IsDigit(arr[0][1])){\n            sb.Append(arr[0].Substring(0,2));\n        } \n        else{\n            sb.Append(\"0\"+arr[0][0]);\n        }\n        \n        return sb.ToString();\n    }\n    \n    private string GetMonth(string month){        \n        switch(month){\n            case \"Jan\":\n                return \"01\";\n            case \"Feb\":\n                return \"02\";\n            case \"Mar\":\n                return \"03\";\n            case \"Apr\":\n                return \"04\";\n            case \"May\":\n                return \"05\";\n            case \"Jun\":\n                return \"06\";\n            case \"Jul\":\n                return \"07\";\n            case \"Aug\":\n                return \"08\";\n            case \"Sep\":\n                return \"09\";\n            case \"Oct\":\n                return \"10\";\n            case \"Nov\":\n                return \"11\";\n            case \"Dec\":\n                return \"12\";\n        }\n        return \"\";\n    }\n}</code></pre>\n<p>Time Complexity: O(1)</p>\n<p>Space Complexity: O(n)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/52b9f146-d608-44e9-8fe3-68cb454d96f7.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"reformat-date-string-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"string","slug":"string"}],"recommendations":[{"id":1666,"title":"Construct Binary Tree from Preorder and Inorder Traversal - Array - Medium - LeetCode","imageUrl":"icon_af4cfea8-d43c-4a5f-aded-bc8e7ebfe296.jpg","dateCreated":"2020-11-17T10:00:03.216Z","dateModified":"2020-11-17T10:00:07.655Z","contributedBy":"sumitc91","content":"Given preorder and inorder traversal of a tree, construct the binary tree.\nNote:<br />You may assume that duplicates do not exist in the tree.\nFor example, given\npreorder = [3,9,20,15,7]<br />inorder = [9,3,15,20,7]<br />Return the following binary tree:\n&nbsp; &nbsp; ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/af4cfea8-d43c-4a5f-aded-bc8e7ebfe296.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"construct-binary-tree-from-preorder-and-inorder-traversal-array-medium-leetcode","total":0},{"id":1664,"title":"Design an Ordered Stream - Array - Easy - LeetCode","imageUrl":"icon_ee2c2f78-fadb-4eec-b972-5425cc0c84b8.jpg","dateCreated":"2020-11-16T03:10:10.642Z","dateModified":"2020-11-16T03:10:15.886Z","contributedBy":"sumitc91","content":"There are n (id, value) pairs, where id is an integer between 1 and n and value is a string. No two pairs have the same id.\nDesign a stream that takes the n pairs in an arbitrary order, and returns the values over several calls in increasing order of their ids.\nImplement the Ordered","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/ee2c2f78-fadb-4eec-b972-5425cc0c84b8.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"design-an-ordered-stream-array-easy-leetcode","total":0},{"id":1647,"title":"Slowest Key - Array - Easy - LeetCode","imageUrl":"icon_836f29a5-8a43-4160-b64a-fbf8416788bd.jpg","dateCreated":"2020-10-31T03:14:43.566Z","dateModified":"2020-10-31T03:14:48.648Z","contributedBy":"sumitc91","content":"A newly designed keypad was tested, where a tester pressed a sequence of n keys, one at a time.\nYou are given a string keysPressed of length n, where keysPressed[i] was the ith key pressed in the testing sequence, and a sorted list releaseTimes, where releaseTimes[i] was the time the ith k","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/836f29a5-8a43-4160-b64a-fbf8416788bd.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"slowest-key-array-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}