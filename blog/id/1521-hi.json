{"id":1521,"title":"Make The String Great - String - Easy - LeetCode","imageUrl":"icon_1246608d-9e19-438a-8216-3327c85b02da.jpg","dateCreated":"2020-10-02T10:20:43.393Z","dateModified":"2020-10-02T10:21:02.743Z","contributedBy":"sumitc91","content":"<p>Given a string s of lower and upper case English letters.</p>\n<p>A good string is a string which doesn't have two adjacent characters s[i] and s[i + 1] where:</p>\n<p>0 &lt;= i &lt;= s.length - 2<br />s[i] is a lower-case letter and s[i + 1] is the same letter but in upper-case or vice-versa.<br />To make the string good, you can choose two adjacent characters that make the string bad and remove them. You can keep doing this until the string becomes good.</p>\n<p>Return the string after making it good. The answer is guaranteed to be unique under the given constraints.</p>\n<p>Notice that an empty string is also good.</p>\n<p>&nbsp;</p>\n<p>Example 1:</p>\n<p>Input: s = \"leEeetcode\"<br />Output: \"leetcode\"<br />Explanation: In the first step, either you choose i = 1 or i = 2, both will result \"leEeetcode\" to be reduced to \"leetcode\".<br />Example 2:</p>\n<p>Input: s = \"abBAcC\"<br />Output: \"\"<br />Explanation: We have many possible scenarios, and all lead to the same answer. For example:<br />\"abBAcC\" --&gt; \"aAcC\" --&gt; \"cC\" --&gt; \"\"<br />\"abBAcC\" --&gt; \"abBA\" --&gt; \"aA\" --&gt; \"\"<br />Example 3:</p>\n<p>Input: s = \"s\"<br />Output: \"s\"<br />&nbsp;</p>\n<p>Constraints:</p>\n<p>1 &lt;= s.length &lt;= 100<br />s contains only lower and upper case English letters.</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    public string MakeGood(string s) {\n        if(s.Length==0){\n            return s;\n        }\n        \n        var stack = new Stack&lt;char&gt;();        \n        stack.Push(s[0]);\n        for(int i=1;i&lt;s.Length;i++){\n            if(stack.Count&gt;0){\n                if(IsUpperLower(stack.Peek(),s[i])){\n                    stack.Pop();                    \n                }\n                else{\n                    stack.Push(s[i]);\n                }\n            }\n            else{\n                stack.Push(s[i]);\n            }\n        }\n        \n        var temp = new Stack&lt;char&gt;();\n        while(stack.Count&gt;0){\n            temp.Push(stack.Pop());\n        }\n        \n        var sb = new StringBuilder();\n        while(temp.Count&gt;0){\n            sb.Append(temp.Pop());\n        }\n        \n        return sb.ToString();\n    }\n    \n    private bool IsUpperLower(char x, char y){\n        return (Math.Abs(x-y)==32);\n    }\n}</code></pre>\n<p>Time Complexity: O(n)</p>\n<p>Space Complexity: O(n)</p>\n<p>&nbsp;</p>\n<p>Where n is the size of the string.</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/1246608d-9e19-438a-8216-3327c85b02da.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"make-the-string-great-string-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"string","slug":"string"}],"recommendations":[{"id":1663,"title":"Defuse the Bomb - Array - Easy - LeetCode","imageUrl":"icon_e0c7ac1d-e52e-489e-849e-a7842cdb2c18.jpg","dateCreated":"2020-11-15T15:48:36.584Z","dateModified":"2020-11-15T15:48:43.094Z","contributedBy":"sumitc91","content":"You have a bomb to defuse, and your time is running out! Your informer will provide you with a circular array code of length of n and a key k.\nTo decrypt the code, you must replace every number. All the numbers are replaced simultaneously.\nIf k &gt; 0, replace the ith number with th","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/e0c7ac1d-e52e-489e-849e-a7842cdb2c18.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"defuse-the-bomb-array-easy-leetcode","total":0},{"id":1633,"title":"3Sum - Array - Medium - LeetCode","imageUrl":"icon_b05855a6-ac78-4434-a041-4682444c76bc.jpg","dateCreated":"2020-10-19T04:39:11.508Z","dateModified":"2020-10-19T04:39:21.598Z","contributedBy":"sumitc91","content":"Given an array nums of n integers, are there elements a, b, c in nums such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.\nNotice that the solution set must not contain duplicate triplets.\n&nbsp;\nExample 1:\nInput: nums = [-1,0,1,2","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/b05855a6-ac78-4434-a041-4682444c76bc.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"3sum-array-medium-leetcode","total":0},{"id":1593,"title":"Range Sum of BST - Tree - Easy - LeetCode","imageUrl":"icon_2d446765-9ada-4072-93c3-eedfb56f7794.jpg","dateCreated":"2020-10-09T08:49:41.585Z","dateModified":"2020-10-09T08:49:55.954Z","contributedBy":"sumitc91","content":"Given the root node of a binary search tree, return the sum of values of all nodes with value between L and R (inclusive).\nThe binary search tree is guaranteed to have unique values.\n&nbsp;\nExample 1:\nInput: root = [10,5,15,3,7,null,18], L = 7, R = 15<br />Output: 32<b","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/2d446765-9ada-4072-93c3-eedfb56f7794.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"range-sum-of-bst-tree-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}