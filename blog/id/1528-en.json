{"id":1528,"title":"Heaters - String - Easy - LeetCode","imageUrl":"icon_ffc9ba39-9f78-4ca6-94e1-1dde1509b9eb.jpg","dateCreated":"2020-10-03T06:56:09.999Z","dateModified":"2020-10-03T06:56:37.868Z","contributedBy":"sumitc91","content":"<p>Winter is coming! Your first job during the contest is to design a standard heater with a fixed warm radius to warm all the houses.</p>\n<p>Now, you are given positions of houses and heaters on a horizontal line, find out the minimum radius of heaters so that all houses could be covered by those heaters.</p>\n<p>So, your input will be the positions of houses and heaters separately, and your expected output will be the minimum radius standard of heaters.</p>\n<p>Note:</p>\n<p>The numbers of houses and heaters you are given are non-negative and will not exceed 25000.<br />Positions of houses and heaters you are given are non-negative and will not exceed 10^9.<br />As long as a house is in the heaters' warm radius range, it can be warmed.<br />All the heaters follow your radius standard and the warm radius will the same.<br />&nbsp;</p>\n<p>Example 1:</p>\n<p>Input: [1,2,3],[2]<br />Output: 1<br />Explanation: The only heater was placed in position 2, and if we use the radius 1 standard, then all the houses can be warmed.<br />&nbsp;</p>\n<p>Example 2:</p>\n<p>Input: [1,2,3,4],[1,4]<br />Output: 1<br />Explanation: The two heater was placed in positions 1 and 4. We need to use the radius 1 standard, then all the houses can be warmed.</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    public int FindRadius(int[] houses, int[] heaters) {\n        if(houses.Length == 0 || heaters.Length == 0)\n            return int.MaxValue;\n        Array.Sort(heaters);\n        int result = int.MinValue;\n        foreach(var house in houses){\n            int rad = findRad(house, heaters);\n            result = Math.Max(rad, result);\n        }\n        return result;\n    }\n    \n    private int findRad(int house, int[] heaters){\n        int start = 0, end = heaters.Length-1;\n        int left = int.MaxValue;\n        int right = int.MaxValue ;\n        while(start&lt;=end){\n            int mid = (start+end)/2;\n            int heater = heaters[mid];\n            if(heater == house)\n                return 0;\n            else if(heater&gt;house){\n                right = heater-house;\n                end = mid-1;\n            } else{\n                left = house-heater;\n                start = mid+1;\n            }\n        }\n        \n        return  Math.Min(left, right);\n    }\n}</code></pre>\n<p>Time Complexity: O(nlogm)</p>\n<p>Space Complexity: O(1)</p>\n<p>Where n is the number of houses and m is the number of heaters.</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/ffc9ba39-9f78-4ca6-94e1-1dde1509b9eb.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"heaters-string-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-search","slug":"binary-search"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"recommendations":[{"id":1655,"title":"Sort Colors - Array - Medium - LeetCode","imageUrl":"icon_d14c2a98-a56d-44ac-9a21-2ed77349737c.jpg","dateCreated":"2020-10-31T11:30:17.677Z","dateModified":"2020-10-31T11:30:24.576Z","contributedBy":"sumitc91","content":"Given an array nums with n objects colored red, white, or blue, sort them in-place so that objects of the same color are adjacent, with the colors in the order red, white, and blue.\nHere, we will use the integers 0, 1, and 2 to represent the color red, white, and blue respectively.\n","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/d14c2a98-a56d-44ac-9a21-2ed77349737c.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"sort-colors-array-medium-leetcode","total":0},{"id":1639,"title":"Search in Rotated Sorted Array - Array - Medium - LeetCode","imageUrl":"icon_92804ec8-8b64-41e0-a4f4-89ed11e1a5e2.jpg","dateCreated":"2020-10-24T14:15:15.013Z","dateModified":"2020-10-24T14:15:23.602Z","contributedBy":"sumitc91","content":"You are given an integer array nums sorted in ascending order, and an integer target.\nSuppose that nums is rotated at some pivot unknown to you beforehand (i.e., [0,1,2,4,5,6,7] might become [4,5,6,7,0,1,2]).\nIf target is found in the array return its index, otherwise, return -1.</p","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/92804ec8-8b64-41e0-a4f4-89ed11e1a5e2.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"search-in-rotated-sorted-array-array-medium-leetcode","total":0},{"id":1592,"title":"Increasing Order Search Tree - Tree - Easy - LeetCode","imageUrl":"icon_32836fb6-9705-48a7-be70-4bd66b1c621e.jpg","dateCreated":"2020-10-09T07:45:00.338Z","dateModified":"2020-10-09T07:45:33.127Z","contributedBy":"sumitc91","content":"Given a binary search tree, rearrange the tree in in-order so that the leftmost node in the tree is now the root of the tree, and every node has no left child and only 1 right child.\nExample 1:<br />Input: [5,3,6,2,4,null,8,1,null,null,null,7,9]\n&nbsp; &nbsp; &nbsp; &nbsp;5<br />&nb","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/32836fb6-9705-48a7-be70-4bd66b1c621e.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"increasing-order-search-tree-tree-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}