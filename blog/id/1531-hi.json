{"id":1531,"title":"Find Smallest Letter Greater Than Target - Array - Easy - LeetCode","imageUrl":"icon_757213b3-c73f-490c-97e0-d6778dc4e981.jpg","dateCreated":"2020-10-03T08:36:32.114Z","dateModified":"2020-10-03T08:36:45.493Z","contributedBy":"sumitc91","content":"<p>Given a list of sorted characters letters containing only lowercase letters, and given a target letter target, find the smallest element in the list that is larger than the given target.</p>\n<p>Letters also wrap around. For example, if the target is target = 'z' and letters = ['a', 'b'], the answer is 'a'.</p>\n<p>Examples:<br />Input:<br />letters = [\"c\", \"f\", \"j\"]<br />target = \"a\"<br />Output: \"c\"</p>\n<p>Input:<br />letters = [\"c\", \"f\", \"j\"]<br />target = \"c\"<br />Output: \"f\"</p>\n<p>Input:<br />letters = [\"c\", \"f\", \"j\"]<br />target = \"d\"<br />Output: \"f\"</p>\n<p>Input:<br />letters = [\"c\", \"f\", \"j\"]<br />target = \"g\"<br />Output: \"j\"</p>\n<p>Input:<br />letters = [\"c\", \"f\", \"j\"]<br />target = \"j\"<br />Output: \"c\"</p>\n<p>Input:<br />letters = [\"c\", \"f\", \"j\"]<br />target = \"k\"<br />Output: \"c\"<br />Note:<br />letters has a length in range [2, 10000].<br />letters consists of lowercase letters, and contains at least 2 unique letters.<br />target is a lowercase letter.</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    public char NextGreatestLetter(char[] letters, char target) {        \n        if(target&gt;=letters[letters.Length-1]){\n            return letters[0];\n        }\n        \n        int low = 0;\n        int high = letters.Length-1;        \n        while(low&lt;high){            \n            int mid = low + (high-low)/2;            \n            if(letters[mid]&lt;=target){\n                low = mid+1;\n            }\n            else{\n                high=mid;\n            }\n                      \n        }        \n        \n        return letters[high];\n    }\n}</code></pre>\n<p>Time Complexity: O(logn)</p>\n<p>Space Complexity: O(1)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/757213b3-c73f-490c-97e0-d6778dc4e981.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"find-smallest-letter-greater-than-target-array-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-search","slug":"binary-search"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"recommendations":[{"id":1651,"title":"Unique Paths II - Array - Medium - LeetCode","imageUrl":"icon_ca5278d5-6ee2-45fc-9c8e-7f12ff9f0357.jpg","dateCreated":"2020-10-31T08:51:34.949Z","dateModified":"2020-10-31T08:51:41.7Z","contributedBy":"sumitc91","content":"A robot is located at the top-left corner of a m x n grid (marked 'Start' in the diagram below).\nThe robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid (marked 'Finish' in the diagram below).\nNow consider i","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/ca5278d5-6ee2-45fc-9c8e-7f12ff9f0357.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"unique-paths-ii-array-medium-leetcode","total":0},{"id":1638,"title":"Next Permutation - Array - Medium - LeetCode","imageUrl":"icon_467cc3d1-390e-4bc6-a589-9f2b2a7b6f67.jpg","dateCreated":"2020-10-24T11:58:46.632Z","dateModified":"2020-10-24T11:59:00.039Z","contributedBy":"sumitc91","content":"Implement next permutation, which rearranges numbers into the lexicographically next greater permutation of numbers.\nIf such an arrangement is not possible, it must rearrange it as the lowest possible order (i.e., sorted in ascending order).\nThe replacement must be in place and use ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/467cc3d1-390e-4bc6-a589-9f2b2a7b6f67.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"next-permutation-array-medium-leetcode","total":0},{"id":1619,"title":"Classes More Than 5 Students - Sql - Easy - LeetCode","imageUrl":"icon_e71c8d7a-4f1f-4f65-8676-b2f2b13032cb.jpg","dateCreated":"2020-10-17T06:01:27.477Z","dateModified":"2020-10-17T06:01:38.886Z","contributedBy":"sumitc91","content":"There is a table courses with columns: student and class\nPlease list out all classes which have more than or equal to 5 students.\nFor example, the table:\n+---------+------------+<br />| student | class &nbsp; &nbsp; &nbsp;|<br />+---------+------------+<br />| A &nbsp; &nbsp;","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/e71c8d7a-4f1f-4f65-8676-b2f2b13032cb.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"sql","slug":"sql"}],"slug":"classes-more-than-5-students-sql-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}