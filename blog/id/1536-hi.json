{"id":1536,"title":"Implement Stack using Queues - Stack - Easy - LeetCode","imageUrl":"icon_d4702131-8b2b-4f45-a635-10e5efea282b.jpg","dateCreated":"2020-10-03T11:27:53.355Z","dateModified":"2020-10-03T11:28:06.825Z","contributedBy":"sumitc91","content":"<p>Implement the following operations of a stack using queues.</p>\n<p>push(x) -- Push element x onto stack.<br />pop() -- Removes the element on top of the stack.<br />top() -- Get the top element.<br />empty() -- Return whether the stack is empty.<br />Example:</p>\n<p>MyStack stack = new MyStack();</p>\n<p>stack.push(1);<br />stack.push(2); &nbsp;<br />stack.top(); &nbsp; // returns 2<br />stack.pop(); &nbsp; // returns 2<br />stack.empty(); // returns false<br />Notes:</p>\n<p>You must use only standard operations of a queue -- which means only push to back, peek/pop from front, size, and is empty operations are valid.<br />Depending on your language, queue may not be supported natively. You may simulate a queue by using a list or deque (double-ended queue), as long as you use only standard operations of a queue.<br />You may assume that all operations are valid (for example, no pop or top operations will be called on an empty stack).</p>\n<pre class=\"language-csharp\"><code>public class MyStack {\n\n    Queue&lt;int&gt; queue1;\n    Queue&lt;int&gt; queue2;\n    /** Initialize your data structure here. */\n    public MyStack() {\n        queue1 = new Queue&lt;int&gt;();\n        queue2 = new Queue&lt;int&gt;();\n    }\n    \n    /** Push element x onto stack. */\n    public void Push(int x) {\n        queue2.Enqueue(x);\n        while(queue1.Count&gt;0){\n            queue2.Enqueue(queue1.Dequeue());\n        }\n        Queue&lt;int&gt; temp = queue1;\n        queue1 = queue2;\n        queue2 = temp;\n    }\n    \n    /** Removes the element on top of the stack and returns that element. */\n    public int Pop() {        \n        if(queue1.Count&lt;1){\n            return -1;\n        }\n        return queue1.Dequeue();\n    }\n    \n    /** Get the top element. */\n    public int Top() {\n        if(queue1.Count&lt;1){\n            return -1;\n        }\n        return queue1.Peek();\n    }\n    \n    /** Returns whether the stack is empty. */\n    public bool Empty() {\n        return queue1.Count()&lt;1;\n    }\n}\n\n/**\n * Your MyStack object will be instantiated and called as such:\n * MyStack obj = new MyStack();\n * obj.Push(x);\n * int param_2 = obj.Pop();\n * int param_3 = obj.Top();\n * bool param_4 = obj.Empty();\n */</code></pre>\n<p>Time Complexity: O(n)</p>\n<p>Space Complexity: O(n)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/d4702131-8b2b-4f45-a635-10e5efea282b.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"implement-stack-using-queues-stack-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"stack","slug":"stack"}],"recommendations":[{"id":1663,"title":"Defuse the Bomb - Array - Easy - LeetCode","imageUrl":"icon_e0c7ac1d-e52e-489e-849e-a7842cdb2c18.jpg","dateCreated":"2020-11-15T15:48:36.584Z","dateModified":"2020-11-15T15:48:43.094Z","contributedBy":"sumitc91","content":"You have a bomb to defuse, and your time is running out! Your informer will provide you with a circular array code of length of n and a key k.\nTo decrypt the code, you must replace every number. All the numbers are replaced simultaneously.\nIf k &gt; 0, replace the ith number with th","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/e0c7ac1d-e52e-489e-849e-a7842cdb2c18.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"defuse-the-bomb-array-easy-leetcode","total":0},{"id":1651,"title":"Unique Paths II - Array - Medium - LeetCode","imageUrl":"icon_ca5278d5-6ee2-45fc-9c8e-7f12ff9f0357.jpg","dateCreated":"2020-10-31T08:51:34.949Z","dateModified":"2020-10-31T08:51:41.7Z","contributedBy":"sumitc91","content":"A robot is located at the top-left corner of a m x n grid (marked 'Start' in the diagram below).\nThe robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid (marked 'Finish' in the diagram below).\nNow consider i","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/ca5278d5-6ee2-45fc-9c8e-7f12ff9f0357.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"unique-paths-ii-array-medium-leetcode","total":0},{"id":1632,"title":"Container With Most Water - Array - Medium - LeetCode","imageUrl":"icon_fc25ea42-813c-4de4-be8b-eb874d415c58.jpg","dateCreated":"2020-10-18T15:53:55.445Z","dateModified":"2020-10-18T15:54:07.342Z","contributedBy":"sumitc91","content":"Given n non-negative integers a1, a2, ..., an , where each represents a point at coordinate (i, ai). n vertical lines are drawn such that the two endpoints of line i is at (i, ai) and (i, 0). Find two lines, which, together with the x-axis forms a container, such that the container contains the m","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/fc25ea42-813c-4de4-be8b-eb874d415c58.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"container-with-most-water-array-medium-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}