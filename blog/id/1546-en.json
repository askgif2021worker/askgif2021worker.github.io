{"id":1546,"title":"Assign Cookies - Greedy - Easy - LeetCode","imageUrl":"icon_a118ae38-7088-46e4-827c-723731b99de3.jpg","dateCreated":"2020-10-05T04:51:03.87Z","dateModified":"2020-10-05T04:51:16.232Z","contributedBy":"sumitc91","content":"<p>Assume you are an awesome parent and want to give your children some cookies. But, you should give each child at most one cookie. Each child i has a greed factor gi, which is the minimum size of a cookie that the child will be content with; and each cookie j has a size sj. If sj &gt;= gi, we can assign the cookie j to the child i, and the child i will be content. Your goal is to maximize the number of your content children and output the maximum number.</p>\n<p>Note:<br />You may assume the greed factor is always positive.<br />You cannot assign more than one cookie to one child.</p>\n<p>Example 1:<br />Input: [1,2,3], [1,1]</p>\n<p>Output: 1</p>\n<p>Explanation: You have 3 children and 2 cookies. The greed factors of 3 children are 1, 2, 3.&nbsp;<br />And even though you have 2 cookies, since their size is both 1, you could only make the child whose greed factor is 1 content.<br />You need to output 1.<br />Example 2:<br />Input: [1,2], [1,2,3]</p>\n<p>Output: 2</p>\n<p>Explanation: You have 2 children and 3 cookies. The greed factors of 2 children are 1, 2.&nbsp;<br />You have 3 cookies and their sizes are big enough to gratify all of the children,&nbsp;<br />You need to output 2.</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    public int FindContentChildren(int[] g, int[] s) {\n        Array.Sort(g);\n        Array.Sort(s);\n        int count = 0;\n        for(int i=0, j=0;i&lt;g.Length &amp;&amp; j&lt;s.Length;){\n            if(g[i]&lt;=s[j]){\n                count++;\n                i++;\n                j++;\n            }\n            else{\n                j++;\n            }\n        }\n        \n        return count;\n    }\n}</code></pre>\n<p>Time Complexity: O(nlogn) : for sorting</p>\n<p>Space Complexity: O(1)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a118ae38-7088-46e4-827c-723731b99de3.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"assign-cookies-greedy-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"}],"recommendations":[{"id":1720,"title":"Number Of Rectangles That Can Form The Largest Square - Array - Easy - LeetCode","imageUrl":"icon_a3758d97-0c9c-4e59-860a-b2f31b1f95ab.jpg","dateCreated":"2021-01-18T12:11:37.997Z","dateModified":"2021-01-18T12:11:43.515Z","contributedBy":"sumitc91","content":"You are given an array rectangles where rectangles[i] = [li, wi] represents the ith rectangle of length li and width wi.\nYou can cut the ith rectangle to form a square with a side length of k if both k &lt;= li and k &lt;= wi. For example, if you have a rectangle [4,6], you can cut it to g","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a3758d97-0c9c-4e59-860a-b2f31b1f95ab.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"number-of-rectangles-that-can-form-the-largest-square-array-easy-leetcode","total":0},{"id":1718,"title":"Calculate Money in Leetcode Bank - Maths - Easy - LeetCode","imageUrl":"icon_8f7ac85a-3434-4f99-ba13-6b64b13831b7.jpg","dateCreated":"2021-01-10T05:17:33.968Z","dateModified":"2021-01-10T05:17:40.265Z","contributedBy":"sumitc91","content":"Hercy wants to save money for his first car. He puts money in the Leetcode bank every day.\nHe starts by putting in $1 on Monday, the first day. Every day from Tuesday to Sunday, he will put in $1 more than the day before. On every subsequent Monday, he will put in $1 more than the previous","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/8f7ac85a-3434-4f99-ba13-6b64b13831b7.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"maths","slug":"maths"}],"slug":"calculate-money-in-leetcode-bank-maths-easy-leetcode","total":0},{"id":1708,"title":"Richest Customer Wealth - String - Easy - LeetCode","imageUrl":"icon_030389b7-ce6f-4ad2-b65b-dcfe84bba591.jpg","dateCreated":"2020-12-02T09:18:51.882Z","dateModified":"2020-12-02T09:18:55.989Z","contributedBy":"sumitc91","content":"You are given an m x n integer grid accounts where accounts[i][j] is the amount of money the i​​​​​​​​​​​th​​​​ customer has in the j​​​​​​​​​​​th​​​​ bank. Return the wealth that the richest customer has.\nA customer's wealth is the amount of money they have in all their bank accounts. The","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/030389b7-ce6f-4ad2-b65b-dcfe84bba591.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"richest-customer-wealth-string-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}