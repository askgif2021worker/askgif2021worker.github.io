{"id":1547,"title":"Lemonade Change - Greedy - Easy - LeetCode","imageUrl":"icon_0a82ebf9-36e4-4238-904f-94c734cc7c37.jpg","dateCreated":"2020-10-05T04:57:40.267Z","dateModified":"2020-10-05T04:59:25.263Z","contributedBy":"sumitc91","content":"<p>At a lemonade stand, each lemonade costs $5.&nbsp;</p>\n<p>Customers are standing in a queue to buy from you, and order one at a time (in the order specified by bills).</p>\n<p>Each customer will only buy one lemonade and pay with either a $5, $10, or $20 bill. &nbsp;You must provide the correct change to each customer, so that the net transaction is that the customer pays $5.</p>\n<p>Note that you don't have any change in hand at first.</p>\n<p>Return true if and only if you can provide every customer with correct change.</p>\n<p>&nbsp;</p>\n<p>Example 1:</p>\n<p>Input: [5,5,5,10,20]<br />Output: true<br />Explanation:&nbsp;<br />From the first 3 customers, we collect three $5 bills in order.<br />From the fourth customer, we collect a $10 bill and give back a $5.<br />From the fifth customer, we give a $10 bill and a $5 bill.<br />Since all customers got correct change, we output true.<br />Example 2:</p>\n<p>Input: [5,5,10]<br />Output: true<br />Example 3:</p>\n<p>Input: [10,10]<br />Output: false<br />Example 4:</p>\n<p>Input: [5,5,10,10,20]<br />Output: false<br />Explanation:&nbsp;<br />From the first two customers in order, we collect two $5 bills.<br />For the next two customers in order, we collect a $10 bill and give back a $5 bill.<br />For the last customer, we can't give change of $15 back because we only have two $10 bills.<br />Since not every customer received correct change, the answer is false.<br />&nbsp;</p>\n<p>Note:</p>\n<p>0 &lt;= bills.length &lt;= 10000<br />bills[i] will be either 5, 10, or 20.</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    public bool LemonadeChange(int[] bills) {\n        int fiveCoinCount = 0;\n        int tenCoinCount = 0;\n        for(int i=0;i&lt;bills.Length;i++){\n            if(bills[i]==5){\n                fiveCoinCount++;\n            }\n            else if(bills[i]==10){\n                if(fiveCoinCount&gt;0){\n                    fiveCoinCount--;\n                    tenCoinCount++;\n                }\n                else{\n                    return false;\n                }\n            }\n            else{\n                if(tenCoinCount&gt;0 &amp;&amp; fiveCoinCount&gt;0){\n                    tenCoinCount--;\n                    fiveCoinCount--;\n                }\n                else if(fiveCoinCount&gt;2){\n                    fiveCoinCount-=3;\n                }\n                else{\n                    return false;\n                }\n            }\n        }\n        \n        return true;\n    }\n}</code></pre>\n<p>Time Complexity: O(n)</p>\n<p>Space Complexity: O(1)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/0a82ebf9-36e4-4238-904f-94c734cc7c37.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"lemonade-change-greedy-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"greedy","slug":"greedy"},{"name":"leetcode","slug":"leetcode"}],"recommendations":[{"id":1720,"title":"Number Of Rectangles That Can Form The Largest Square - Array - Easy - LeetCode","imageUrl":"icon_a3758d97-0c9c-4e59-860a-b2f31b1f95ab.jpg","dateCreated":"2021-01-18T12:11:37.997Z","dateModified":"2021-01-18T12:11:43.515Z","contributedBy":"sumitc91","content":"You are given an array rectangles where rectangles[i] = [li, wi] represents the ith rectangle of length li and width wi.\nYou can cut the ith rectangle to form a square with a side length of k if both k &lt;= li and k &lt;= wi. For example, if you have a rectangle [4,6], you can cut it to g","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a3758d97-0c9c-4e59-860a-b2f31b1f95ab.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"number-of-rectangles-that-can-form-the-largest-square-array-easy-leetcode","total":0},{"id":1707,"title":"Maximum Repeating Substring - String - Easy - LeetCode","imageUrl":"icon_6c2a7180-5aaa-46ea-9f10-28d9ae8d0784.jpg","dateCreated":"2020-12-02T09:09:18.46Z","dateModified":"2020-12-02T09:09:24.372Z","contributedBy":"sumitc91","content":"For a string sequence, a string word is k-repeating if word concatenated k times is a substring of sequence. The word's maximum k-repeating value is the highest value k where word is k-repeating in sequence. If word is not a substring of sequence, word's maximum k-repeating value is 0.\nGiv","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/6c2a7180-5aaa-46ea-9f10-28d9ae8d0784.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"string","slug":"string"}],"slug":"maximum-repeating-substring-string-easy-leetcode","total":0},{"id":1615,"title":"License Key Formatting - String - Easy - LeetCode","imageUrl":"icon_168f3a9d-b3aa-4758-a48d-b2e53a3ad538.jpg","dateCreated":"2020-10-17T04:06:23.384Z","dateModified":"2020-10-17T04:06:32.538Z","contributedBy":"sumitc91","content":"You are given a license key represented as a string S which consists of only alphanumeric character and dashes. The string is separated into N+1 groups by N dashes.\nGiven a number K, we would want to reformat the strings such that each group contains exactly K characters, except for the fi","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/168f3a9d-b3aa-4758-a48d-b2e53a3ad538.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"string","slug":"string"}],"slug":"license-key-formatting-string-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}