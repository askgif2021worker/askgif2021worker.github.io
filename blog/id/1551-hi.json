{"id":1551,"title":"Minimum Subsequence in Non-Increasing Order - Greedy - Easy - LeetCode","imageUrl":"icon_a0ff0d50-ca28-4729-b010-c2bbb58d96e1.jpg","dateCreated":"2020-10-05T09:35:24.446Z","dateModified":"2020-10-05T09:35:37.731Z","contributedBy":"sumitc91","content":"<p>Given the array nums, obtain a subsequence of the array whose sum of elements is strictly greater than the sum of the non included elements in such subsequence.&nbsp;</p>\n<p>If there are multiple solutions, return the subsequence with minimum size and if there still exist multiple solutions, return the subsequence with the maximum total sum of all its elements. A subsequence of an array can be obtained by erasing some (possibly zero) elements from the array.&nbsp;</p>\n<p>Note that the solution with the given constraints is guaranteed to be unique. Also return the answer sorted in non-increasing order.</p>\n<p>&nbsp;</p>\n<p>Example 1:</p>\n<p>Input: nums = [4,3,10,9,8]<br />Output: [10,9]&nbsp;<br />Explanation: The subsequences [10,9] and [10,8] are minimal such that the sum of their elements is strictly greater than the sum of elements not included, however, the subsequence [10,9] has the maximum total sum of its elements.&nbsp;<br />Example 2:</p>\n<p>Input: nums = [4,4,7,6,7]<br />Output: [7,7,6]&nbsp;<br />Explanation: The subsequence [7,7] has the sum of its elements equal to 14 which is not strictly greater than the sum of elements not included (14 = 4 + 4 + 6). Therefore, the subsequence [7,6,7] is the minimal satisfying the conditions. Note the subsequence has to returned in non-decreasing order. &nbsp;<br />Example 3:</p>\n<p>Input: nums = [6]<br />Output: [6]<br />&nbsp;</p>\n<p>Constraints:</p>\n<p>1 &lt;= nums.length &lt;= 500<br />1 &lt;= nums[i] &lt;= 100</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    public IList&lt;int&gt; MinSubsequence(int[] nums) {\n        Array.Sort(nums);\n        int sum = 0;\n        for(int i=0;i&lt;nums.Length;i++){\n            sum+=nums[i];            \n        }\n        \n        int halfSum = sum/2;\n        sum = 0;\n        var res = new List&lt;int&gt;();        \n        for(int i=nums.Length-1;i&gt;=0 &amp;&amp; sum &lt;= halfSum;i--){\n            sum+=nums[i];\n            res.Add(nums[i]);\n        }\n        \n        return res;\n    }\n}</code></pre>\n<p>Time Complexity: O(nlogn)</p>\n<p>Space Complexity: O(1)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a0ff0d50-ca28-4729-b010-c2bbb58d96e1.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"minimum-subsequence-in-non-increasing-order-greedy-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"greedy","slug":"greedy"},{"name":"leetcode","slug":"leetcode"}],"recommendations":[{"id":1722,"title":"Latest Time by Replacing Hidden Digits - String - Easy - LeetCode","imageUrl":"icon_370ef122-a2da-4596-8095-2a518775a5cb.jpg","dateCreated":"2021-01-26T09:27:11.691Z","dateModified":"2021-01-26T09:27:17.976Z","contributedBy":"sumitc91","content":"You are given a string time in the form of hh:mm, where some of the digits in the string are hidden (represented by ?).\nThe valid times are those inclusively between 00:00 and 23:59.\nReturn the latest valid time you can get from time by replacing the hidden digits.\n&nbsp;","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/370ef122-a2da-4596-8095-2a518775a5cb.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"string","slug":"string"}],"slug":"latest-time-by-replacing-hidden-digits-string-easy-leetcode","total":0},{"id":1714,"title":"Number of Students Unable to Eat Lunch - String - Easy - LeetCode","imageUrl":"icon_dad639fe-8bb2-4bcd-ba3d-af4e7cb5299b.jpg","dateCreated":"2021-01-06T10:28:07.741Z","dateModified":"2021-01-06T10:28:12.288Z","contributedBy":"sumitc91","content":"The school cafeteria offers circular and square sandwiches at lunch break, referred to by numbers 0 and 1 respectively. All students stand in a queue. Each student either prefers square or circular sandwiches.\nThe number of sandwiches in the cafeteria is equal to the number of students. Th","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/dad639fe-8bb2-4bcd-ba3d-af4e7cb5299b.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"string","slug":"string"}],"slug":"number-of-students-unable-to-eat-lunch-string-easy-leetcode","total":0},{"id":1704,"title":"Shortest Unsorted Continuous Subarray - Array - Medium - LeetCode","imageUrl":"icon_8ae155ae-c65a-4be5-8bc2-0e72f6588a6a.jpg","dateCreated":"2020-11-21T08:37:40.528Z","dateModified":"2020-11-21T08:37:59.841Z","contributedBy":"sumitc91","content":"Given an integer array nums, you need to find one continuous subarray that if you only sort this subarray in ascending order, then the whole array will be sorted in ascending order.\nReturn the shortest such subarray and output its length.\n&nbsp;\nExample 1:\nInput: nums ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/8ae155ae-c65a-4be5-8bc2-0e72f6588a6a.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"shortest-unsorted-continuous-subarray-array-medium-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}