{"id":1557,"title":"Number of 1 Bits - Easy - LeetCode","imageUrl":"icon_81eaa719-b550-436a-8b77-e8698457ee39.jpg","dateCreated":"2020-10-05T12:39:20.373Z","dateModified":"2020-10-05T12:39:37.539Z","contributedBy":"sumitc91","content":"<p>Write a function that takes an unsigned integer and return the number of '1' bits it has (also known as the Hamming weight).</p>\n<p>&nbsp;</p>\n<p>Example 1:</p>\n<p>Input: 00000000000000000000000000001011<br />Output: 3<br />Explanation: The input binary string 00000000000000000000000000001011 has a total of three '1' bits.<br />Example 2:</p>\n<p>Input: 00000000000000000000000010000000<br />Output: 1<br />Explanation: The input binary string 00000000000000000000000010000000 has a total of one '1' bit.<br />Example 3:</p>\n<p>Input: 11111111111111111111111111111101<br />Output: 31<br />Explanation: The input binary string 11111111111111111111111111111101 has a total of thirty one '1' bits.<br />&nbsp;</p>\n<p>Note:</p>\n<p>Note that in some languages such as Java, there is no unsigned integer type. In this case, the input will be given as signed integer type and should not affect your implementation, as the internal binary representation of the integer is the same whether it is signed or unsigned.<br />In Java, the compiler represents the signed integers using 2's complement notation. Therefore, in Example 3 above the input represents the signed integer -3.</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    public int HammingWeight(uint n) {\n        uint count = 0;\n        for(int i=0;i&lt;32;i++){\n            count+=(n&amp;1);\n            n=n&gt;&gt;1;\n        }\n        \n        return (int)count;\n    }\n}</code></pre>\n<p>Time Complexity: O(logn) which is the number of binary digits</p>\n<p>Space Complexity: O(1)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/81eaa719-b550-436a-8b77-e8698457ee39.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"number-of-1-bits-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"bit-manipulation","slug":"bit-manipulation"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"recommendations":[{"id":1709,"title":"Goal Parser Interpretation - String - Easy - LeetCode","imageUrl":"icon_1a301e38-c33f-42ee-b91b-84f1471554f8.jpg","dateCreated":"2020-12-07T04:02:11.892Z","dateModified":"2020-12-07T04:02:17.242Z","contributedBy":"sumitc91","content":"You own a Goal Parser that can interpret a string command. The command consists of an alphabet of \"G\", \"()\" and/or \"(al)\" in some order. The Goal Parser will interpret \"G\" as the string \"G\", \"()\" as the string \"o\", and \"(al)\" as the string \"al\". The interpreted strings are then concatenated in th","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/1a301e38-c33f-42ee-b91b-84f1471554f8.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"string","slug":"string"}],"slug":"goal-parser-interpretation-string-easy-leetcode","total":0},{"id":1704,"title":"Shortest Unsorted Continuous Subarray - Array - Medium - LeetCode","imageUrl":"icon_8ae155ae-c65a-4be5-8bc2-0e72f6588a6a.jpg","dateCreated":"2020-11-21T08:37:40.528Z","dateModified":"2020-11-21T08:37:59.841Z","contributedBy":"sumitc91","content":"Given an integer array nums, you need to find one continuous subarray that if you only sort this subarray in ascending order, then the whole array will be sorted in ascending order.\nReturn the shortest such subarray and output its length.\n&nbsp;\nExample 1:\nInput: nums ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/8ae155ae-c65a-4be5-8bc2-0e72f6588a6a.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"shortest-unsorted-continuous-subarray-array-medium-leetcode","total":0},{"id":1642,"title":"Combination Sum II - Array - Medium - LeetCode","imageUrl":"icon_134b4baa-680a-45e5-b0df-c627789e2d42.jpg","dateCreated":"2020-10-25T16:13:32.074Z","dateModified":"2020-10-25T16:13:43.44Z","contributedBy":"sumitc91","content":"Given a collection of candidate numbers (candidates) and a target number (target), find all unique combinations in candidates where the candidate numbers sum to target.\nEach number in candidates may only be used once in the combination.\nNote: The solution set must not contain duplic","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/134b4baa-680a-45e5-b0df-c627789e2d42.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"combination-sum-ii-array-medium-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}