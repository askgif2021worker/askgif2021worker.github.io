{"id":1559,"title":"Convert a Number to Hexadecimal - Bit Manipulation - Easy - LeetCode","imageUrl":"icon_4f47ebec-4f69-46d8-99f1-1eda50d9e297.jpg","dateCreated":"2020-10-06T06:35:39.592Z","dateModified":"2020-10-06T06:35:50.179Z","contributedBy":"sumitc91","content":"<p>Given an integer, write an algorithm to convert it to hexadecimal. For negative integer, two&rsquo;s complement method is used.</p>\n<p>Note:</p>\n<p>All letters in hexadecimal (a-f) must be in lowercase.<br />The hexadecimal string must not contain extra leading 0s. If the number is zero, it is represented by a single zero character '0'; otherwise, the first character in the hexadecimal string will not be the zero character.<br />The given number is guaranteed to fit within the range of a 32-bit signed integer.<br />You must not use any method provided by the library which converts/formats the number to hex directly.<br />Example 1:</p>\n<p>Input:<br />26</p>\n<p>Output:<br />\"1a\"<br />Example 2:</p>\n<p>Input:<br />-1</p>\n<p>Output:<br />\"ffffffff\"</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    public string ToHex(int num) {\n        if(num==0){\n            return \"0\";\n        }\n        \n        var map = new char[]{'0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f'};\n        var arr = new char[8];\n        int index = 7;\n        int sum = 0;\n        int count = 0;\n        for(int i=0;i&lt;32;i++){\n            sum+=(int)Math.Pow(2,i%4)*(num&amp;1);\n            num=num&gt;&gt;1;\n            count++;\n            if(count%4==0){\n                arr[index]=map[sum];\n                sum=0;              \n                index--;\n            }\n        }\n        \n        var sb = new StringBuilder();\n        bool digitStarted = false;\n        for(int i=0;i&lt;arr.Length;i++){\n            if(arr[i]!='0' &amp;&amp; !digitStarted){\n                digitStarted = true;\n                sb.Append(arr[i]);\n            }\n            else if(digitStarted){\n                sb.Append(arr[i]);\n            }\n        }\n        return sb.ToString();\n    }\n}</code></pre>\n<p>Time Complexity: O(n)</p>\n<p>Space Complexity: O(n)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/4f47ebec-4f69-46d8-99f1-1eda50d9e297.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"convert-a-number-to-hexadecimal-bit-manipulation-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"bit-manipulation","slug":"bit-manipulation"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"recommendations":[{"id":1665,"title":"Subsets II - Array - Medium - LeetCode","imageUrl":"icon_aaa8f566-bd39-4867-a4ad-9d2ec8eb9fec.jpg","dateCreated":"2020-11-17T08:34:58.632Z","dateModified":"2020-11-17T08:35:04.765Z","contributedBy":"sumitc91","content":"Given a collection of integers that might contain duplicates, nums, return all possible subsets (the power set).\nNote: The solution set must not contain duplicate subsets.\nExample:\nInput: [1,2,2]<br />Output:<br />[<br />&nbsp; [2],<br />&nbsp; [1],<br />&nbsp; [1,2,2],<br />","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/aaa8f566-bd39-4867-a4ad-9d2ec8eb9fec.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"subsets-ii-array-medium-leetcode","total":0},{"id":1636,"title":"Two Strings - HashMap - Easy - HackerRank","imageUrl":"icon_b574251c-e9c0-4be6-9bc1-7c86f8da1806.jpg","dateCreated":"2020-10-24T07:22:16.972Z","dateModified":"2020-10-24T07:22:22.952Z","contributedBy":"sumitc91","content":"Given two strings, determine if they share a common substring. A substring may be as small as one character.\nFor example, the words \"a\", \"and\", \"art\" share the common substring . The words \"be\" and \"cat\" do not share a substring.\nFunction Description\nComplete the function two","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/b574251c-e9c0-4be6-9bc1-7c86f8da1806.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"hackerrank","slug":"hackerrank"},{"name":"hash-table","slug":"hash-table"}],"slug":"two-strings-hashmap-easy-hackerrank","total":0},{"id":1602,"title":"Nim Game - Brainteaser - Easy - LeetCode","imageUrl":"icon_2d168a53-ceb7-4679-bee4-38527d6e5223.jpg","dateCreated":"2020-10-15T09:30:33.368Z","dateModified":"2020-10-15T09:32:06.259Z","contributedBy":"sumitc91","content":"You are playing the following Nim Game with your friend:\nInitially, there is a heap of stones on the table.<br />You and your friend will alternate taking turns, and you go first.<br />On each turn, the person whose turn it is will remove 1 to 3 stones from the heap.<br />The one who remov","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/2d168a53-ceb7-4679-bee4-38527d6e5223.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"दिमागी-कसरत","slug":"brainteaser"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"nim-game-brainteaser-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}