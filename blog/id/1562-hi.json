{"id":1562,"title":"Binary Number with Alternating Bits - Bit Manipulation - Easy - LeetCode","imageUrl":"icon_ddcad4a4-fb4d-4431-a952-364d812a1226.jpg","dateCreated":"2020-10-06T09:24:47.325Z","dateModified":"2020-10-06T09:24:58.56Z","contributedBy":"sumitc91","content":"<p>Given a positive integer, check whether it has alternating bits: namely, if two adjacent bits will always have different values.</p>\n<p>&nbsp;</p>\n<p>Example 1:</p>\n<p>Input: n = 5<br />Output: true<br />Explanation: The binary representation of 5 is: 101<br />Example 2:</p>\n<p>Input: n = 7<br />Output: false<br />Explanation: The binary representation of 7 is: 111.<br />Example 3:</p>\n<p>Input: n = 11<br />Output: false<br />Explanation: The binary representation of 11 is: 1011.<br />Example 4:</p>\n<p>Input: n = 2<br />Output: true<br />Explanation: The binary representation of 10 is: 1010.<br />Example 5:</p>\n<p>Input: n = 3<br />Output: false<br />&nbsp;</p>\n<p>Constraints:</p>\n<p>1 &lt;= n &lt;= 231 - 1</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    public bool HasAlternatingBits(int n) {\n        int? prev = null;\n        for(int i=0;i&lt;32 &amp;&amp; n!=0;i++){\n            if(prev==null){\n                prev = (n&amp;1);\n            }\n            else{\n                if(prev == (n&amp;1)){\n                    return false;\n                }\n                prev = (n&amp;1);\n            }\n            \n            n=n&gt;&gt;1;\n        }\n        \n        return true;\n    }\n}</code></pre>\n<p>Time Complexity: O(logn) which corresponds to the count of binary bits.</p>\n<p>Space Complexity: O(1)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/ddcad4a4-fb4d-4431-a952-364d812a1226.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"binary-number-with-alternating-bits-bit-manipulation-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"bit-manipulation","slug":"bit-manipulation"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"recommendations":[{"id":1728,"title":"Minimum Changes To Make Alternating Binary String - String - Easy - LeetCode","imageUrl":"icon_85c66994-0911-4abb-b06f-a20a0a11dcd4.jpg","dateCreated":"2021-03-31T07:22:03.012Z","dateModified":"2021-03-31T07:22:08.602Z","contributedBy":"sumitc91","content":"You are given a string s consisting only of the characters '0' and '1'. In one operation, you can change any '0' to '1' or vice versa.\nThe string is called alternating if no two adjacent characters are equal. For example, the string \"010\" is alternating, while the string \"0100\" is not.","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/85c66994-0911-4abb-b06f-a20a0a11dcd4.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"string","slug":"string"}],"slug":"minimum-changes-to-make-alternating-binary-string-string-easy-leetcode","total":0},{"id":1676,"title":"Product of Array Except Self - Array - Medium - LeetCode","imageUrl":"icon_454cf76b-ed84-4192-9a20-cb564088e9c1.jpg","dateCreated":"2020-11-18T12:44:47.018Z","dateModified":"2020-11-18T12:44:53.26Z","contributedBy":"sumitc91","content":"Given an array nums of n integers where n &gt; 1, &nbsp;return an array output such that output[i] is equal to the product of all the elements of nums except nums[i].\nExample:\nInput: &nbsp;[1,2,3,4]<br />Output: [24,12,8,6]<br />Constraint: It's guaranteed that the product of the el","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/454cf76b-ed84-4192-9a20-cb564088e9c1.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"product-of-array-except-self-array-medium-leetcode","total":0},{"id":1645,"title":"Jump Game - Array - Medium - LeetCode","imageUrl":"icon_a22e7bed-85b5-4837-89ef-0da32c81085c.jpg","dateCreated":"2020-10-28T06:44:43.217Z","dateModified":"2020-10-28T06:44:52.67Z","contributedBy":"sumitc91","content":"Given an array of non-negative integers, you are initially positioned at the first index of the array.\nEach element in the array represents your maximum jump length at that position.\nDetermine if you are able to reach the last index.\n&nbsp;\nExample 1:\nInput: num","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a22e7bed-85b5-4837-89ef-0da32c81085c.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"jump-game-array-medium-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}