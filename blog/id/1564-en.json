{"id":1564,"title":"Number of Steps to Reduce a Number to Zero - Bit Manipulation - Easy - LeetCode","imageUrl":"icon_fd517175-fcc4-4ea1-ab97-525cf26aeabc.jpg","dateCreated":"2020-10-06T09:43:53.011Z","dateModified":"2020-10-06T09:44:13.892Z","contributedBy":"sumitc91","content":"<p>Given a non-negative integer num, return the number of steps to reduce it to zero. If the current number is even, you have to divide it by 2, otherwise, you have to subtract 1 from it.</p>\n<p>&nbsp;</p>\n<p>Example 1:</p>\n<p>Input: num = 14<br />Output: 6<br />Explanation:&nbsp;<br />Step 1) 14 is even; divide by 2 and obtain 7.&nbsp;<br />Step 2) 7 is odd; subtract 1 and obtain 6.<br />Step 3) 6 is even; divide by 2 and obtain 3.&nbsp;<br />Step 4) 3 is odd; subtract 1 and obtain 2.&nbsp;<br />Step 5) 2 is even; divide by 2 and obtain 1.&nbsp;<br />Step 6) 1 is odd; subtract 1 and obtain 0.<br />Example 2:</p>\n<p>Input: num = 8<br />Output: 4<br />Explanation:&nbsp;<br />Step 1) 8 is even; divide by 2 and obtain 4.&nbsp;<br />Step 2) 4 is even; divide by 2 and obtain 2.&nbsp;<br />Step 3) 2 is even; divide by 2 and obtain 1.&nbsp;<br />Step 4) 1 is odd; subtract 1 and obtain 0.<br />Example 3:</p>\n<p>Input: num = 123<br />Output: 12<br />&nbsp;</p>\n<p>Constraints:</p>\n<p>0 &lt;= num &lt;= 10^6</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    public int NumberOfSteps (int num) {\n        if(num==0)\n        {\n            return 0;\n        }\n        \n        int count=0;\n        bool isLastOne = false;\n        for(int i=0;i&lt;32 &amp;&amp; num !=0;i++){\n            if((num&amp;1)==0){\n                //divide by zero\n                count+=1;\n            }\n            else{\n                //substract one and divide by zero\n                count+=2;\n            }\n            isLastOne = (num&amp;1)==1;\n            num=num&gt;&gt;1;\n        }\n        \n        //subtracting 1 in both case of MSB as 1 and 0\n        count-=1;\n        return count;\n    }\n}</code></pre>\n<p>Time Complexity: O(logn) which corresponds to the number of binary bits.</p>\n<p>Space Complexity: O(1)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/fd517175-fcc4-4ea1-ab97-525cf26aeabc.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"number-of-steps-to-reduce-a-number-to-zero-bit-manipulation-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"bit-manipulation","slug":"bit-manipulation"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"recommendations":[{"id":1612,"title":"Delete Duplicate Emails - SQL - Easy - LeetCode","imageUrl":"icon_a8c368b1-ddbd-45ca-96b4-7558b7166a74.jpg","dateCreated":"2020-10-16T11:31:27.16Z","dateModified":"2020-10-16T11:31:37.404Z","contributedBy":"sumitc91","content":"Write a SQL query to delete all duplicate email entries in a table named Person, keeping only unique emails based on its smallest Id.\n+----+------------------+<br />| Id | Email &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />+----+------------------+<br />| 1 &nbsp;| john@example.com |<br","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a8c368b1-ddbd-45ca-96b4-7558b7166a74.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"mysql","slug":"mysql"},{"name":"sql","slug":"sql"}],"slug":"delete-duplicate-emails-sql-easy-leetcode","total":0},{"id":1611,"title":"Tenth Line - Bash - Easy - LeetCode","imageUrl":"icon_2f13c5c6-6e33-47bb-a84b-a78e7452f775.jpg","dateCreated":"2020-10-16T07:52:54.062Z","dateModified":"2020-10-16T07:53:14.702Z","contributedBy":"sumitc91","content":"Given a text file file.txt, print just the 10th line of the file.\nExample:\nAssume that file.txt has the following content:\nLine 1<br />Line 2<br />Line 3<br />Line 4<br />Line 5<br />Line 6<br />Line 7<br />Line 8<br />Line 9<br />Line 10<br />Your script should output the te","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/2f13c5c6-6e33-47bb-a84b-a78e7452f775.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"bash","slug":"bash"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"tenth-line-bash-easy-leetcode","total":0},{"id":1601,"title":"N-th Tribonacci Number - Recursion - Easy - LeetCode","imageUrl":"icon_8864cfe3-0823-418f-867d-6299b93c28bd.jpg","dateCreated":"2020-10-15T09:12:30.383Z","dateModified":"2020-10-15T09:12:56.022Z","contributedBy":"sumitc91","content":"The Tribonacci sequence Tn is defined as follows:&nbsp;\nT0 = 0, T1 = 1, T2 = 1, and Tn+3 = Tn + Tn+1 + Tn+2 for n &gt;= 0.\nGiven n, return the value of Tn.\n&nbsp;\nExample 1:\nInput: n = 4<br />Output: 4<br />Explanation:<br />T_3 = 0 + 1 + 1 = 2<br />T_4 = 1 + 1 ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/8864cfe3-0823-418f-867d-6299b93c28bd.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"dynamic-programming","slug":"dynamic-programming"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"recursion","slug":"recursion"}],"slug":"n-th-tribonacci-number-recursion-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}