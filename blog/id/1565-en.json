{"id":1565,"title":"Same Tree - Tree - Easy - LeetCode","imageUrl":"icon_f30f179e-60ef-425f-aa3f-5d9d343cfe97.jpg","dateCreated":"2020-10-06T12:11:31.252Z","dateModified":"2020-10-06T12:11:43.376Z","contributedBy":"sumitc91","content":"<p>Given two binary trees, write a function to check if they are the same or not.</p>\n<p>Two binary trees are considered the same if they are structurally identical and the nodes have the same value.</p>\n<p>Example 1:</p>\n<p>Input: &nbsp; &nbsp; 1 &nbsp; &nbsp; &nbsp; &nbsp; 1<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; / \\ &nbsp; &nbsp; &nbsp; / \\<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;2 &nbsp; 3 &nbsp; &nbsp; 2 &nbsp; 3</p>\n<p>&nbsp; &nbsp; &nbsp; &nbsp; [1,2,3], &nbsp; [1,2,3]</p>\n<p>Output: true<br />Example 2:</p>\n<p>Input: &nbsp; &nbsp; 1 &nbsp; &nbsp; &nbsp; &nbsp; 1<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; / &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \\<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;2 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 2</p>\n<p>&nbsp; &nbsp; &nbsp; &nbsp; [1,2], &nbsp; &nbsp; [1,null,2]</p>\n<p>Output: false<br />Example 3:</p>\n<p>Input: &nbsp; &nbsp; 1 &nbsp; &nbsp; &nbsp; &nbsp; 1<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; / \\ &nbsp; &nbsp; &nbsp; / \\<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;2 &nbsp; 1 &nbsp; &nbsp; 1 &nbsp; 2</p>\n<p>&nbsp; &nbsp; &nbsp; &nbsp; [1,2,1], &nbsp; [1,1,2]</p>\n<p>Output: false</p>\n<pre class=\"language-csharp\"><code>/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public int val;\n *     public TreeNode left;\n *     public TreeNode right;\n *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\npublic class Solution {\n    public bool IsSameTree(TreeNode p, TreeNode q) {\n        if(p==null &amp; q==null){\n            return true;\n        }\n        if(p==null||q==null){\n            return false;\n        }\n        if(p.val!=q.val){\n            return false;\n        }\n        \n        return IsSameTree(p.left,q.left) &amp;&amp; IsSameTree(p.right,q.right);\n    }\n}</code></pre>\n<p>Time Complexity: O(n)</p>\n<p>Space Complexity: O(1)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/f30f179e-60ef-425f-aa3f-5d9d343cfe97.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"same-tree-tree-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"recommendations":[{"id":1725,"title":"Sum of Unique Elements - Array - Easy - LeetCode","imageUrl":"icon_9e341651-0933-4893-84a8-1d3f65898dda.jpg","dateCreated":"2021-02-13T13:13:53.857Z","dateModified":"2021-02-13T13:13:59.576Z","contributedBy":"sumitc91","content":"You are given an integer array nums. The unique elements of an array are the elements that appear exactly once in the array.\nReturn the sum of all the unique elements of nums.\n&nbsp;\nExample 1:\nInput: nums = [1,2,3,2]<br />Output: 4<br />Explanation: The unique element","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/9e341651-0933-4893-84a8-1d3f65898dda.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"sum-of-unique-elements-array-easy-leetcode","total":0},{"id":1711,"title":"Count of Matches in Tournament - String - Easy - LeetCode","imageUrl":"icon_d4fba4b6-ab89-4548-aaf7-f9918522d7dd.jpg","dateCreated":"2020-12-28T14:11:46.984Z","dateModified":"2020-12-28T14:11:55.184Z","contributedBy":"sumitc91","content":"You are given an integer n, the number of teams in a tournament that has strange rules:\nIf the current number of teams is even, each team gets paired with another team. A total of n / 2 matches are played, and n / 2 teams advance to the next round.<br />If the current number of teams is od","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/d4fba4b6-ab89-4548-aaf7-f9918522d7dd.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"string","slug":"string"}],"slug":"count-of-matches-in-tournament-string-easy-leetcode","total":0},{"id":1617,"title":"Relative Ranks - Array - Easy - LeetCode","imageUrl":"icon_999e367f-6673-49be-9d6a-411dd5e1e1e2.jpg","dateCreated":"2020-10-17T05:30:58.485Z","dateModified":"2020-10-17T05:31:07.765Z","contributedBy":"sumitc91","content":"Given scores of N athletes, find their relative ranks and the people with the top three highest scores, who will be awarded medals: \"Gold Medal\", \"Silver Medal\" and \"Bronze Medal\".\nExample 1:<br />Input: [5, 4, 3, 2, 1]<br />Output: [\"Gold Medal\", \"Silver Medal\", \"Bronze Medal\", \"4\", \"5\"]<","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/999e367f-6673-49be-9d6a-411dd5e1e1e2.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"relative-ranks-array-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}