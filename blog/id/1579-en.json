{"id":1579,"title":"Subtree of Another Tree - Tree - Easy - LeetCode","imageUrl":"icon_048066ef-d215-419f-b675-7fe12d76f496.jpg","dateCreated":"2020-10-07T08:44:06.774Z","dateModified":"2020-10-07T08:44:20.819Z","contributedBy":"sumitc91","content":"<p>Given two non-empty binary trees s and t, check whether tree t has exactly the same structure and node values with a subtree of s. A subtree of s is a tree consists of a node in s and all of this node's descendants. The tree s could also be considered as a subtree of itself.</p>\n<p>Example 1:<br />Given tree s:</p>\n<p>&nbsp; &nbsp; &nbsp;3<br />&nbsp; &nbsp; / \\<br />&nbsp; &nbsp;4 &nbsp; 5<br />&nbsp; / \\<br />&nbsp;1 &nbsp; 2<br />Given tree t:<br />&nbsp; &nbsp;4&nbsp;<br />&nbsp; / \\<br />&nbsp;1 &nbsp; 2<br />Return true, because t has the same structure and node values with a subtree of s.<br />&nbsp;</p>\n<p>Example 2:<br />Given tree s:</p>\n<p>&nbsp; &nbsp; &nbsp;3<br />&nbsp; &nbsp; / \\<br />&nbsp; &nbsp;4 &nbsp; 5<br />&nbsp; / \\<br />&nbsp;1 &nbsp; 2<br />&nbsp; &nbsp; /<br />&nbsp; &nbsp;0<br />Given tree t:<br />&nbsp; &nbsp;4<br />&nbsp; / \\<br />&nbsp;1 &nbsp; 2<br />Return false.<br />&nbsp;</p>\n<pre class=\"language-csharp\"><code>/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public int val;\n *     public TreeNode left;\n *     public TreeNode right;\n *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\npublic class Solution {\n    public bool IsSubtree(TreeNode s, TreeNode t) {\n        if(t==null){\n            return true;\n        }\n        if(s==null &amp;&amp; t!=null){\n            return false;\n        }\n        \n        if(s.val==t.val){\n             if(IsEqual(s.left,t.left) &amp;&amp; IsEqual(s.right,t.right)){\n                 return true;\n             }\n        }\n        \n        return IsSubtree(s.left,t) || IsSubtree(s.right,t);\n    }\n    \n    private bool IsEqual(TreeNode s, TreeNode t){\n        if(s==null &amp;&amp; t == null){\n            return true;\n        }\n        \n        if(s==null || t == null){\n            return false;\n        }\n        \n        if(s.val != t.val){\n            return false;\n        }\n        \n        return IsEqual(s.left,t.left) &amp;&amp; IsEqual(s.right,t.right);\n    }\n}</code></pre>\n<p>Time Complexity: O(2^n)</p>\n<p>Space Complexity: O(1)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/048066ef-d215-419f-b675-7fe12d76f496.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"subtree-of-another-tree-tree-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"recommendations":[{"id":1655,"title":"Sort Colors - Array - Medium - LeetCode","imageUrl":"icon_d14c2a98-a56d-44ac-9a21-2ed77349737c.jpg","dateCreated":"2020-10-31T11:30:17.677Z","dateModified":"2020-10-31T11:30:24.576Z","contributedBy":"sumitc91","content":"Given an array nums with n objects colored red, white, or blue, sort them in-place so that objects of the same color are adjacent, with the colors in the order red, white, and blue.\nHere, we will use the integers 0, 1, and 2 to represent the color red, white, and blue respectively.\n","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/d14c2a98-a56d-44ac-9a21-2ed77349737c.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"sort-colors-array-medium-leetcode","total":0},{"id":1635,"title":"New Year Chaos - Array - Medium - HackerRank","imageUrl":"icon_53eb9e67-4065-4a48-af84-1ab48ec4ee5e.jpg","dateCreated":"2020-10-24T07:14:47.121Z","dateModified":"2020-10-24T07:15:13.568Z","contributedBy":"sumitc91","content":"It's New Year's Day and everyone's in line for the Wonderland rollercoaster ride! There are a number of people queued up, and each person wears a sticker indicating their initial position in the queue. Initial positions increment by &nbsp;from &nbsp;at the front of the line to &nbsp;at the back.<","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/53eb9e67-4065-4a48-af84-1ab48ec4ee5e.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"hackerrank","slug":"hackerrank"},{"name":"medium","slug":"medium"}],"slug":"new-year-chaos-array-medium-hackerrank","total":0},{"id":1633,"title":"3Sum - Array - Medium - LeetCode","imageUrl":"icon_b05855a6-ac78-4434-a041-4682444c76bc.jpg","dateCreated":"2020-10-19T04:39:11.508Z","dateModified":"2020-10-19T04:39:21.598Z","contributedBy":"sumitc91","content":"Given an array nums of n integers, are there elements a, b, c in nums such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.\nNotice that the solution set must not contain duplicate triplets.\n&nbsp;\nExample 1:\nInput: nums = [-1,0,1,2","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/b05855a6-ac78-4434-a041-4682444c76bc.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"3sum-array-medium-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}