{"id":158,"title":"Exception Handling in ASP.NET Core Web API","imageUrl":"5bbe12c4-9545-4bf7-97a6-0a16bd888dac_error-handling.jpg","dateCreated":"2018-11-28T10:55:40.625Z","dateModified":"2018-11-28T10:55:52.68Z","contributedBy":"AskGif","content":"<p>Question:</p>\r\n<p>I started using ASP.NET Core for my new REST API project after using regular ASP.NET Web API for many years. I don't see a good way to handle exceptions in ASP.NET Core Web API. I tried to implement exception handling filter/attribute:</p>\r\n<pre class=\"language-csharp\"><code>public class ErrorHandlingFilter : ExceptionFilterAttribute\r\n{\r\n    public override void OnException(ExceptionContext context)\r\n    {\r\n        HandleExceptionAsync(context);\r\n        context.ExceptionHandled = true;\r\n    }\r\n\r\n    private static void HandleExceptionAsync(ExceptionContext context)\r\n    {\r\n        var exception = context.Exception;\r\n\r\n        if (exception is MyNotFoundException)\r\n            SetExceptionResult(context, exception, HttpStatusCode.NotFound);\r\n        else if (exception is MyUnauthorizedException)\r\n            SetExceptionResult(context, exception, HttpStatusCode.Unauthorized);\r\n        else if (exception is MyException)\r\n            SetExceptionResult(context, exception, HttpStatusCode.BadRequest);\r\n        else\r\n            SetExceptionResult(context, exception, HttpStatusCode.InternalServerError);\r\n    }\r\n\r\n    private static void SetExceptionResult(\r\n        ExceptionContext context, \r\n        Exception exception, \r\n        HttpStatusCode code)\r\n    {\r\n        context.Result = new JsonResult(new ApiResponse(exception))\r\n        {\r\n            StatusCode = (int)code\r\n        };\r\n    }\r\n}</code></pre>\r\n<p><span style=\"color: #242729; font-family: Arial, 'Helvetica Neue', Helvetica, sans-serif; font-size: 15px;\">And here is my Startup filter registration:</span></p>\r\n<pre class=\"language-csharp\"><code>services.AddMvc(options =&gt;\r\n{\r\n    options.Filters.Add(new AuthorizationFilter());\r\n    options.Filters.Add(new ErrorHandlingFilter());\r\n});</code></pre>\r\n<p>The issue I was having is that when exception occurred in my AuthorizationFilter it's not being handled by ErrorHandlingFilter. I was expecting it to be caught there just like it worked with old ASP.NET Web API.</p>\r\n<p>&nbsp;</p>\r\n<p>So how can I catch all application exceptions as well as any exceptions from Action Filters?</p>\r\n<p>&nbsp;</p>\r\n<p>Solution:</p>\r\n<p>&nbsp;</p>\r\n<p>Exception Handling Middleware</p>\r\n<p>After many experiments with different exception handling approaches I ended up using middleware. It worked the best for my ASP.NET Core Web API application. It handles application exceptions as well as exceptions from filters and I have full control over exception handling and creating a response json. Here is my exception handling middleware:</p>\r\n<pre class=\"language-csharp\"><code>public class ErrorHandlingMiddleware\r\n{\r\n    private readonly RequestDelegate next;\r\n\r\n    public ErrorHandlingMiddleware(RequestDelegate next)\r\n    {\r\n        this.next = next;\r\n    }\r\n\r\n    public async Task Invoke(HttpContext context /* other dependencies */)\r\n    {\r\n        try\r\n        {\r\n            await next(context);\r\n        }\r\n        catch (Exception ex)\r\n        {\r\n            await HandleExceptionAsync(context, ex);\r\n        }\r\n    }\r\n\r\n    private static Task HandleExceptionAsync(HttpContext context, Exception exception)\r\n    {\r\n        var code = HttpStatusCode.InternalServerError; // 500 if unexpected\r\n\r\n        if      (exception is MyNotFoundException)     code = HttpStatusCode.NotFound;\r\n        else if (exception is MyUnauthorizedException) code = HttpStatusCode.Unauthorized;\r\n        else if (exception is MyException)             code = HttpStatusCode.BadRequest;\r\n\r\n        var result = JsonConvert.SerializeObject(new { error = exception.Message });\r\n        context.Response.ContentType = \"application/json\";\r\n        context.Response.StatusCode = (int)code;\r\n        return context.Response.WriteAsync(result);\r\n    }\r\n}</code></pre>\r\n<p>Register it before MVC in Startup class:</p>\r\n<pre class=\"language-csharp\"><code>app.UseMiddleware(typeof(ErrorHandlingMiddleware));\r\n\r\napp.UseMvc();</code></pre>\r\n<p>Here is an example of exception response:</p>\r\n<pre class=\"language-csharp\"><code>{ \"error\": \"Authentication token is not valid.\" }</code></pre>\r\n<p>You can add stack trace, exception type name, error codes or anything you want to it. Very flexible.</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/5bbe12c4-9545-4bf7-97a6-0a16bd888dac_error-handling.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"exception-handling-in-asp.net-core-web-api","tags":[{"name":"exception","slug":"exception"},{"name":"web-services","slug":"web-services"},{"name":"web-api","slug":"web-api"},{"name":"asp-dot-net","slug":"asp-dot-net"},{"name":"dotnet-core","slug":"dotnet-core"}],"recommendations":[{"id":406,"title":"Nginx Reverse Proxy to ASP.NET Core In Separate Docker Containers","imageUrl":"449e862c-42ac-4a0f-9de9-cc740bd72632_docker-kestral.jpg","dateCreated":"2019-06-25T02:38:46.733Z","dateModified":"2019-06-26T08:33:11.276Z","contributedBy":"AskGif","content":"The <a title=\"Nginx Reverse Proxy to ASP.NET Core &ndash; In Same Docker Container\" href=\"../../../../blog/405/nginx-reverse-proxy-to-asp-net-core-in-same-docker-container/\" target=\"_blank\" rel=\"noopener\">previous blog post (Nginx Reverse Proxy to ASP.NET Core &ndash; In Same Docker Container)</a","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/449e862c-42ac-4a0f-9de9-cc740bd72632_docker-kestral.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"docker","slug":"docker"},{"name":"dotnet-core","slug":"dotnet-core"},{"name":"nginx","slug":"nginx"}],"slug":"nginx-reverse-proxy-to-asp.net-core-in-separate-docker-containers","total":0},{"id":404,"title":"Hosting ASP.NET Core in Docker","imageUrl":"f952156f-643a-4dff-8c46-88129bed8ede_dockerise-aspnetcore-app.jpg","dateCreated":"2019-06-24T15:35:42.674Z","dateModified":"2019-06-25T02:57:20.863Z","contributedBy":"AskGif","content":"The containerization trend has been growing for a while now in the industry. The idea is to &ldquo;containerize&rdquo; (or package) any application into a well-defined container. This allows the same packaged application to be deployed to run on any infrastructure.\r\n&nbsp;\r\nIn other","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/f952156f-643a-4dff-8c46-88129bed8ede_dockerise-aspnetcore-app.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"docker","slug":"docker"},{"name":"asp-dot-net","slug":"asp-dot-net"},{"name":"dotnet-core","slug":"dotnet-core"},{"name":"nginx","slug":"nginx"}],"slug":"hosting-asp.net-core-in-docker","total":0},{"id":147,"title":"Upload an image on Amazon S3 using C# in .net MVC 4.5 / Core 2.1?","imageUrl":"e4f724bc-e4de-46a9-b9a6-ca64de2af932_aws-s3.jpeg","dateCreated":"2018-11-06T05:25:11.052Z","dateModified":"2018-11-06T05:25:32.345Z","contributedBy":"AskGif","content":"Query:\r\nI want to upload and manage images on my Amazon S3 server. is there any c# plugin already available for the same? I'm using .net MVC 4.5 framework.\r\nI tried from the below link Upload an Object Using the AWS SDK for .NET\r\n<a title=\"http://docs.aws.amazon.com/AmazonS3/","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/e4f724bc-e4de-46a9-b9a6-ca64de2af932_aws-s3.jpeg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"amazon-web-services","slug":"amazon-web-services"},{"name":"dot-net","slug":"dot-net"},{"name":"aws","slug":"aws"},{"name":"c-sharp","slug":"c-sharp"},{"name":"asp-dot-net","slug":"asp-dot-net"},{"name":"amazon-s3","slug":"amazon-s3"}],"slug":"upload-an-image-on-amazon-s3-using-c-in-.net-mvc-4.5-core-2.1","total":0},{"id":143,"title":"How to Convert given bytes in KB, MB, GB etc?","imageUrl":"2942acea-4a45-42f6-9fa6-fb552e182169_storage.jpg","dateCreated":"2018-10-25T05:32:57.852Z","dateModified":"2018-10-25T05:34:56.322Z","contributedBy":"AskGif","content":"How to calculate total bytes available in particular folder and I want to convert the total bytes available to total bytes available in KB, MB, GB etc?\r\nif you are calculating total bytes then you can use the following function to find out the respective total bytes in KB, MB, GB, TB etc.<","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/2942acea-4a45-42f6-9fa6-fb552e182169_storage.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"c-sharp","slug":"c-sharp"},{"name":"dot-net","slug":"dot-net"},{"name":"questions","slug":"questions"},{"name":"asp-dot-net","slug":"asp-dot-net"}],"slug":"how-to-convert-given-bytes-in-kb-mb-gb-etc","total":0}]}