{"id":1580,"title":"N-ary Tree Preorder Traversal - Tree - Easy - LeetCode","imageUrl":"icon_552f3a01-1d02-4d03-9aba-f24879032a40.jpg","dateCreated":"2020-10-07T08:50:03.683Z","dateModified":"2020-10-07T08:50:12.614Z","contributedBy":"sumitc91","content":"<p>Given an n-ary tree, return the preorder traversal of its nodes' values.</p>\n<p>Nary-Tree input serialization is represented in their level order traversal, each group of children is separated by the null value (See examples).</p>\n<p>&nbsp;</p>\n<p>Follow up:</p>\n<p>Recursive solution is trivial, could you do it iteratively?</p>\n<p>&nbsp;</p>\n<p>Example 1:</p>\n<p>&nbsp;</p>\n<p>Input: root = [1,null,3,2,4,null,5,6]<br />Output: [1,3,5,6,2,4]<br />Example 2:</p>\n<p>&nbsp;</p>\n<p>Input: root = [1,null,2,3,4,5,null,null,6,7,null,8,null,9,10,null,null,11,null,12,null,13,null,null,14]<br />Output: [1,2,3,6,7,11,14,4,8,12,5,9,13,10]<br />&nbsp;</p>\n<p>Constraints:</p>\n<p>The height of the n-ary tree is less than or equal to 1000<br />The total number of nodes is between [0, 10^4]</p>\n<pre class=\"language-csharp\"><code>/*\n// Definition for a Node.\npublic class Node {\n    public int val;\n    public IList&lt;Node&gt; children;\n\n    public Node() {}\n\n    public Node(int _val) {\n        val = _val;\n    }\n\n    public Node(int _val,IList&lt;Node&gt; _children) {\n        val = _val;\n        children = _children;\n    }\n}\n*/\n\npublic class Solution {\n    IList&lt;int&gt; result = new List&lt;int&gt;();\n    public IList&lt;int&gt; Preorder(Node root) {\n        if(root==null){\n            return result;\n        }\n        result.Add(root.val);\n        foreach(var child in root.children){\n            Preorder(child);\n        }\n        \n        return result;\n    }\n}</code></pre>\n<p>Time Complexity: O(n)</p>\n<p>Space Complexity: O(1)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/552f3a01-1d02-4d03-9aba-f24879032a40.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"n-ary-tree-preorder-traversal-tree-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"recommendations":[{"id":1617,"title":"Relative Ranks - Array - Easy - LeetCode","imageUrl":"icon_999e367f-6673-49be-9d6a-411dd5e1e1e2.jpg","dateCreated":"2020-10-17T05:30:58.485Z","dateModified":"2020-10-17T05:31:07.765Z","contributedBy":"sumitc91","content":"Given scores of N athletes, find their relative ranks and the people with the top three highest scores, who will be awarded medals: \"Gold Medal\", \"Silver Medal\" and \"Bronze Medal\".\nExample 1:<br />Input: [5, 4, 3, 2, 1]<br />Output: [\"Gold Medal\", \"Silver Medal\", \"Bronze Medal\", \"4\", \"5\"]<","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/999e367f-6673-49be-9d6a-411dd5e1e1e2.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"relative-ranks-array-easy-leetcode","total":0},{"id":1611,"title":"Tenth Line - Bash - Easy - LeetCode","imageUrl":"icon_2f13c5c6-6e33-47bb-a84b-a78e7452f775.jpg","dateCreated":"2020-10-16T07:52:54.062Z","dateModified":"2020-10-16T07:53:14.702Z","contributedBy":"sumitc91","content":"Given a text file file.txt, print just the 10th line of the file.\nExample:\nAssume that file.txt has the following content:\nLine 1<br />Line 2<br />Line 3<br />Line 4<br />Line 5<br />Line 6<br />Line 7<br />Line 8<br />Line 9<br />Line 10<br />Your script should output the te","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/2f13c5c6-6e33-47bb-a84b-a78e7452f775.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"bash","slug":"bash"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"tenth-line-bash-easy-leetcode","total":0},{"id":1593,"title":"Range Sum of BST - Tree - Easy - LeetCode","imageUrl":"icon_2d446765-9ada-4072-93c3-eedfb56f7794.jpg","dateCreated":"2020-10-09T08:49:41.585Z","dateModified":"2020-10-09T08:49:55.954Z","contributedBy":"sumitc91","content":"Given the root node of a binary search tree, return the sum of values of all nodes with value between L and R (inclusive).\nThe binary search tree is guaranteed to have unique values.\n&nbsp;\nExample 1:\nInput: root = [10,5,15,3,7,null,18], L = 7, R = 15<br />Output: 32<b","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/2d446765-9ada-4072-93c3-eedfb56f7794.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"range-sum-of-bst-tree-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}