{"id":1606,"title":"Combine Two Tables - Sql - Easy - LeetCode","imageUrl":"icon_88b1c8bf-74b6-45d3-8314-cbd4ac4ead29.jpg","dateCreated":"2020-10-16T05:53:11.599Z","dateModified":"2020-10-16T05:53:36.309Z","contributedBy":"sumitc91","content":"<p>Write a SQL query for a report that provides the following information for each person in the Person table, regardless if there is an address for each of those people:</p>\n<p>Table: Person</p>\n<p>+-------------+---------+<br />| Column Name | Type &nbsp; &nbsp;|<br />+-------------+---------+<br />| PersonId &nbsp; &nbsp;| int &nbsp; &nbsp; |<br />| FirstName &nbsp; | varchar |<br />| LastName &nbsp; &nbsp;| varchar |<br />+-------------+---------+<br />PersonId is the primary key column for this table.<br />Table: Address</p>\n<p>+-------------+---------+<br />| Column Name | Type &nbsp; &nbsp;|<br />+-------------+---------+<br />| AddressId &nbsp; | int &nbsp; &nbsp; |<br />| PersonId &nbsp; &nbsp;| int &nbsp; &nbsp; |<br />| City &nbsp; &nbsp; &nbsp; &nbsp;| varchar |<br />| State &nbsp; &nbsp; &nbsp; | varchar |<br />+-------------+---------+<br />AddressId is the primary key column for this table.</p>\n<p>&nbsp;</p>\n<pre class=\"language-javascript\"><code># Write your MySQL query statement below\nSelect p.FirstName, p.LastName, a.City, a.State From Person p Left Join Address a On p.PersonId = a.PersonId;</code></pre>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/5b6e96ac-0881-4845-bd1a-6f2f1cbcf99e.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"combine-two-tables-sql-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"mysql","slug":"mysql"},{"name":"sql","slug":"sql"}],"recommendations":[{"id":1725,"title":"Sum of Unique Elements - Array - Easy - LeetCode","imageUrl":"icon_9e341651-0933-4893-84a8-1d3f65898dda.jpg","dateCreated":"2021-02-13T13:13:53.857Z","dateModified":"2021-02-13T13:13:59.576Z","contributedBy":"sumitc91","content":"You are given an integer array nums. The unique elements of an array are the elements that appear exactly once in the array.\nReturn the sum of all the unique elements of nums.\n&nbsp;\nExample 1:\nInput: nums = [1,2,3,2]<br />Output: 4<br />Explanation: The unique element","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/9e341651-0933-4893-84a8-1d3f65898dda.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"sum-of-unique-elements-array-easy-leetcode","total":0},{"id":1650,"title":"Unique Paths - Array - Medium - LeetCode","imageUrl":"icon_7d520a0b-1d85-4323-8864-5769e8bcd088.jpg","dateCreated":"2020-10-31T08:21:35.294Z","dateModified":"2020-10-31T08:21:40.324Z","contributedBy":"sumitc91","content":"A robot is located at the top-left corner of a m x n grid (marked 'Start' in the diagram below).\nThe robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid (marked 'Finish' in the diagram below).\nHow many possi","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/7d520a0b-1d85-4323-8864-5769e8bcd088.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"unique-paths-array-medium-leetcode","total":0},{"id":1602,"title":"Nim Game - Brainteaser - Easy - LeetCode","imageUrl":"icon_2d168a53-ceb7-4679-bee4-38527d6e5223.jpg","dateCreated":"2020-10-15T09:30:33.368Z","dateModified":"2020-10-15T09:32:06.259Z","contributedBy":"sumitc91","content":"You are playing the following Nim Game with your friend:\nInitially, there is a heap of stones on the table.<br />You and your friend will alternate taking turns, and you go first.<br />On each turn, the person whose turn it is will remove 1 to 3 stones from the heap.<br />The one who remov","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/2d168a53-ceb7-4679-bee4-38527d6e5223.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"brainteaser","slug":"brainteaser"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"nim-game-brainteaser-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}