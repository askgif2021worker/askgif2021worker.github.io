{"id":161,"title":"How can I break out of nesting of loops in Java?","imageUrl":"dc2525c6-08ba-43b2-af49-7d03ef0f4b58_nested-loop.png","dateCreated":"2018-11-29T06:12:56.437Z","dateModified":"2019-03-21T19:13:25.096Z","contributedBy":"AskGif","content":"<p>Am using two for loops but am stuck and I don't know how can I break out of both loops. I've looked at similar questions, but none concerns Java specifically. I couldn't apply these solutions because most used gotos.</p>\r\n<p>I don't want to put the inner loop in a different method.</p>\r\n<p>Update: I don't want to rerun the loops when breaking I'm finished with the execution of the loop block.</p>\r\n<pre class=\"language-java\"><code>for (Type type : types) {\r\n    for (Type t : types2) {\r\n         if (some condition) {\r\n             // Do something and break...\r\n             break; // Breaks out of the inner loop\r\n         }\r\n    }\r\n}</code></pre>\r\n<p>Solution:</p>\r\n<p>Like other answerers, I'd definitely prefer to put the inner loop in a different method. This answer just shows how the requirements in the question can be met.</p>\r\n<p>You can use break with a label for the outer loop. For example:</p>\r\n<pre class=\"language-java\"><code>public class Test {\r\n    public static void main(String[] args) {\r\n        outerloop:\r\n        for (int i=0; i &lt; 5; i++) {\r\n            for (int j=0; j &lt; 5; j++) {\r\n                if (i * j &gt; 6) {\r\n                    System.out.println(\"Breaking\");\r\n                    break outerloop;\r\n                }\r\n                System.out.println(i + \" \" + j);\r\n            }\r\n        }\r\n        System.out.println(\"Done\");\r\n    }\r\n}</code></pre>\r\n<p>Output :</p>\r\n<pre class=\"language-markup\"><code>0 0\r\n0 1\r\n0 2\r\n0 3\r\n0 4\r\n1 0\r\n1 1\r\n1 2\r\n1 3\r\n1 4\r\n2 0\r\n2 1\r\n2 2\r\n2 3\r\nBreaking\r\nDone</code></pre>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/dc2525c6-08ba-43b2-af49-7d03ef0f4b58_nested-loop.png","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"how-can-i-break-out-of-nesting-of-loops-in-java","tags":[{"name":"loop","slug":"loop"},{"name":"java","slug":"java"},{"name":"nested-loop","slug":"nested-loop"}],"recommendations":[{"id":108,"title":"How to implement Level Order Traversal in Binary Tree?","imageUrl":"7833549b-eb6c-47f7-a6b0-1364f1434f70_binary_tree_breadth-first_traversal.png","dateCreated":"2018-08-14T14:06:33.296Z","dateModified":"2018-08-14T14:06:56.625Z","contributedBy":"AskGif","content":"Trees can also be traversed in level-order, where we visit every node on a level before going to a lower level. This search is referred to as a breadth-first search (BFS), as the search tree is broadened as much as possible on each depth before going to the next depth.\r\nJava implementation","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/7833549b-eb6c-47f7-a6b0-1364f1434f70_binary_tree_breadth-first_traversal.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"java","slug":"java"},{"name":"tree","slug":"tree"},{"name":"interview","slug":"interview"},{"name":"questions","slug":"questions"},{"name":"level-order","slug":"level-order"},{"name":"traversal","slug":"traversal"}],"slug":"how-to-implement-level-order-traversal-in-binary-tree","total":0},{"id":58,"title":"How to solve Knapsack problem using Dynamic Programming","imageUrl":"b6cbe28d-ef39-4235-aa96-015ea58e9991_knapsack.jpg","dateCreated":"2018-07-31T07:51:18.76Z","dateModified":"2018-07-31T07:51:31.675Z","contributedBy":"AskGif","content":"The knapsack problem or rucksack problem is a problem in combinatorial optimization: Given a set of items, each with a weight and a value, determine the number of each item to include in a collection so that the total weight is less than or equal to a given limit and the total value is as large a","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/b6cbe28d-ef39-4235-aa96-015ea58e9991_knapsack.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"recursion","slug":"recursion"},{"name":"interview","slug":"interview"},{"name":"questions","slug":"questions"},{"name":"dynamic-programming","slug":"dynamic-programming"},{"name":"java","slug":"java"}],"slug":"how-to-solve-knapsack-problem-using-dynamic-programming","total":0},{"id":22,"title":"Find all possible palindromic partitions in a given string","imageUrl":"7247cde2-f280-4fec-a154-4bf06572b088_palindromes.jpg","dateCreated":"2018-07-13T06:11:22.557Z","dateModified":"2018-07-13T06:51:51.236Z","contributedBy":"AskGif","content":"We will be using recursion for solving this problem.&nbsp;<span style=\"font-family: 'Open Sans', Helvetica, Arial, Verdana, sans-serif; font-size: 15px; text-align: justify;\">The idea is to navigate through each substring starting from first character and to check if it is a palindrome. If it is,","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/7247cde2-f280-4fec-a154-4bf06572b088_palindromes.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"string","slug":"string"},{"name":"recursion","slug":"recursion"},{"name":"algorithm","slug":"algorithm"},{"name":"interview","slug":"interview"},{"name":"array","slug":"array"},{"name":"java","slug":"java"}],"slug":"find-all-possible-palindromic-partitions-in-a-given-string","total":0},{"id":1,"title":"How to install java on EC2 Ubuntu 16-04","imageUrl":"d11fed6a-e800-4779-8cee-f7f5c8c42ee8_00_lead_image_java_in_ubuntu.png","dateCreated":"2018-06-20T13:02:11.29Z","dateModified":"2018-07-07T15:23:51.439Z","contributedBy":"AskGif","content":"This blog is in continuation to blog&nbsp;<a href=\"../../../../../blog/3/how-to-create-ec2-instance-on-aws-free-tier-plan/?lang=en\" target=\"_blank\" rel=\"noopener\">How to create EC2 instance on AWS Free Tier plan.</a>&nbsp;if you missed please revisit.\r\nFirst we need to get an Ubuntu (16.04","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/d11fed6a-e800-4779-8cee-f7f5c8c42ee8_00_lead_image_java_in_ubuntu.png","category":{"name":"tutorials","slug":"tutorials"},"tags":[{"name":"jre","slug":"jre"},{"name":"jdk","slug":"jdk"},{"name":"java","slug":"java"}],"slug":"how-to-install-java-on-ec2-ubuntu-16-04","total":0}]}