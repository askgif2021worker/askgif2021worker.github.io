{"id":1616,"title":"Construct the Rectangle - Maths - Easy - LeetCode","imageUrl":"icon_b45219ed-7740-49ab-9ef5-a30a75eda886.jpg","dateCreated":"2020-10-17T04:16:55.036Z","dateModified":"2020-10-17T04:17:06.352Z","contributedBy":"sumitc91","content":"<p>A web developer needs to know how to design a web page's size. So, given a specific rectangular web page&rsquo;s area, your job by now is to design a rectangular web page, whose length L and width W satisfy the following requirements:</p>\n<p>The area of the rectangular web page you designed must equal to the given target area.<br />The width W should not be larger than the length L, which means L &gt;= W.<br />The difference between length L and width W should be as small as possible.<br />Return an array [L, W] where L and W are the length and width of the web page you designed in sequence.</p>\n<p>&nbsp;</p>\n<p>Example 1:</p>\n<p>Input: area = 4<br />Output: [2,2]<br />Explanation: The target area is 4, and all the possible ways to construct it are [1,4], [2,2], [4,1].&nbsp;<br />But according to requirement 2, [1,4] is illegal; according to requirement 3, &nbsp;[4,1] is not optimal compared to [2,2]. So the length L is 2, and the width W is 2.<br />Example 2:</p>\n<p>Input: area = 37<br />Output: [37,1]<br />Example 3:</p>\n<p>Input: area = 122122<br />Output: [427,286]<br />&nbsp;</p>\n<p>Constraints:</p>\n<p>1 &lt;= area &lt;= 107</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    public int[] ConstructRectangle(int area) {\n        int min = int.MaxValue;\n        var res = new int[2];\n        var sqrt = Math.Sqrt(area);\n        for(int W = 1;W&lt;=sqrt;W++){\n            \n            if(area%W!=0){\n                continue;\n            }\n            \n            int L = area/W;\n            if(min&gt;(L-W)){\n                min = L-W;\n                res[0]=L;\n                res[1]=W;\n            }\n        }\n        \n        return res;\n    }\n}</code></pre>\n<p>Time Complexity: O(n*m)</p>\n<p>Space Complexity: O(1)</p>\n<p>&nbsp;</p>\n<p>Here n is the input number and m is the time take to compute square root of each number.</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/b45219ed-7740-49ab-9ef5-a30a75eda886.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"construct-the-rectangle-maths-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"maths","slug":"maths"}],"recommendations":[{"id":1672,"title":"Rotate Array - Array - Medium - LeetCode","imageUrl":"icon_37fb5cd6-ca4d-4282-9a29-a03ba8523202.jpg","dateCreated":"2020-11-18T07:21:27.3Z","dateModified":"2020-11-18T07:21:33.323Z","contributedBy":"sumitc91","content":"Given an array, rotate the array to the right by k steps, where k is non-negative.\nFollow up:\nTry to come up as many solutions as you can, there are at least 3 different ways to solve this problem.<br />Could you do it in-place with O(1) extra space?<br />&nbsp;\nExample 1:</p","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/37fb5cd6-ca4d-4282-9a29-a03ba8523202.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"rotate-array-array-medium-leetcode","total":0},{"id":1670,"title":"Find Minimum in Rotated Sorted Array - Array - Medium - LeetCode","imageUrl":"icon_d1be15f3-8f69-4050-83a2-f9c67ac5827b.jpg","dateCreated":"2020-11-18T02:56:56.195Z","dateModified":"2020-11-18T02:57:02.762Z","contributedBy":"sumitc91","content":"Suppose an array of length n sorted in ascending order is rotated between 1 and n times. For example, the array nums = [0,1,2,4,5,6,7] might become:\n[4,5,6,7,0,1,2] if it was rotated 4 times.<br />[0,1,2,4,5,6,7] if it was rotated 7 times.<br />Notice that rotating an array [a[0], a[1], a[","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/d1be15f3-8f69-4050-83a2-f9c67ac5827b.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"athletics","slug":"athletics"},{"name":"data-structure","slug":"data-structure"},{"name":"medium","slug":"medium"}],"slug":"find-minimum-in-rotated-sorted-array-array-medium-leetcode","total":0},{"id":1621,"title":"Swap Salary - Sql - Easy - LeetCode","imageUrl":"icon_d5dae622-be43-4a7d-a90e-4173c15f3195.jpg","dateCreated":"2020-10-17T06:35:01.639Z","dateModified":"2020-10-17T06:36:00.564Z","contributedBy":"sumitc91","content":"Given a table salary, such as the one below, that has m=male and f=female values. Swap all f and m values (i.e., change all f values to m and vice versa) with a single update statement and no intermediate temp table.\nNote that you must write a single update statement, DO NOT write any sele","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/d5dae622-be43-4a7d-a90e-4173c15f3195.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"sql","slug":"sql"}],"slug":"swap-salary-sql-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}