{"id":1620,"title":"Not Boring Movies - Sql - Easy - LeetCode","imageUrl":"icon_2264c3af-9542-4c4d-946f-2d631ae1b7f8.jpg","dateCreated":"2020-10-17T06:24:31.074Z","dateModified":"2020-10-17T06:24:53.421Z","contributedBy":"sumitc91","content":"<p>X city opened a new cinema, many people would like to go to this cinema. The cinema also gives out a poster indicating the movies&rsquo; ratings and descriptions.<br />Please write a SQL query to output movies with an odd numbered ID and a description that is not 'boring'. Order the result by rating.</p>\n<p>&nbsp;</p>\n<p>For example, table cinema:</p>\n<p>+---------+-----------+--------------+-----------+<br />| &nbsp; id &nbsp; &nbsp;| movie &nbsp; &nbsp; | &nbsp;description | &nbsp;rating &nbsp; |<br />+---------+-----------+--------------+-----------+<br />| &nbsp; 1 &nbsp; &nbsp; | War &nbsp; &nbsp; &nbsp; | &nbsp; great 3D &nbsp; | &nbsp; 8.9 &nbsp; &nbsp; |<br />| &nbsp; 2 &nbsp; &nbsp; | Science &nbsp; | &nbsp; fiction &nbsp; &nbsp;| &nbsp; 8.5 &nbsp; &nbsp; |<br />| &nbsp; 3 &nbsp; &nbsp; | irish &nbsp; &nbsp; | &nbsp; boring &nbsp; &nbsp; | &nbsp; 6.2 &nbsp; &nbsp; |<br />| &nbsp; 4 &nbsp; &nbsp; | Ice song &nbsp;| &nbsp; Fantacy &nbsp; &nbsp;| &nbsp; 8.6 &nbsp; &nbsp; |<br />| &nbsp; 5 &nbsp; &nbsp; | House card| &nbsp; Interesting| &nbsp; 9.1 &nbsp; &nbsp; |<br />+---------+-----------+--------------+-----------+<br />For the example above, the output should be:<br />+---------+-----------+--------------+-----------+<br />| &nbsp; id &nbsp; &nbsp;| movie &nbsp; &nbsp; | &nbsp;description | &nbsp;rating &nbsp; |<br />+---------+-----------+--------------+-----------+<br />| &nbsp; 5 &nbsp; &nbsp; | House card| &nbsp; Interesting| &nbsp; 9.1 &nbsp; &nbsp; |<br />| &nbsp; 1 &nbsp; &nbsp; | War &nbsp; &nbsp; &nbsp; | &nbsp; great 3D &nbsp; | &nbsp; 8.9 &nbsp; &nbsp; |<br />+---------+-----------+--------------+-----------+</p>\n<pre class=\"language-markup\"><code># Write your MySQL query statement below\nselect * from cinema Where (id%2=1) AND description &lt;&gt; 'boring' Order By rating desc;</code></pre>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/2264c3af-9542-4c4d-946f-2d631ae1b7f8.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"not-boring-movies-sql-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"sql","slug":"sql"}],"recommendations":[{"id":1680,"title":"Find All Duplicates in an Array - Array - Medium - LeetCode","imageUrl":"icon_5a6c2b89-77d6-4d5e-978b-35b19f85ed66.jpg","dateCreated":"2020-11-19T07:32:23.312Z","dateModified":"2020-11-19T07:32:30.12Z","contributedBy":"sumitc91","content":"Given an array of integers, 1 &le; a[i] &le; n (n = size of array), some elements appear twice and others appear once.\nFind all the elements that appear twice in this array.\nCould you do it without extra space and in O(n) runtime?\nExample:<br />Input:<br />[4,3,2,7,8,2,3,1]</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/5a6c2b89-77d6-4d5e-978b-35b19f85ed66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"find-all-duplicates-in-an-array-array-medium-leetcode","total":0},{"id":1672,"title":"Rotate Array - Array - Medium - LeetCode","imageUrl":"icon_37fb5cd6-ca4d-4282-9a29-a03ba8523202.jpg","dateCreated":"2020-11-18T07:21:27.3Z","dateModified":"2020-11-18T07:21:33.323Z","contributedBy":"sumitc91","content":"Given an array, rotate the array to the right by k steps, where k is non-negative.\nFollow up:\nTry to come up as many solutions as you can, there are at least 3 different ways to solve this problem.<br />Could you do it in-place with O(1) extra space?<br />&nbsp;\nExample 1:</p","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/37fb5cd6-ca4d-4282-9a29-a03ba8523202.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"rotate-array-array-medium-leetcode","total":0},{"id":1640,"title":"Find First and Last Position of Element in Sorted Array - Array - Medium - LeetCode","imageUrl":"icon_4dd548b4-7f64-4384-8000-de99e5e3a765.jpg","dateCreated":"2020-10-25T13:25:33.524Z","dateModified":"2020-10-25T13:25:43.128Z","contributedBy":"sumitc91","content":"Given an array of integers nums sorted in ascending order, find the starting and ending position of a given target value.\nIf the target is not found in the array, return [-1, -1].\nFollow up: Could you write an algorithm with O(log n) runtime complexity?\n&nbsp;\nExample ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/4dd548b4-7f64-4384-8000-de99e5e3a765.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"find-first-and-last-position-of-element-in-sorted-array-array-medium-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}