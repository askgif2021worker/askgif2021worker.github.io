{"id":1632,"title":"Container With Most Water - Array - Medium - LeetCode","imageUrl":"icon_fc25ea42-813c-4de4-be8b-eb874d415c58.jpg","dateCreated":"2020-10-18T15:53:55.445Z","dateModified":"2020-10-18T15:54:07.342Z","contributedBy":"sumitc91","content":"<p>Given n non-negative integers a1, a2, ..., an , where each represents a point at coordinate (i, ai). n vertical lines are drawn such that the two endpoints of line i is at (i, ai) and (i, 0). Find two lines, which, together with the x-axis forms a container, such that the container contains the most water.</p>\n<p>Notice that you may not slant the container.</p>\n<p>&nbsp;</p>\n<p>Example 1:</p>\n<p><br />Input: height = [1,8,6,2,5,4,8,3,7]<br />Output: 49<br />Explanation: The above vertical lines are represented by array [1,8,6,2,5,4,8,3,7]. In this case, the max area of water (blue section) the container can contain is 49.<br />Example 2:</p>\n<p>Input: height = [1,1]<br />Output: 1<br />Example 3:</p>\n<p>Input: height = [4,3,2,1,4]<br />Output: 16<br />Example 4:</p>\n<p>Input: height = [1,2,1]<br />Output: 2<br />&nbsp;</p>\n<p>Constraints:</p>\n<p>2 &lt;= height.length &lt;= 3 * 104<br />0 &lt;= height[i] &lt;= 3 * 104</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    public int MaxArea(int[] height) {\n        \n        int max = 0;\n        int i=0;\n        int j = height.Length-1;\n        while(i&lt;j){\n            max = Math.Max(max, Math.Min(height[i],height[j])*(j-i));\n            if(height[i]&lt;height[j]){\n                i++;\n            }\n            else{\n                j--;\n            }\n        }\n        \n        return max;\n    }\n}</code></pre>\n<p>Time Complexity: O(n)</p>\n<p>Space Complexity: O(1)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/fc25ea42-813c-4de4-be8b-eb874d415c58.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"container-with-most-water-array-medium-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"recommendations":[{"id":1649,"title":"Spiral Matrix II - Array - Medium - LeetCode","imageUrl":"icon_6df8412b-55e5-4d25-9094-489e2623ffe0.jpg","dateCreated":"2020-10-31T08:11:06.067Z","dateModified":"2020-10-31T08:11:30.766Z","contributedBy":"sumitc91","content":"Given a positive integer n, generate a square matrix filled with elements from 1 to n2 in spiral order.\nExample:\nInput: 3<br />Output:<br />[<br />&nbsp;[ 1, 2, 3 ],<br />&nbsp;[ 8, 9, 4 ],<br />&nbsp;[ 7, 6, 5 ]<br />]\n&nbsp;\n<pre class=\"language-csharp\"><code>public cla","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/6df8412b-55e5-4d25-9094-489e2623ffe0.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"spiral-matrix-ii-array-medium-leetcode","total":0},{"id":1624,"title":"Shortest Distance to a Character - Array - Easy - LeetCode","imageUrl":"icon_5ae5fc7c-ff85-4fa4-b353-2d4b89a92b76.jpg","dateCreated":"2020-10-18T03:37:10.612Z","dateModified":"2020-10-18T03:37:18.655Z","contributedBy":"sumitc91","content":"Given a string S and a character C, return an array of integers representing the shortest distance from the character C in the string.\nExample 1:\nInput: S = \"loveleetcode\", C = 'e'<br />Output: [3, 2, 1, 0, 1, 0, 0, 1, 2, 2, 1, 0]<br />&nbsp;\nNote:\nS string length is i","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/5ae5fc7c-ff85-4fa4-b353-2d4b89a92b76.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"shortest-distance-to-a-character-array-easy-leetcode","total":0},{"id":1598,"title":"Find the Town Judge - Tree - Easy - LeetCode","imageUrl":"icon_2f8d0898-e59c-49cd-b25f-5234ed605d94.jpg","dateCreated":"2020-10-14T09:05:56.984Z","dateModified":"2020-10-14T09:06:09.069Z","contributedBy":"sumitc91","content":"In a town, there are N people labelled from 1 to N. &nbsp;There is a rumor that one of these people is secretly the town judge.\nIf the town judge exists, then:\nThe town judge trusts nobody.<br />Everybody (except for the town judge) trusts the town judge.<br />There is exactly one p","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/2f8d0898-e59c-49cd-b25f-5234ed605d94.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"graph","slug":"graph"},{"name":"leetcode","slug":"leetcode"}],"slug":"find-the-town-judge-tree-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}