{"id":1633,"title":"3Sum - Array - Medium - LeetCode","imageUrl":"icon_b05855a6-ac78-4434-a041-4682444c76bc.jpg","dateCreated":"2020-10-19T04:39:11.508Z","dateModified":"2020-10-19T04:39:21.598Z","contributedBy":"sumitc91","content":"<p>Given an array nums of n integers, are there elements a, b, c in nums such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.</p>\n<p>Notice that the solution set must not contain duplicate triplets.</p>\n<p>&nbsp;</p>\n<p>Example 1:</p>\n<p>Input: nums = [-1,0,1,2,-1,-4]<br />Output: [[-1,-1,2],[-1,0,1]]<br />Example 2:</p>\n<p>Input: nums = []<br />Output: []<br />Example 3:</p>\n<p>Input: nums = [0]<br />Output: []<br />&nbsp;</p>\n<p>Constraints:</p>\n<p>0 &lt;= nums.length &lt;= 3000<br />-105 &lt;= nums[i] &lt;= 105</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    private HashSet&lt;string&gt; set = new HashSet&lt;string&gt;();   \n    public IList&lt;IList&lt;int&gt;&gt; ThreeSum(int[] nums) {\n        Array.Sort(nums);\n        var res = new List&lt;IList&lt;int&gt;&gt;();\n        for(int i=0;i&lt;nums.Length-2;i++){\n            if(nums[i]&gt;0){\n                break;\n            }\n            if(i &gt; 0 &amp;&amp; nums[i] == nums[i-1]){\n                continue; \n            }\n            \n            int sum = -1 * nums[i];\n            for(int j=i+1, k = nums.Length-1;j&lt;k;){\n                if(nums[j]+nums[k]==sum){\n                    if(set.Contains(GetKey(nums[i], nums[j], nums[k]))){\n                        j++;\n                        continue; \n                    }\n                    res.Add(BuildList(nums[i],nums[j],nums[k]));\n                    set.Add(GetKey(nums[i], nums[j], nums[k]));\n                    j++;\n                }\n                else if((nums[j]+nums[k])&lt;sum){\n                    while(j&lt;nums.Length-1){\n                        if(nums[j]==nums[j+1]){\n                            j++;\n                        }\n                        else{\n                            break;\n                        }\n                    }\n                    j++;\n                }\n                else{\n                    while(k&gt;0){\n                        if(nums[k]==nums[k-1]){\n                            k--;\n                        }\n                        else{\n                            break;\n                        }\n                    }\n                    k--;\n                }\n            }\n        }\n        \n        return res;\n    }\n    \n    private string GetKey(int a, int b, int c){\n        return a.ToString()+\":\"+b.ToString()+\":\"+c.ToString();\n    }\n    \n    private List&lt;int&gt; BuildList(int a, int b, int c){\n        var res = new List&lt;int&gt;();\n        res.Add(a);\n        res.Add(b);\n        res.Add(c);\n        return res;\n    }\n}</code></pre>\n<p>Time Complexity: O(n^2)</p>\n<p>Space Complexity: O(n)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/b05855a6-ac78-4434-a041-4682444c76bc.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"3sum-array-medium-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"recommendations":[{"id":1648,"title":"Insert Interval - Array - Medium - LeetCode","imageUrl":"icon_5a35d970-95af-493c-9aca-0b4bed037719.jpg","dateCreated":"2020-10-31T06:40:08.43Z","dateModified":"2020-10-31T06:40:18.214Z","contributedBy":"sumitc91","content":"Given a set of non-overlapping intervals, insert a new interval into the intervals (merge if necessary).\nYou may assume that the intervals were initially sorted according to their start times.\n&nbsp;\nExample 1:\nInput: intervals = [[1,3],[6,9]], newInterval = [2,5]<br /","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/5a35d970-95af-493c-9aca-0b4bed037719.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"insert-interval-array-medium-leetcode","total":0},{"id":1646,"title":"Merge Intervals - Array - Medium - LeetCode","imageUrl":"icon_a1913eb6-6b8f-4cbb-9c4e-096c9e76c6cd.jpg","dateCreated":"2020-10-30T13:34:51.72Z","dateModified":"2020-10-30T13:34:58.66Z","contributedBy":"sumitc91","content":"Given a collection of intervals, merge all overlapping intervals.\nExample 1:\nInput: intervals = [[1,3],[2,6],[8,10],[15,18]]<br />Output: [[1,6],[8,10],[15,18]]<br />Explanation: Since intervals [1,3] and [2,6] overlaps, merge them into [1,6].<br />Example 2:\nInput: intervals","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a1913eb6-6b8f-4cbb-9c4e-096c9e76c6cd.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"merge-intervals-array-medium-leetcode","total":0},{"id":1626,"title":"Reformat Department Table - Sql - Easy - LeetCode","imageUrl":"icon_59cdadef-bfee-4b37-bafa-ad7569c32e3f.jpg","dateCreated":"2020-10-18T04:10:25.839Z","dateModified":"2020-10-18T04:10:34.638Z","contributedBy":"sumitc91","content":"Table: Department\n+---------------+---------+<br />| Column Name &nbsp; | Type &nbsp; &nbsp;|<br />+---------------+---------+<br />| id &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;| int &nbsp; &nbsp; |<br />| revenue &nbsp; &nbsp; &nbsp; | int &nbsp; &nbsp; |<br />| month &nbsp; &nbsp; &nbsp","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/59cdadef-bfee-4b37-bafa-ad7569c32e3f.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"mysql","slug":"mysql"},{"name":"sql","slug":"sql"}],"slug":"reformat-department-table-sql-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}