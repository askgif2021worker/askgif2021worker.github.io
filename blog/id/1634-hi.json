{"id":1634,"title":"3Sum Closest - Array - Medium - LeetCode","imageUrl":"icon_981f57b3-a4c6-4c16-baeb-a49e75fe9497.jpg","dateCreated":"2020-10-23T07:22:34.29Z","dateModified":"2020-10-23T07:22:55.266Z","contributedBy":"sumitc91","content":"<p>Given an array nums of n integers and an integer target, find three integers in nums such that the sum is closest to target. Return the sum of the three integers. You may assume that each input would have exactly one solution.</p>\n<p>&nbsp;</p>\n<p>Example 1:</p>\n<p>Input: nums = [-1,2,1,-4], target = 1<br />Output: 2<br />Explanation: The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).<br />&nbsp;</p>\n<p>Constraints:</p>\n<p>3 &lt;= nums.length &lt;= 10^3<br />-10^3 &lt;= nums[i] &lt;= 10^3<br />-10^4 &lt;= target &lt;= 10^4</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    public int ThreeSumClosest(int[] nums, int target) {\n        Array.Sort(nums);\n        int minDiff = int.MaxValue;\n        int minSum = 0;\n        for(int i=0;i&lt;nums.Length-2;i++){\n            for(int j=i+1, k=nums.Length-1; j&lt;k;){\n                int sum = nums[i]+ nums[j]+ nums[k];                \n                int diff = Math.Abs(sum-target);                \n                if(minDiff&gt;diff){\n                    minDiff = diff;\n                    minSum = sum;\n                }\n                if(sum &gt; target){\n                    k--;\n                }\n                else if(sum &lt; target){\n                    j++;\n                }\n                else{\n                    // if sum is equal to target\n                    return target;\n                }\n            }\n        }\n        \n        return minSum;\n    }\n}</code></pre>\n<p>Time Complexity: O(n^2+nlogn) = O(n^2)</p>\n<p>Space Complexity: O(1)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/981f57b3-a4c6-4c16-baeb-a49e75fe9497.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"3sum-closest-array-medium-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"recommendations":[{"id":1651,"title":"Unique Paths II - Array - Medium - LeetCode","imageUrl":"icon_ca5278d5-6ee2-45fc-9c8e-7f12ff9f0357.jpg","dateCreated":"2020-10-31T08:51:34.949Z","dateModified":"2020-10-31T08:51:41.7Z","contributedBy":"sumitc91","content":"A robot is located at the top-left corner of a m x n grid (marked 'Start' in the diagram below).\nThe robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid (marked 'Finish' in the diagram below).\nNow consider i","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/ca5278d5-6ee2-45fc-9c8e-7f12ff9f0357.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"unique-paths-ii-array-medium-leetcode","total":0},{"id":1637,"title":"4Sum - Array - Medium - LeetCode","imageUrl":"icon_dadac4de-7510-4859-a826-eab8fa2011e3.jpg","dateCreated":"2020-10-24T10:17:11.757Z","dateModified":"2020-10-24T10:17:18.465Z","contributedBy":"sumitc91","content":"Given an array nums of n integers and an integer target, are there elements a, b, c, and d in nums such that a + b + c + d = target? Find all unique quadruplets in the array which gives the sum of target.\nNotice that the solution set must not contain duplicate quadruplets.\n&nbsp;</p","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/dadac4de-7510-4859-a826-eab8fa2011e3.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"4sum-array-medium-leetcode","total":0},{"id":1621,"title":"Swap Salary - Sql - Easy - LeetCode","imageUrl":"icon_d5dae622-be43-4a7d-a90e-4173c15f3195.jpg","dateCreated":"2020-10-17T06:35:01.639Z","dateModified":"2020-10-17T06:36:00.564Z","contributedBy":"sumitc91","content":"Given a table salary, such as the one below, that has m=male and f=female values. Swap all f and m values (i.e., change all f values to m and vice versa) with a single update statement and no intermediate temp table.\nNote that you must write a single update statement, DO NOT write any sele","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/d5dae622-be43-4a7d-a90e-4173c15f3195.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"sql","slug":"sql"}],"slug":"swap-salary-sql-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}