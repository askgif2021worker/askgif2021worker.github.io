{"id":1636,"title":"Two Strings - HashMap - Easy - HackerRank","imageUrl":"icon_b574251c-e9c0-4be6-9bc1-7c86f8da1806.jpg","dateCreated":"2020-10-24T07:22:16.972Z","dateModified":"2020-10-24T07:22:22.952Z","contributedBy":"sumitc91","content":"<p>Given two strings, determine if they share a common substring. A substring may be as small as one character.</p>\n<p>For example, the words \"a\", \"and\", \"art\" share the common substring . The words \"be\" and \"cat\" do not share a substring.</p>\n<p>Function Description</p>\n<p>Complete the function twoStrings in the editor below. It should return a string, either YES or NO based on whether the strings share a common substring.</p>\n<p>twoStrings has the following parameter(s):</p>\n<p>s1, s2: two strings to analyze .<br />Input Format</p>\n<p>The first line contains a single integer , the number of test cases.</p>\n<p>The following &nbsp;pairs of lines are as follows:</p>\n<p>The first line contains string .<br />The second line contains string .<br />Constraints</p>\n<p>&nbsp;and &nbsp;consist of characters in the range ascii[a-z].<br />Output Format</p>\n<p>For each pair of strings, return YES or NO.</p>\n<p>Sample Input</p>\n<p>2<br />hello<br />world<br />hi<br />world<br />Sample Output</p>\n<p>YES<br />NO<br />Explanation</p>\n<p>&nbsp;</p>\n<pre class=\"language-csharp\"><code>using System.CodeDom.Compiler;\nusing System.Collections.Generic;\nusing System.Collections;\nusing System.ComponentModel;\nusing System.Diagnostics.CodeAnalysis;\nusing System.Globalization;\nusing System.IO;\nusing System.Linq;\nusing System.Reflection;\nusing System.Runtime.Serialization;\nusing System.Text.RegularExpressions;\nusing System.Text;\nusing System;\n\nclass Solution {\n\n    // Complete the twoStrings function below.\n    static string twoStrings(string s1, string s2) {\n        var set = new HashSet&lt;char&gt;();\n        for(int i=0;i&lt;s1.Length;i++){\n            set.Add(s1[i]);\n        }\n\n        for(int i=0;i&lt;s2.Length;i++){\n            if(set.Contains(s2[i])){\n                return \"YES\";\n            }            \n        }\n\n        return \"NO\";\n    }\n\n    static void Main(string[] args) {\n        TextWriter textWriter = new StreamWriter(@System.Environment.GetEnvironmentVariable(\"OUTPUT_PATH\"), true);\n\n        int q = Convert.ToInt32(Console.ReadLine());\n\n        for (int qItr = 0; qItr &lt; q; qItr++) {\n            string s1 = Console.ReadLine();\n\n            string s2 = Console.ReadLine();\n\n            string result = twoStrings(s1, s2);\n\n            textWriter.WriteLine(result);\n        }\n\n        textWriter.Flush();\n        textWriter.Close();\n    }\n}\n</code></pre>\n<p>Time Complexity: O(n)</p>\n<p>Space Complexity: O(n)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/b574251c-e9c0-4be6-9bc1-7c86f8da1806.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"two-strings-hashmap-easy-hackerrank","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"hackerrank","slug":"hackerrank"},{"name":"hash-table","slug":"hash-table"}],"recommendations":[{"id":1663,"title":"Defuse the Bomb - Array - Easy - LeetCode","imageUrl":"icon_e0c7ac1d-e52e-489e-849e-a7842cdb2c18.jpg","dateCreated":"2020-11-15T15:48:36.584Z","dateModified":"2020-11-15T15:48:43.094Z","contributedBy":"sumitc91","content":"You have a bomb to defuse, and your time is running out! Your informer will provide you with a circular array code of length of n and a key k.\nTo decrypt the code, you must replace every number. All the numbers are replaced simultaneously.\nIf k &gt; 0, replace the ith number with th","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/e0c7ac1d-e52e-489e-849e-a7842cdb2c18.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"defuse-the-bomb-array-easy-leetcode","total":0},{"id":1657,"title":"Word Search - Array - Medium - LeetCode","imageUrl":"icon_20ea8361-3e30-4ec3-92da-00e3f7512213.jpg","dateCreated":"2020-11-01T06:18:06.031Z","dateModified":"2020-11-01T06:18:12.117Z","contributedBy":"sumitc91","content":"Given a 2D board and a word, find if the word exists in the grid.\nThe word can be constructed from letters of sequentially adjacent cells, where \"adjacent\" cells are horizontally or vertically neighboring. The same letter cell may not be used more than once.\n&nbsp;\nExample 1:","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/20ea8361-3e30-4ec3-92da-00e3f7512213.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"word-search-array-medium-leetcode","total":0},{"id":1601,"title":"N-th Tribonacci Number - Recursion - Easy - LeetCode","imageUrl":"icon_8864cfe3-0823-418f-867d-6299b93c28bd.jpg","dateCreated":"2020-10-15T09:12:30.383Z","dateModified":"2020-10-15T09:12:56.022Z","contributedBy":"sumitc91","content":"The Tribonacci sequence Tn is defined as follows:&nbsp;\nT0 = 0, T1 = 1, T2 = 1, and Tn+3 = Tn + Tn+1 + Tn+2 for n &gt;= 0.\nGiven n, return the value of Tn.\n&nbsp;\nExample 1:\nInput: n = 4<br />Output: 4<br />Explanation:<br />T_3 = 0 + 1 + 1 = 2<br />T_4 = 1 + 1 ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/8864cfe3-0823-418f-867d-6299b93c28bd.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"dynamic-programming","slug":"dynamic-programming"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"recursion","slug":"recursion"}],"slug":"n-th-tribonacci-number-recursion-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}