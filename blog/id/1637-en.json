{"id":1637,"title":"4Sum - Array - Medium - LeetCode","imageUrl":"icon_dadac4de-7510-4859-a826-eab8fa2011e3.jpg","dateCreated":"2020-10-24T10:17:11.757Z","dateModified":"2020-10-24T10:17:18.465Z","contributedBy":"sumitc91","content":"<p>Given an array nums of n integers and an integer target, are there elements a, b, c, and d in nums such that a + b + c + d = target? Find all unique quadruplets in the array which gives the sum of target.</p>\n<p>Notice that the solution set must not contain duplicate quadruplets.</p>\n<p>&nbsp;</p>\n<p>Example 1:</p>\n<p>Input: nums = [1,0,-1,0,-2,2], target = 0<br />Output: [[-2,-1,1,2],[-2,0,0,2],[-1,0,0,1]]<br />Example 2:</p>\n<p>Input: nums = [], target = 0<br />Output: []<br />&nbsp;</p>\n<p>Constraints:</p>\n<p>0 &lt;= nums.length &lt;= 200<br />-109 &lt;= nums[i] &lt;= 109<br />-109 &lt;= target &lt;= 109</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    public IList&lt;IList&lt;int&gt;&gt; FourSum(int[] nums, int target) {\n        Array.Sort(nums);\n        var res = new List&lt;IList&lt;int&gt;&gt;();\n        var set = new HashSet&lt;string&gt;();\n        for(int i=0;i&lt;nums.Length-3;i++){\n            for(int j=i+1;j&lt;nums.Length-2;j++){\n                for(int k=j+1, l=nums.Length-1;k&lt;l;){\n                    int sum = nums[i]+nums[j]+nums[k]+nums[l];\n                    if(sum == target){\n                        if(!set.Contains(GetKey(nums[i],nums[j],nums[k],nums[l]))){\n                            set.Add(GetKey(nums[i],nums[j],nums[k],nums[l]));\n                            res.Add(BuildList(nums[i],nums[j],nums[k],nums[l]));\n                        }\n                        k++;\n                    }\n                    else if(sum&gt;target){\n                        l--;\n                    }\n                    else if(sum&lt;target){\n                        k++;\n                    }\n                }\n            }\n        }\n        \n        return res;\n    }\n    \n    private string GetKey(int a, int b, int c, int d){\n        return a.ToString()+\":\"+b.ToString()+\":\"+c.ToString()+\":\"+d.ToString();\n    }\n    \n    private List&lt;int&gt; BuildList(int a, int b, int c, int d){\n        var res = new List&lt;int&gt;();\n        res.Add(a);\n        res.Add(b);\n        res.Add(c);\n        res.Add(d);\n        return res;\n    }\n}</code></pre>\n<p>Time Complexity: O(n^3)</p>\n<p>Space Complexity: O(n)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/dadac4de-7510-4859-a826-eab8fa2011e3.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"4sum-array-medium-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"recommendations":[{"id":1642,"title":"Combination Sum II - Array - Medium - LeetCode","imageUrl":"icon_134b4baa-680a-45e5-b0df-c627789e2d42.jpg","dateCreated":"2020-10-25T16:13:32.074Z","dateModified":"2020-10-25T16:13:43.44Z","contributedBy":"sumitc91","content":"Given a collection of candidate numbers (candidates) and a target number (target), find all unique combinations in candidates where the candidate numbers sum to target.\nEach number in candidates may only be used once in the combination.\nNote: The solution set must not contain duplic","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/134b4baa-680a-45e5-b0df-c627789e2d42.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"combination-sum-ii-array-medium-leetcode","total":0},{"id":1629,"title":"Maximum Nesting Depth of the Parentheses - Stack - Easy - LeetCode","imageUrl":"icon_9d515e72-4c83-4541-9650-c0972215972d.jpg","dateCreated":"2020-10-18T08:20:30.391Z","dateModified":"2020-10-18T08:20:41.012Z","contributedBy":"sumitc91","content":"A string is a valid parentheses string (denoted VPS) if it meets one of the following:\nIt is an empty string \"\", or a single character not equal to \"(\" or \")\",<br />It can be written as AB (A concatenated with B), where A and B are VPS's, or<br />It can be written as (A), where A is a VPS.","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/9d515e72-4c83-4541-9650-c0972215972d.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"stack","slug":"stack"}],"slug":"maximum-nesting-depth-of-the-parentheses-stack-easy-leetcode","total":0},{"id":1604,"title":"Second Highest Salary - Sql - Easy - LeetCode","imageUrl":"icon_cbe876f9-f816-4e65-800b-bbc50dec92d4.jpg","dateCreated":"2020-10-16T06:01:26.855Z","dateModified":"2020-10-16T06:01:35.503Z","contributedBy":"sumitc91","content":"Write a SQL query to get the second highest salary from the Employee table.\n+----+--------+<br />| Id | Salary |<br />+----+--------+<br />| 1 &nbsp;| 100 &nbsp; &nbsp;|<br />| 2 &nbsp;| 200 &nbsp; &nbsp;|<br />| 3 &nbsp;| 300 &nbsp; &nbsp;|<br />+----+--------+<br />For example, given the","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/cbe876f9-f816-4e65-800b-bbc50dec92d4.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"mysql","slug":"mysql"},{"name":"sql","slug":"sql"}],"slug":"second-highest-salary-sql-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}