{"id":1643,"title":"Rotate Image - Array - Medium - LeetCode","imageUrl":"icon_1aaf92bb-a6af-4473-a7da-686247f16016.jpg","dateCreated":"2020-10-26T13:36:30.021Z","dateModified":"2020-10-26T13:36:36.406Z","contributedBy":"sumitc91","content":"<p>You are given an n x n 2D matrix representing an image, rotate the image by 90 degrees (clockwise).</p>\n<p>You have to rotate the image in-place, which means you have to modify the input 2D matrix directly. DO NOT allocate another 2D matrix and do the rotation.</p>\n<p>&nbsp;</p>\n<p>Example 1:</p>\n<p><br />Input: matrix = [[1,2,3],[4,5,6],[7,8,9]]<br />Output: [[7,4,1],[8,5,2],[9,6,3]]<br />Example 2:</p>\n<p><br />Input: matrix = [[5,1,9,11],[2,4,8,10],[13,3,6,7],[15,14,12,16]]<br />Output: [[15,13,2,5],[14,3,4,1],[12,6,8,9],[16,7,10,11]]<br />Example 3:</p>\n<p>Input: matrix = [[1]]<br />Output: [[1]]<br />Example 4:</p>\n<p>Input: matrix = [[1,2],[3,4]]<br />Output: [[3,1],[4,2]]<br />&nbsp;</p>\n<p>Constraints:</p>\n<p>matrix.length == n<br />matrix[i].length == n<br />1 &lt;= n &lt;= 20<br />-1000 &lt;= matrix[i][j] &lt;= 1000</p>\n<p>&nbsp;</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    public void Rotate(int[][] matrix) {\n        if(matrix.Length==0){\n            return;\n        }\n        \n        int s = 0;\n        int e = matrix.Length-1;\n        while(s &lt; e){\n            var temp = matrix[s];\n            matrix[s]=matrix[e];\n            matrix[e]=temp;\n            s++;\n            e--;\n        }\n        \n        for(int i=0; i&lt; matrix.Length;i++){\n            for(int j=i+1;j&lt;matrix.Length;j++){\n                int temp = matrix[i][j];\n                matrix[i][j]=matrix[j][i];\n                matrix[j][i]=temp;\n            }\n        }\n    }\n}</code></pre>\n<p>Time Complexity: O(m*n)</p>\n<p>Space Complexity: O(1)</p>\n<p>&nbsp;</p>\n<p>Where m and n are rows and columns of matrix.</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/1aaf92bb-a6af-4473-a7da-686247f16016.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"rotate-image-array-medium-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"recommendations":[{"id":1638,"title":"Next Permutation - Array - Medium - LeetCode","imageUrl":"icon_467cc3d1-390e-4bc6-a589-9f2b2a7b6f67.jpg","dateCreated":"2020-10-24T11:58:46.632Z","dateModified":"2020-10-24T11:59:00.039Z","contributedBy":"sumitc91","content":"Implement next permutation, which rearranges numbers into the lexicographically next greater permutation of numbers.\nIf such an arrangement is not possible, it must rearrange it as the lowest possible order (i.e., sorted in ascending order).\nThe replacement must be in place and use ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/467cc3d1-390e-4bc6-a589-9f2b2a7b6f67.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"next-permutation-array-medium-leetcode","total":0},{"id":1610,"title":"Valid Phone Numbers - Bash - Easy - LeetCode","imageUrl":"icon_903f4733-4a8e-4987-9d87-0e0feefd9f8e.jpg","dateCreated":"2020-10-16T07:46:02.223Z","dateModified":"2020-10-16T07:46:13.79Z","contributedBy":"sumitc91","content":"Given a text file file.txt that contains list of phone numbers (one per line), write a one liner bash script to print all valid phone numbers.\nYou may assume that a valid phone number must appear in one of the following two formats: (xxx) xxx-xxxx or xxx-xxx-xxxx. (x means a digit)\n","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/903f4733-4a8e-4987-9d87-0e0feefd9f8e.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"valid-phone-numbers-bash-easy-leetcode","total":0},{"id":1596,"title":"Sum of Root To Leaf Binary Numbers - Tree - Easy - LeetCode","imageUrl":"icon_41e87329-1dad-4856-9c47-60b67b520656.jpg","dateCreated":"2020-10-09T09:37:18.648Z","dateModified":"2020-10-09T09:37:29.591Z","contributedBy":"sumitc91","content":"You are given the root of a binary tree where each node has a value 0 or 1. &nbsp;Each root-to-leaf path represents a binary number starting with the most significant bit. &nbsp;For example, if the path is 0 -&gt; 1 -&gt; 1 -&gt; 0 -&gt; 1, then this could represent 01101 in binary, which is 13.<","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/41e87329-1dad-4856-9c47-60b67b520656.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"sum-of-root-to-leaf-binary-numbers-tree-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}