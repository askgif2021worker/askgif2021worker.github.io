{"id":1654,"title":"Search a 2D Matrix - Array - Medium - LeetCode","imageUrl":"icon_4ecd9aac-a00a-4a8f-ad7b-e7e4a75307ac.jpg","dateCreated":"2020-10-31T10:10:06.758Z","dateModified":"2020-10-31T10:10:15.329Z","contributedBy":"sumitc91","content":"<p>Write an efficient algorithm that searches for a value in an m x n matrix. This matrix has the following properties:</p>\n<p>Integers in each row are sorted from left to right.<br />The first integer of each row is greater than the last integer of the previous row.<br />&nbsp;</p>\n<p>Example 1:</p>\n<p><br />Input: matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,50]], target = 3<br />Output: true<br />Example 2:</p>\n<p><br />Input: matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,50]], target = 13<br />Output: false<br />Example 3:</p>\n<p>Input: matrix = [], target = 0<br />Output: false<br />&nbsp;</p>\n<p>Constraints:</p>\n<p>m == matrix.length<br />n == matrix[i].length<br />0 &lt;= m, n &lt;= 100<br />-104 &lt;= matrix[i][j], target &lt;= 104</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    public bool SearchMatrix(int[][] matrix, int target) {\n        if(matrix.Length==0){\n            return false;\n        }\n        \n        int r = matrix.Length;\n        int c = matrix[0].Length;\n        int total = r*c;\n        \n        int lo = 0;\n        int hi = total;\n        while(lo&lt;hi){\n            int mid = lo + (hi-lo)/2;\n            int row = mid/c;\n            int col = mid%c;            \n            if(matrix[row][col]&gt; target){\n                hi = mid;\n            }\n            else if(matrix[row][col]&lt; target){\n                lo = mid+1;\n            }\n            else if(matrix[row][col]==target){\n                return true;\n            }\n            else{\n                return false;\n            }\n        }\n        \n        return false;\n    }\n}</code></pre>\n<p>Time Complexity: O(logn)</p>\n<p>Space Complexity: O(1)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/4ecd9aac-a00a-4a8f-ad7b-e7e4a75307ac.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"search-a-2d-matrix-array-medium-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"recommendations":[{"id":1671,"title":"Find Peak Element - Array - Medium - LeetCode","imageUrl":"icon_ddbfc17c-bd5c-47a2-8c7d-53508db12cab.jpg","dateCreated":"2020-11-18T07:03:05.436Z","dateModified":"2020-11-18T07:03:11.729Z","contributedBy":"sumitc91","content":"A peak element is an element that is greater than its neighbors.\nGiven an input array nums, where nums[i] &ne; nums[i+1], find a peak element and return its index.\nThe array may contain multiple peaks, in that case return the index to any one of the peaks is fine.\nYou may ima","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/ddbfc17c-bd5c-47a2-8c7d-53508db12cab.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"find-peak-element-array-medium-leetcode","total":0},{"id":1620,"title":"Not Boring Movies - Sql - Easy - LeetCode","imageUrl":"icon_2264c3af-9542-4c4d-946f-2d631ae1b7f8.jpg","dateCreated":"2020-10-17T06:24:31.074Z","dateModified":"2020-10-17T06:24:53.421Z","contributedBy":"sumitc91","content":"X city opened a new cinema, many people would like to go to this cinema. The cinema also gives out a poster indicating the movies&rsquo; ratings and descriptions.<br />Please write a SQL query to output movies with an odd numbered ID and a description that is not 'boring'. Order the result by rat","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/2264c3af-9542-4c4d-946f-2d631ae1b7f8.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"sql","slug":"sql"}],"slug":"not-boring-movies-sql-easy-leetcode","total":0},{"id":1619,"title":"Classes More Than 5 Students - Sql - Easy - LeetCode","imageUrl":"icon_e71c8d7a-4f1f-4f65-8676-b2f2b13032cb.jpg","dateCreated":"2020-10-17T06:01:27.477Z","dateModified":"2020-10-17T06:01:38.886Z","contributedBy":"sumitc91","content":"There is a table courses with columns: student and class\nPlease list out all classes which have more than or equal to 5 students.\nFor example, the table:\n+---------+------------+<br />| student | class &nbsp; &nbsp; &nbsp;|<br />+---------+------------+<br />| A &nbsp; &nbsp;","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/e71c8d7a-4f1f-4f65-8676-b2f2b13032cb.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"sql","slug":"sql"}],"slug":"classes-more-than-5-students-sql-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}