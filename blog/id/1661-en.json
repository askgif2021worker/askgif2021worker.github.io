{"id":1661,"title":"Get Maximum in Generated Array - Array - Easy - LeetCode","imageUrl":"icon_6268cd06-1d1b-409d-9665-cbe40d65c81d.jpg","dateCreated":"2020-11-08T08:10:40.511Z","dateModified":"2020-11-08T08:10:45.589Z","contributedBy":"sumitc91","content":"<p>You are given an integer n. An array nums of length n + 1 is generated in the following way:</p>\n<p>nums[0] = 0<br />nums[1] = 1<br />nums[2 * i] = nums[i] when 2 &lt;= 2 * i &lt;= n<br />nums[2 * i + 1] = nums[i] + nums[i + 1] when 2 &lt;= 2 * i + 1 &lt;= n<br />Return the maximum integer in the array nums​​​.</p>\n<p>&nbsp;</p>\n<p>Example 1:</p>\n<p>Input: n = 7<br />Output: 3<br />Explanation: According to the given rules:<br />&nbsp; nums[0] = 0<br />&nbsp; nums[1] = 1<br />&nbsp; nums[(1 * 2) = 2] = nums[1] = 1<br />&nbsp; nums[(1 * 2) + 1 = 3] = nums[1] + nums[2] = 1 + 1 = 2<br />&nbsp; nums[(2 * 2) = 4] = nums[2] = 1<br />&nbsp; nums[(2 * 2) + 1 = 5] = nums[2] + nums[3] = 1 + 2 = 3<br />&nbsp; nums[(3 * 2) = 6] = nums[3] = 2<br />&nbsp; nums[(3 * 2) + 1 = 7] = nums[3] + nums[4] = 2 + 1 = 3<br />Hence, nums = [0,1,1,2,1,3,2,3], and the maximum is 3.<br />Example 2:</p>\n<p>Input: n = 2<br />Output: 1<br />Explanation: According to the given rules, the maximum between nums[0], nums[1], and nums[2] is 1.<br />Example 3:</p>\n<p>Input: n = 3<br />Output: 2<br />Explanation: According to the given rules, the maximum between nums[0], nums[1], nums[2], and nums[3] is 2.<br />&nbsp;</p>\n<p>Constraints:</p>\n<p>0 &lt;= n &lt;= 100</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    public int GetMaximumGenerated(int n) {\n        if(n&lt;2){\n            return n;\n        }\n        \n        var arr = new int[n+1];\n        arr[0]=0;\n        arr[1]=1;\n        int i = 1;\n        int max = int.MinValue;\n        while(2*i &lt;= n || (2*i)+1 &lt;= n){\n            arr[2*i]=arr[i];\n            max = Math.Max(max, arr[2*i]);\n            if((2*i)+1 &lt;= n){\n                arr[(2*i)+1]=arr[i]+arr[i+1];\n                max = Math.Max(max, arr[(2*i)+1]);\n            }\n            i++;\n        }\n        \n        return max;\n    }\n}</code></pre>\n<p>Time Complexity: O(n)</p>\n<p>Space Complexity: O(n)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/6268cd06-1d1b-409d-9665-cbe40d65c81d.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"get-maximum-in-generated-array-array-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"recommendations":[{"id":1726,"title":"Maximum Swap - Array - Medium - LeetCode","imageUrl":"icon_16589057-204a-4929-8beb-ec745719515b.jpg","dateCreated":"2021-03-04T10:15:19.693Z","dateModified":"2021-03-04T10:16:54.289Z","contributedBy":"sumitc91","content":"Given a non-negative integer, you could swap two digits at most once to get the maximum valued number. Return the maximum valued number you could get.\nExample 1:<br />Input: 2736<br />Output: 7236<br />Explanation: Swap the number 2 and the number 7.<br />Example 2:<br />Input: 9973<br />O","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/16589057-204a-4929-8beb-ec745719515b.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"maximum-swap-array-medium-leetcode","total":0},{"id":1678,"title":"Game of Life - Array - Medium - LeetCode","imageUrl":"icon_67a9ece8-2eeb-48f8-8881-4af10f198260.jpg","dateCreated":"2020-11-19T03:57:26.799Z","dateModified":"2020-11-19T03:57:33.216Z","contributedBy":"sumitc91","content":"According to the Wikipedia's article: \"The Game of Life, also known simply as Life, is a cellular automaton devised by the British mathematician John Horton Conway in 1970.\"\nGiven a board with m by n cells, each cell has an initial state live (1) or dead (0). Each cell interacts with its e","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/67a9ece8-2eeb-48f8-8881-4af10f198260.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"game-of-life-array-medium-leetcode","total":0},{"id":1675,"title":"Majority Element II - Array - Medium - LeetCode","imageUrl":"icon_17b104bf-91b6-48b5-a7b8-2d58b5ba4b4e.jpg","dateCreated":"2020-11-18T12:22:28.829Z","dateModified":"2020-11-18T12:22:35.442Z","contributedBy":"sumitc91","content":"Given an integer array of size n, find all elements that appear more than &lfloor; n/3 &rfloor; times.\nFollow-up: Could you solve the problem in linear time and in O(1) space?\n&nbsp;\nExample 1:\nInput: nums = [3,2,3]<br />Output: [3]<br />Example 2:\nInput: nums =","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/17b104bf-91b6-48b5-a7b8-2d58b5ba4b4e.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"majority-element-ii-array-medium-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}