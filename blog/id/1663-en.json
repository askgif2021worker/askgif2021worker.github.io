{"id":1663,"title":"Defuse the Bomb - Array - Easy - LeetCode","imageUrl":"icon_e0c7ac1d-e52e-489e-849e-a7842cdb2c18.jpg","dateCreated":"2020-11-15T15:48:36.584Z","dateModified":"2020-11-15T15:48:43.094Z","contributedBy":"sumitc91","content":"<p>You have a bomb to defuse, and your time is running out! Your informer will provide you with a circular array code of length of n and a key k.</p>\n<p>To decrypt the code, you must replace every number. All the numbers are replaced simultaneously.</p>\n<p>If k &gt; 0, replace the ith number with the sum of the next k numbers.<br />If k &lt; 0, replace the ith number with the sum of the previous k numbers.<br />If k == 0, replace the ith number with 0.<br />As code is circular, the next element of code[n-1] is code[0], and the previous element of code[0] is code[n-1].</p>\n<p>Given the circular array code and an integer key k, return the decrypted code to defuse the bomb!</p>\n<p>&nbsp;</p>\n<p>Example 1:</p>\n<p>Input: code = [5,7,1,4], k = 3<br />Output: [12,10,16,13]<br />Explanation: Each number is replaced by the sum of the next 3 numbers. The decrypted code is [7+1+4, 1+4+5, 4+5+7, 5+7+1]. Notice that the numbers wrap around.<br />Example 2:</p>\n<p>Input: code = [1,2,3,4], k = 0<br />Output: [0,0,0,0]<br />Explanation: When k is zero, the numbers are replaced by 0.&nbsp;<br />Example 3:</p>\n<p>Input: code = [2,4,9,3], k = -2<br />Output: [12,5,6,13]<br />Explanation: The decrypted code is [3+9, 2+3, 4+2, 9+4]. Notice that the numbers wrap around again. If k is negative, the sum is of the previous numbers.<br />&nbsp;</p>\n<p>Constraints:</p>\n<p>n == code.length<br />1 &lt;= n &lt;= 100<br />1 &lt;= code[i] &lt;= 100<br />-(n - 1) &lt;= k &lt;= n - 1</p>\n<p>&nbsp;</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    public int[] Decrypt(int[] code, int k) {\n        var result = new int[code.Length];\n        if(k==0){\n            return result;\n        }        \n        else if(k &gt; 0){\n            for(int i=0;i&lt;code.Length;i++){\n                int sum = 0;\n                for(int j=0;j&lt;k;j++){\n                    var index = (i+j+1) % code.Length;\n                    sum += code[index];\n                }\n                result[i]=sum;\n            }   \n        }\n        else{\n            for(int i=0;i&lt;code.Length;i++){\n                var sum = 0;\n                for(int j=0;j&lt;Math.Abs(k);j++){\n                    var index = i-j-1;\n                    if(index &lt;0){\n                        index = code.Length + index;\n                    }\n                    sum += code[index];\n                }\n                result[i]=sum;\n            }\n        }\n        \n        return result;\n    }\n}</code></pre>\n<p>Time Complexity: O(n*k)</p>\n<p>Space Complexity: O(1)<br /><br />Where n is the length of array and k is the count of number whose sum is required.</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/e0c7ac1d-e52e-489e-849e-a7842cdb2c18.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"defuse-the-bomb-array-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"recommendations":[{"id":1670,"title":"Find Minimum in Rotated Sorted Array - Array - Medium - LeetCode","imageUrl":"icon_d1be15f3-8f69-4050-83a2-f9c67ac5827b.jpg","dateCreated":"2020-11-18T02:56:56.195Z","dateModified":"2020-11-18T02:57:02.762Z","contributedBy":"sumitc91","content":"Suppose an array of length n sorted in ascending order is rotated between 1 and n times. For example, the array nums = [0,1,2,4,5,6,7] might become:\n[4,5,6,7,0,1,2] if it was rotated 4 times.<br />[0,1,2,4,5,6,7] if it was rotated 7 times.<br />Notice that rotating an array [a[0], a[1], a[","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/d1be15f3-8f69-4050-83a2-f9c67ac5827b.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"athletics","slug":"athletics"},{"name":"data-structure","slug":"data-structure"},{"name":"medium","slug":"medium"}],"slug":"find-minimum-in-rotated-sorted-array-array-medium-leetcode","total":0},{"id":1639,"title":"Search in Rotated Sorted Array - Array - Medium - LeetCode","imageUrl":"icon_92804ec8-8b64-41e0-a4f4-89ed11e1a5e2.jpg","dateCreated":"2020-10-24T14:15:15.013Z","dateModified":"2020-10-24T14:15:23.602Z","contributedBy":"sumitc91","content":"You are given an integer array nums sorted in ascending order, and an integer target.\nSuppose that nums is rotated at some pivot unknown to you beforehand (i.e., [0,1,2,4,5,6,7] might become [4,5,6,7,0,1,2]).\nIf target is found in the array return its index, otherwise, return -1.</p","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/92804ec8-8b64-41e0-a4f4-89ed11e1a5e2.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"search-in-rotated-sorted-array-array-medium-leetcode","total":0},{"id":1631,"title":"Largest Substring Between Two Equal Characters - Array - Easy - LeetCode","imageUrl":"icon_696afb81-fd63-43c4-a6e8-038e3152e83e.jpg","dateCreated":"2020-10-18T09:57:37.517Z","dateModified":"2020-10-18T09:57:48.765Z","contributedBy":"sumitc91","content":"Given a string s, return the length of the longest substring between two equal characters, excluding the two characters. If there is no such substring return -1.\nA substring is a contiguous sequence of characters within a string.\n&nbsp;\nExample 1:\nInput: s = \"aa\"<br />","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/696afb81-fd63-43c4-a6e8-038e3152e83e.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"largest-substring-between-two-equal-characters-array-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}