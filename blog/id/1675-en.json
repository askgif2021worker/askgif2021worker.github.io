{"id":1675,"title":"Majority Element II - Array - Medium - LeetCode","imageUrl":"icon_17b104bf-91b6-48b5-a7b8-2d58b5ba4b4e.jpg","dateCreated":"2020-11-18T12:22:28.829Z","dateModified":"2020-11-18T12:22:35.442Z","contributedBy":"sumitc91","content":"<p>Given an integer array of size n, find all elements that appear more than &lfloor; n/3 &rfloor; times.</p>\n<p>Follow-up: Could you solve the problem in linear time and in O(1) space?</p>\n<p>&nbsp;</p>\n<p>Example 1:</p>\n<p>Input: nums = [3,2,3]<br />Output: [3]<br />Example 2:</p>\n<p>Input: nums = [1]<br />Output: [1]<br />Example 3:</p>\n<p>Input: nums = [1,2]<br />Output: [1,2]<br />&nbsp;</p>\n<p>Constraints:</p>\n<p>1 &lt;= nums.length &lt;= 5 * 104<br />-109 &lt;= nums[i] &lt;= 109</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    public IList&lt;int&gt; MajorityElement(int[] nums) {\n        var result = new List&lt;int&gt;();\n        if(nums.Length == 0 ){\n            return result;\n        }\n        \n        int number1 = nums[0];\n        int number2 = nums[0];\n        int count1 = 0;\n        int count2 = 0;\n        int len = nums.Length;\n        \n        for(int i=0;i&lt;len;i++){\n            if(nums[i]==number1){\n                count1++;\n            }\n            else if(nums[i]==number2){\n                count2++;\n            }\n            else if(count1==0){\n                number1 = nums[i];\n                count1 = 1;\n            }\n            else if(count2==0){\n                number2 = nums[i];\n                count2 = 1;\n            }\n            else{\n                count1--;\n                count2--;\n            }\n        }\n        \n        count1 = 0;\n        count2 = 0;\n        \n        for(int i=0;i&lt;len;i++){\n            if(nums[i]==number1){\n                count1++;\n            }\n            else if(nums[i]==number2){\n                count2++;\n            }\n        }\n        \n        if(count1&gt;len/3){\n            result.Add(number1);\n        }\n        \n        if(count2&gt;len/3){\n            result.Add(number2);\n        }\n        \n        return result;\n    }\n}</code></pre>\n<p>Time Complexity: O(n)</p>\n<p>Space Complexity: O(1)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/17b104bf-91b6-48b5-a7b8-2d58b5ba4b4e.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"majority-element-ii-array-medium-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"recommendations":[{"id":1706,"title":"Check If Two String Arrays are Equivalent - String - Easy - LeetCode","imageUrl":"icon_38460c51-4f08-46d0-82ef-1f2263c60127.jpg","dateCreated":"2020-11-24T13:04:46.01Z","dateModified":"2020-11-24T13:04:50.906Z","contributedBy":"sumitc91","content":"Given two string arrays word1 and word2, return true if the two arrays represent the same string, and false otherwise.\nA string is represented by an array if the array elements concatenated in order forms the string.\n&nbsp;\nExample 1:\nInput: word1 = [\"ab\", \"c\"], word2 ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/38460c51-4f08-46d0-82ef-1f2263c60127.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"string","slug":"string"}],"slug":"check-if-two-string-arrays-are-equivalent-string-easy-leetcode","total":0},{"id":1679,"title":"Insert Delete GetRandom O(1) - Array - Medium - LeetCode","imageUrl":"icon_8589fcba-acbd-4690-8c6e-3f8e5511c176.jpg","dateCreated":"2020-11-19T06:35:11.658Z","dateModified":"2020-11-19T06:35:19.394Z","contributedBy":"sumitc91","content":"Implement the RandomizedSet class:\nbool insert(int val) Inserts an item val into the set if not present. Returns true if the item was not present, false otherwise.<br />bool remove(int val) Removes an item val from the set if present. Returns true if the item was present, false otherwise.<","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/8589fcba-acbd-4690-8c6e-3f8e5511c176.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"insert-delete-getrandom-o1-array-medium-leetcode","total":0},{"id":1674,"title":"Combination Sum III - Array - Medium - LeetCode","imageUrl":"icon_becf4b84-69f9-4582-a8d7-d32b8422353a.jpg","dateCreated":"2020-11-18T11:38:07.946Z","dateModified":"2020-11-18T11:38:14.249Z","contributedBy":"sumitc91","content":"Find all valid combinations of k numbers that sum up to n such that the following conditions are true:\nOnly numbers 1 through 9 are used.<br />Each number is used at most once.<br />Return a list of all possible valid combinations. The list must not contain the same combination twice, and ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/becf4b84-69f9-4582-a8d7-d32b8422353a.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"combination-sum-iii-array-medium-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}