{"id":1684,"title":"कैसे Pastebin.com डिजाइन करने के लिए (या Bit.ly)","imageUrl":"icon_9d14bd09-d9e3-48e7-8309-9e324e9d51de.jpg","dateCreated":"2020-11-20T05:04:08.797Z","dateModified":"2020-11-20T05:04:26.605Z","contributedBy":"sumitc91","content":"<p>डिज़ाइन Bit.ly - एक समान प्रश्न है, सिवाय इसके कि पेस्टिबिन को मूल अप्रशिक्षित यूआरएल के बजाय पेस्ट सामग्री को संग्रहीत करने की आवश्यकता होती है।</p>\n<p>चरण 1: मामलों और बाधाओं का उपयोग करें<br />आवश्यकताओं को इकट्ठा करें और समस्या को हल करें। उपयोग के मामलों और बाधाओं को स्पष्ट करने के लिए प्रश्न पूछें। मान्यताओं पर चर्चा करें।</p>\n<p>साक्षात्कारकर्ता के बिना स्पष्ट प्रश्नों को संबोधित करने के लिए, हम कुछ उपयोग मामलों और बाधाओं को परिभाषित करेंगे।</p>\n<p>बक्सों का इस्तेमाल करें<br />हम केवल निम्नलिखित उपयोग के मामलों को संभालने के लिए समस्या को हल करेंगे<br />उपयोगकर्ता पाठ के एक ब्लॉक में प्रवेश करता है और एक यादृच्छिक रूप से उत्पन्न लिंक प्राप्त करता है<br />समय सीमा समाप्ति<br />डिफ़ॉल्ट सेटिंग समाप्त नहीं होती है<br />वैकल्पिक रूप से एक समय समाप्त समाप्ति सेट कर सकते हैं<br />उपयोगकर्ता एक पेस्ट के यूआरएल में प्रवेश करता है और सामग्री को देखता है<br />उपयोगकर्ता अनाम है<br />सेवा पृष्ठों के विश्लेषण को ट्रैक करती है<br />मासिक आँकड़े देखें<br />सेवा समाप्त हो चुकी है<br />सेवा की उच्च उपलब्धता है<br />दायरे से बाहर<br />उपयोगकर्ता एक खाते के लिए रजिस्टर करता है<br />उपयोगकर्ता ईमेल की पुष्टि करता है<br />उपयोगकर्ता एक पंजीकृत खाते में प्रवेश करता है<br />उपयोगकर्ता दस्तावेज़ संपादित करता है<br />उपयोगकर्ता दृश्यता सेट कर सकते हैं<br />उपयोगकर्ता शॉर्टलिंक सेट कर सकता है<br />अड़चनें और धारणाएँ<br />राज्य की धारणाएँ<br />यातायात समान रूप से वितरित नहीं किया जाता है<br />एक छोटी कड़ी के बाद तेजी से होना चाहिए<br />अतीत केवल पाठ हैं<br />पृष्ठ दृश्य विश्लेषण के लिए वास्तविक समय की आवश्यकता नहीं है<br />10 मिलियन उपयोगकर्ता<br />प्रति माह 10 मिलियन पेस्ट लिखते हैं<br />प्रति माह 100 मिलियन पेस्ट पढ़ता है<br />10: 1 अनुपात लिखने के लिए पढ़ें<br />उपयोग की गणना करें<br />अपने साक्षात्कारकर्ता के साथ स्पष्ट करें कि क्या आपको बैक-ऑफ-द-लिफाफा उपयोग गणनाओं को चलाना चाहिए।</p>\n<p>प्रति पेस्ट आकार<br />प्रति पेस्ट 1 केबी सामग्री<br />शॉर्टलिंक - 7 बाइट्स<br />expiration_length_in_minutes - 4 बाइट्स<br />create_at - 5 बाइट्स<br />पेस्ट_पथ - 255 बाइट्स<br />कुल = ~ 1.27 केबी<br />प्रति माह 12.7 जीबी नई पेस्ट सामग्री<br />1.27 केबी प्रति पेस्ट * 10 मिलियन पेस्ट प्रति माह<br />~ 3 साल में 450 जीबी का नया पेस्ट कंटेंट<br />3 साल में 360 मिलियन शॉर्टलिंक<br />मान लें कि मौजूदा वाले अपडेट के बजाय अधिकांश नए पेस्ट हैं<br />4 पेस्ट औसतन प्रति सेकंड लिखते हैं<br />औसत पर प्रति सेकंड 40 रीड अनुरोध<br />आसान रूपांतरण गाइड:</p>\n<p>2.5 मिलियन सेकंड प्रति माह<br />1 प्रति सेकंड अनुरोध = प्रति माह 2.5 मिलियन अनुरोध<br />40 प्रति सेकंड अनुरोध = प्रति माह 100 मिलियन अनुरोध<br />प्रति माह 400 अनुरोध = प्रति माह 1 बिलियन अनुरोध<br />चरण 2: एक उच्च स्तरीय डिज़ाइन बनाएं<br />सभी महत्वपूर्ण घटकों के साथ एक उच्च स्तरीय डिजाइन की रूपरेखा।</p>\n<p>Imgur</p>\n<p>चरण 3: डिजाइन कोर घटक<br />प्रत्येक मुख्य घटक के लिए विवरण में गोता लगाएँ।</p>\n<p>मामले का उपयोग करें: उपयोगकर्ता पाठ के एक ब्लॉक में प्रवेश करता है और एक यादृच्छिक रूप से उत्पन्न लिंक प्राप्त करता है<br />हम एक बड़े हैश टेबल के रूप में एक रिलेशनल डेटाबेस का उपयोग कर सकते हैं, उत्पन्न यूआरएल को एक फ़ाइल सर्वर पर पेस्ट कर सकते हैं और पेस्ट फाइल वाले पथ पर ले जा सकते हैं।</p>\n<p>एक फ़ाइल सर्वर के प्रबंधन के बजाय, हम एक प्रबंधित ऑब्जेक्ट स्टोर जैसे कि अमेजन S3 या NoSQL दस्तावेज़ स्टोर का उपयोग कर सकते हैं।</p>\n<p>एक बड़े हैश टेबल के रूप में अभिनय करने वाले एक रिलेशनल डेटाबेस का विकल्प, हम एक NoSQL कुंजी-मूल्य स्टोर का उपयोग कर सकते हैं। हमें SQL या NoSQL को चुनने के बीच ट्रेडऑफ पर चर्चा करनी चाहिए। निम्नलिखित चर्चा संबंधपरक डेटाबेस दृष्टिकोण का उपयोग करती है।</p>\n<p>क्लाइंट एक रिवर्स प्रॉक्सी के रूप में चल रहा है, वेब सर्वर के लिए एक पेस्ट पेस्ट अनुरोध भेजता है<br />वेब सर्वर एपीआई सर्वर को लिखने के अनुरोध को आगे बढ़ाता है<br />निम्न API सर्वर लिखें:<br />एक अद्वितीय यूआरएल उत्पन्न करता है<br />जाँचता है कि डुप्लिकेट के लिए SQL डेटाबेस को देखकर url अद्वितीय है या नहीं<br />यदि url अद्वितीय नहीं है, तो यह एक और url उत्पन्न करता है<br />यदि हमने एक कस्टम url का समर्थन किया है, तो हम उपयोगकर्ता-आपूर्ति (एक डुप्लिकेट के लिए भी जांच कर सकते हैं) का उपयोग कर सकते हैं<br />SQL डेटाबेस पेस्ट तालिका में सहेजता है<br />पेस्ट डेटा को ऑब्जेक्ट स्टोर में सहेजता है<br />यूआरएल लौटाता है<br />अपने साक्षात्कारकर्ता के साथ स्पष्ट करें कि आपको कितने कोड लिखने की उम्मीद है।</p>\n<p>चिपकाने की मेज में निम्नलिखित संरचना हो सकती है:</p>\n<p>शॉर्लिंक चार (7) पूरी नहीं<br />expiration_length_in_minutes पूर्ण नहीं है<br />create_at डेटाटाइम नहीं NULL<br />paste_path varchar (255) पूर्ण नहीं है<br />प्राथमिक कुंजी (शालिंक)<br />शॉर्टलिंक कॉलम पर आधारित होने वाली प्राथमिक कुंजी सेट करने से एक इंडेक्स बनता है जिसका उपयोग डेटाबेस अद्वितीयता को लागू करने के लिए करता है। हम लुकअप को तेज करने के लिए create_at पर एक अतिरिक्त इंडेक्स बनाएंगे (संपूर्ण तालिका को स्कैन करने के बजाय लॉग-टाइम) और डेटा को मेमोरी में बनाए रखने के लिए। मेमोरी से 1 एमबी क्रमिक रूप से पढ़ने में लगभग 250 माइक्रोसेकंड लगते हैं, जबकि एसएसडी से पढ़ने में 4x लगते हैं और डिस्क से 80x5 मिनट लगते हैं</p>\n<p>अद्वितीय url उत्पन्न करने के लिए, हम कर सकते हैं:</p>\n<p>उपयोगकर्ता के ip_address + टाइमस्टैम्प का MD5 हैश लें<br />MD5 एक व्यापक रूप से उपयोग किया जाने वाला हैशिंग फ़ंक्शन है जो 128-बिट हैश मान का उत्पादन करता है<br />MD5 समान रूप से वितरित किया जाता है<br />वैकल्पिक रूप से, हम यादृच्छिक रूप से उत्पन्न डेटा के MD5 हैश भी ले सकते हैं<br />बेस 62 एमडी 5 हैश को एनकोड करता है<br />बेस 62 इनकोड [a-zA-Z0-9] के लिए अच्छी तरह से काम करता है, जो उरोजों के लिए अच्छा काम करता है, जिससे महत्वपूर्ण चरित्रों से बचने की आवश्यकता समाप्त हो जाती है<br />मूल इनपुट के लिए केवल एक हैश परिणाम है और बेस 62 नियतात्मक है (कोई यादृच्छिकता शामिल नहीं)<br />बेस 64 एक और लोकप्रिय एन्कोडिंग है, लेकिन अतिरिक्त + और / वर्णों के कारण यूआरएल के लिए समस्याएँ प्रदान करता है<br />निम्नलिखित बेस 62 pseudocode O (k) समय में चलता है जहां k अंकों की संख्या = 7 है:<br />def base_encode (संख्या, आधार = 62):<br />&nbsp; &nbsp; अंक = []<br />&nbsp; &nbsp; जबकि अंक&gt; 0<br />&nbsp; &nbsp; &nbsp; शेष = मोडुलो (संख्या, आधार)<br />&nbsp; &nbsp; &nbsp; digits.push (शेष)<br />&nbsp; &nbsp; &nbsp; संख्या = विभाजन (संख्या, आधार)<br />&nbsp; &nbsp; digits = digits.reverse</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/9d14bd09-d9e3-48e7-8309-9e324e9d51de.jpg","subContents":[],"category":{"name":"शिक्षण","slug":"tutorials"},"slug":"how-to-design-pastebin.com-or-bit.ly","tags":[{"name":"डिज़ाइन","slug":"design"},{"name":"interview","slug":"interview"},{"name":"प्रणाली-की-रूपरेखा","slug":"system-design"}],"recommendations":[{"id":92,"title":"How will you find the middle of the Linked List?","imageUrl":"12b10340-a78f-4996-82b0-fc004964bbed_middle-element-linkedlist.png","dateCreated":"2018-08-07T15:12:05.744Z","dateModified":"2018-08-07T15:22:17.513Z","contributedBy":"AskGif","content":"To find the middle of a linked list we can use many approaches. let's discuss our first approach having O(n) time complexity with 2 passes.\r\nWe will be calculating the length n of the linked list in the first iteration and in second iteration we will be traversing to n/2 length to get the ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/12b10340-a78f-4996-82b0-fc004964bbed_middle-element-linkedlist.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"interview","slug":"interview"},{"name":"linked-list","slug":"linked-list"},{"name":"java","slug":"java"},{"name":"प्रशन","slug":"questions"}],"slug":"how-will-you-find-the-middle-of-the-linked-list","total":0},{"id":74,"title":"इटरेटर पैटर्न क्या है?","imageUrl":"2ae1cc9a-b9ca-4dd5-8faf-ae38f2bdd6c3_Iterator-pattern.png","dateCreated":"2018-08-01T15:49:45.656Z","dateModified":"2018-08-01T17:23:52.861Z","contributedBy":"AskGif","content":"In object-oriented programming, the iterator pattern is a design pattern in which an iterator is used to traverse a container and access the container's elements. The iterator pattern decouples algorithms from containers; in some cases, algorithms are necessarily container-specific and thus canno","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/2ae1cc9a-b9ca-4dd5-8faf-ae38f2bdd6c3_Iterator-pattern.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"प्रशन","slug":"questions"},{"name":"design-patterns","slug":"design-patterns"},{"name":"behavioral-patterns","slug":"behavioral-patterns"},{"name":"interview","slug":"interview"}],"slug":"what-is-iterator-pattern","total":0},{"id":27,"title":"Convert an Array into Zig-Zag Fashion","imageUrl":"6f66c008-05c5-4b5c-9d26-c0e57e301991_Zigzag-Array.png","dateCreated":"2018-07-13T17:10:52.741Z","dateModified":"2018-07-31T05:20:13.559Z","contributedBy":"AskGif","content":"<span style=\"font-family: 'Open Sans', Helvetica, Arial, Verdana, sans-serif; font-size: 15px; text-align: justify;\">You are given an array of some distinct elements, you have to rearrange those elements of the array in a zig-zag fashion. The resultant array should be in format&nbsp; a &lt; b &gt","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/6f66c008-05c5-4b5c-9d26-c0e57e301991_Zigzag-Array.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"interview","slug":"interview"},{"name":"java","slug":"java"},{"name":"array","slug":"array"}],"slug":"convert-an-array-into-zig-zag-fashion","total":0},{"id":17,"title":"Write a Simple Hello World Program in JAVA.","imageUrl":"f91c0323-afd7-4b3e-aa1f-71c79e9913f2_hello-world-java.png","dateCreated":"2018-07-12T06:44:09.184Z","dateModified":"2018-07-12T06:44:59.673Z","contributedBy":"AskGif","content":"Writing a simple hello world programm in java.&nbsp;Java is a general-purpose computer-programming language that is concurrent, class-based, object-oriented, and specifically designed to have as few implementation dependencies as possible. It is intended to let application developers \"write once,","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/f91c0323-afd7-4b3e-aa1f-71c79e9913f2_hello-world-java.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"interview","slug":"interview"},{"name":"java","slug":"java"}],"slug":"write-a-simple-hello-world-program-in-java","total":0}]}