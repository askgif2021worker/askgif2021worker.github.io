{"id":1690,"title":"AWS पर लाखों उपयोगकर्ताओं के लिए एक प्रणाली कैसे डिज़ाइन करें","imageUrl":"icon_c4c206e1-63c2-46f8-a9b3-076b94e481a7.png","dateCreated":"2020-11-20T07:07:56.332Z","dateModified":"2020-11-20T07:08:06.04Z","contributedBy":"sumitc91","content":"<p>चरण 1: मामलों और बाधाओं का उपयोग करें<br />आवश्यकताओं को इकट्ठा करें और समस्या को हल करें। उपयोग के मामलों और बाधाओं को स्पष्ट करने के लिए प्रश्न पूछें। मान्यताओं पर चर्चा करें।</p>\n<p>साक्षात्कारकर्ता के बिना स्पष्ट प्रश्नों को संबोधित करने के लिए, हम कुछ उपयोग मामलों और बाधाओं को परिभाषित करेंगे।</p>\n<p>बक्सों का इस्तेमाल करें<br />इस समस्या को हल करने के लिए एक पुनरावृत्त दृष्टिकोण लेता है: 1) बेंचमार्क / लोड टेस्ट, 2) अड़चनों के लिए प्रोफाइल 3) विकल्प और व्यापार-नापसंद का मूल्यांकन करते समय अड़चनों को संबोधित करते हैं, और 4) दोहराते हैं, जो स्केलेबल डिजाइनों के लिए मूल डिजाइन विकसित करने के लिए अच्छा पैटर्न है।</p>\n<p>जब तक आपके पास AWS में कोई पृष्ठभूमि नहीं है या आप ऐसी स्थिति के लिए आवेदन कर रहे हैं जिसके लिए AWS ज्ञान की आवश्यकता है, AWS- विशिष्ट विवरण की आवश्यकता नहीं है। हालांकि, इस अभ्यास में चर्चा किए गए सिद्धांतों में से अधिकांश AWS पारिस्थितिकी तंत्र के बाहर अधिक सामान्यतः लागू हो सकते हैं।</p>\n<p>हम केवल निम्नलिखित उपयोग के मामलों को संभालने के लिए समस्या को हल करेंगे<br />उपयोगकर्ता एक पढ़ने या लिखने का अनुरोध करता है<br />सेवा प्रसंस्करण करती है, उपयोगकर्ता डेटा संग्रहीत करती है, फिर परिणाम लौटाती है<br />लाखों उपयोगकर्ताओं को थोड़ी मात्रा में सेवा देने से सेवा विकसित करने की आवश्यकता है<br />सामान्य स्केलिंग पैटर्न पर चर्चा करें क्योंकि हम बड़ी संख्या में उपयोगकर्ताओं और अनुरोधों को संभालने के लिए एक वास्तुकला विकसित करते हैं<br />सेवा की उच्च उपलब्धता है<br />अड़चनें और धारणाएँ<br />राज्य की धारणाएँ<br />यातायात समान रूप से वितरित नहीं किया जाता है<br />संबंधपरक डेटा की आवश्यकता<br />1 उपयोगकर्ता से करोड़ों उपयोगकर्ताओं के लिए स्केल<br />के रूप में उपयोगकर्ताओं की वृद्धि को नकारें:<br />उपयोगकर्ता +<br />उपयोगकर्ता ++<br />उपयोगकर्ता +++<br />...<br />10 मिलियन उपयोगकर्ता<br />1 बिलियन प्रति माह लिखता है<br />प्रति माह 100 बिलियन पढ़ता है<br />100: 1 अनुपात लिखने के लिए पढ़ें<br />1 केबी सामग्री प्रति लेखन<br />उपयोग की गणना करें<br />अपने साक्षात्कारकर्ता के साथ स्पष्ट करें कि क्या आपको बैक-ऑफ-द-लिफाफा उपयोग गणनाओं को चलाना चाहिए।</p>\n<p>1 प्रति माह नई सामग्री का टी.बी.<br />1 KB प्रति लेखन * 1 बिलियन प्रति माह लिखता है<br />3 वर्षों में नई सामग्री के 36 टीबी<br />मान लें कि अधिकांश लिखी गई सामग्री मौजूदा अद्यतनों के बजाय नई सामग्री से हैं<br />400 प्रति सेकंड औसतन लिखते हैं<br />औसतन प्रति सेकंड 40,000 पढ़ता है<br />आसान रूपांतरण गाइड:</p>\n<p>2.5 मिलियन सेकंड प्रति माह<br />1 प्रति सेकंड अनुरोध = प्रति माह 2.5 मिलियन अनुरोध<br />40 प्रति सेकंड अनुरोध = प्रति माह 100 मिलियन अनुरोध<br />प्रति माह 400 अनुरोध = प्रति माह 1 बिलियन अनुरोध<br />चरण 2: एक उच्च स्तरीय डिज़ाइन बनाएं<br />सभी महत्वपूर्ण घटकों के साथ एक उच्च स्तरीय डिजाइन की रूपरेखा।</p>\n<p>Imgur</p>\n<p>चरण 3: डिजाइन कोर घटक<br />प्रत्येक मुख्य घटक के लिए विवरण में गोता लगाएँ।</p>\n<p>मामले का उपयोग करें: उपयोगकर्ता एक पढ़ने या लिखने का अनुरोध करता है<br />लक्ष्य<br />केवल 1-2 उपयोगकर्ताओं के साथ, आपको केवल एक मूल सेटअप की आवश्यकता है<br />सादगी के लिए एकल बॉक्स<br />जरूरत पड़ने पर वर्टिकल स्केलिंग<br />अड़चनों को निर्धारित करने के लिए मॉनिटर करें<br />एक एकल बॉक्स के साथ शुरू करो<br />EC2 पर वेब सर्वर<br />उपयोगकर्ता डेटा के लिए भंडारण<br />MySQL डाटाबेस<br />वर्टिकल स्केलिंग का उपयोग करें:</p>\n<p>बस एक बड़ा बॉक्स चुनें<br />स्केल कैसे करें, यह निर्धारित करने के लिए मैट्रिक्स पर नज़र रखें<br />बाधाओं को निर्धारित करने के लिए बुनियादी निगरानी का उपयोग करें: सीपीयू, मेमोरी, आईओ, नेटवर्क, आदि<br />CloudWatch, शीर्ष, nagios, आँकड़े, ग्रेफाइट, आदि<br />लंबवत रूप से स्केलिंग बहुत महंगी मिल सकती है<br />कोई अतिरेक / असफलता नहीं<br />व्यापार-नापसंद, विकल्प और अतिरिक्त विवरण:</p>\n<p>वर्टिकल स्केलिंग का विकल्प क्षैतिज स्केलिंग है<br />SQL से शुरू करें, NoSQL पर विचार करें<br />बाधाओं का मानना ​​है कि संबंधपरक डेटा की आवश्यकता है। हम सिंगल बॉक्स पर MySQL डेटाबेस का उपयोग करना शुरू कर सकते हैं।</p>\n<p>व्यापार-नापसंद, विकल्प और अतिरिक्त विवरण:</p>\n<p>संबंधित डेटाबेस प्रबंधन प्रणाली (RDBMS) अनुभाग देखें<br />SQL या NoSQL का उपयोग करने के कारणों पर चर्चा करें<br />सार्वजनिक स्थैतिक IP असाइन करें<br />इलास्टिक आईपी एक सार्वजनिक समापन बिंदु प्रदान करता है जिसका आईपी रिबूट पर नहीं बदलता है<br />विफलता के साथ मदद करता है, बस एक नए आईपी के लिए डोमेन को इंगित करें<br />एक DNS का उपयोग करें<br />डोमेन को उदाहरण के सार्वजनिक IP पर मैप करने के लिए मार्ग 53 जैसे DNS जोड़ें।</p>\n<p>व्यापार-नापसंद, विकल्प और अतिरिक्त विवरण:</p>\n<p>डोमेन नाम सिस्टम अनुभाग देखें<br />वेब सर्वर को सुरक्षित करें<br />केवल आवश्यक पोर्ट खोलें<br />वेब सर्वर को आने वाले अनुरोधों का जवाब देने की अनुमति दें:<br />HTTP के लिए 80<br />HTTPS के लिए 443<br />एसएसएच के लिए केवल आईपी को श्वेत करने के लिए 22<br />वेब सर्वर को आउटबाउंड कनेक्शन आरंभ करने से रोकें<br />व्यापार-नापसंद, विकल्प और अतिरिक्त विवरण:</p>\n<p>सुरक्षा अनुभाग देखें<br />चरण 4: डिजाइन को स्केल करें<br />बाधाओं को पहचानें और पता करें, अड़चनें</p>\n<p>उपयोगकर्ता +<br />Imgur</p>\n<p>मान्यताओं<br />हमारी उपयोगकर्ता गणना शुरू हो रही है और लोड हमारे एकल बॉक्स पर बढ़ रहा है। हमारे बेंचमार्क / लोड टेस्ट और प्रोफाइलिंग MySQL Database को ज्यादा से ज्यादा मेमोरी और CPU रिसोर्सेस लेने के लिए इशारा कर रहे हैं, जबकि यूजर कंटेंट डिस्क स्पेस भर रहा है।</p>\n<p>हम अभी तक वर्टिकल स्केलिंग के साथ इन मुद्दों को संबोधित करने में सक्षम हैं। दुर्भाग्य से, यह काफी महंगा हो गया है और यह MySQL डाटाबेस और वेब सर्वर के स्वतंत्र स्केलिंग की अनुमति नहीं देता है।</p>\n<p>लक्ष्य<br />एकल बॉक्स पर हल्का लोड करें और स्वतंत्र स्केलिंग के लिए अनुमति दें<br />ऑब्जेक्ट स्टोर में स्थिर सामग्री को अलग से स्टोर करें<br />MySQL डेटाबेस को एक अलग बॉक्स में ले जाएँ<br />नुकसान<br />इन परिवर्तनों से जटिलता बढ़ेगी और ऑब्जेक्ट स्टोर और MySQL डेटाबेस को इंगित करने के लिए वेब सर्वर में परिवर्तन की आवश्यकता होगी<br />नए घटकों को सुरक्षित करने के लिए अतिरिक्त सुरक्षा उपाय किए जाने चाहिए<br />AWS की लागत भी बढ़ सकती है, लेकिन अपने दम पर समान प्रणालियों के प्रबंधन की लागत के साथ तौला जाना चाहिए<br />स्थिर सामग्री को अलग से स्टोर करें<br />S3 जैसे sto के लिए एक प्रबंधित ऑब्जेक्ट स्टोर का उपयोग करने पर विचार करें</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/c4c206e1-63c2-46f8-a9b3-076b94e481a7.png","subContents":[],"category":{"name":"शिक्षण","slug":"tutorials"},"slug":"how-to-design-a-system-that-scales-to-millions-of-users-on-aws","tags":[{"name":"डिज़ाइन","slug":"design"},{"name":"interview","slug":"interview"},{"name":"प्रणाली-की-रूपरेखा","slug":"system-design"}],"recommendations":[{"id":97,"title":"What is a Linked List?","imageUrl":"92f2fc67-2e99-4054-b96b-936fd01ebeb0_linked-list-with-label.png","dateCreated":"2018-08-08T09:14:37.7Z","dateModified":"2018-08-08T09:16:54.109Z","contributedBy":"AskGif","content":"A linked list is a data structure used for storing collections of data. A linked list has the following properties.\r\n- Successive elements are connected by pointers\r\n- The last element points to NULL\r\n- Can grow or shrink in size during execution of a program\r\n- Can be","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/92f2fc67-2e99-4054-b96b-936fd01ebeb0_linked-list-with-label.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"प्रशन","slug":"questions"},{"name":"interview","slug":"interview"},{"name":"linked-list","slug":"linked-list"}],"slug":"what-is-a-linked-list","total":0},{"id":74,"title":"इटरेटर पैटर्न क्या है?","imageUrl":"2ae1cc9a-b9ca-4dd5-8faf-ae38f2bdd6c3_Iterator-pattern.png","dateCreated":"2018-08-01T15:49:45.656Z","dateModified":"2018-08-01T17:23:52.861Z","contributedBy":"AskGif","content":"In object-oriented programming, the iterator pattern is a design pattern in which an iterator is used to traverse a container and access the container's elements. The iterator pattern decouples algorithms from containers; in some cases, algorithms are necessarily container-specific and thus canno","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/2ae1cc9a-b9ca-4dd5-8faf-ae38f2bdd6c3_Iterator-pattern.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"प्रशन","slug":"questions"},{"name":"design-patterns","slug":"design-patterns"},{"name":"behavioral-patterns","slug":"behavioral-patterns"},{"name":"interview","slug":"interview"}],"slug":"what-is-iterator-pattern","total":0},{"id":73,"title":"टेम्पलेट पैटर्न क्या है?","imageUrl":"1573c83b-c91b-4944-be45-b6b2f866e450_Template_Method.png","dateCreated":"2018-08-01T15:41:25.221Z","dateModified":"2018-08-02T10:59:06.373Z","contributedBy":"AskGif","content":"In software engineering, the template method pattern is a behavioural design pattern that defines the program skeleton of an algorithm in an operation, deferring some steps to subclasses. It lets one redefine certain steps of an algorithm without changing the algorithm's structure. The template m","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/1573c83b-c91b-4944-be45-b6b2f866e450_Template_Method.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"प्रशन","slug":"questions"},{"name":"behavioral-patterns","slug":"behavioral-patterns"},{"name":"interview","slug":"interview"},{"name":"design-patterns","slug":"design-patterns"}],"slug":"what-is-template-pattern","total":0},{"id":17,"title":"Write a Simple Hello World Program in JAVA.","imageUrl":"f91c0323-afd7-4b3e-aa1f-71c79e9913f2_hello-world-java.png","dateCreated":"2018-07-12T06:44:09.184Z","dateModified":"2018-07-12T06:44:59.673Z","contributedBy":"AskGif","content":"Writing a simple hello world programm in java.&nbsp;Java is a general-purpose computer-programming language that is concurrent, class-based, object-oriented, and specifically designed to have as few implementation dependencies as possible. It is intended to let application developers \"write once,","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/f91c0323-afd7-4b3e-aa1f-71c79e9913f2_hello-world-java.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"interview","slug":"interview"},{"name":"java","slug":"java"}],"slug":"write-a-simple-hello-world-program-in-java","total":0}]}