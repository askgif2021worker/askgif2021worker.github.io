{"id":1693,"title":"उपलब्धता बनाम संगति","imageUrl":"icon_a22695c8-b2d8-4ca6-8546-265c07e566d7.png","dateCreated":"2020-11-20T07:30:12.189Z","dateModified":"2020-11-20T07:30:26.472Z","contributedBy":"sumitc91","content":"<p>कैप प्रमेय</p>\n<p>एक वितरित कंप्यूटर सिस्टम में, आप केवल दो गारंटियों का समर्थन कर सकते हैं:</p>\n<p>संगति - हर पढ़ने को सबसे हालिया लेखन या एक त्रुटि प्राप्त होती है<br />उपलब्धता - हर अनुरोध को एक प्रतिक्रिया मिलती है, बिना गारंटी के कि इसमें जानकारी का सबसे हाल का संस्करण है<br />विभाजन सहिष्णुता - नेटवर्क विफलताओं के कारण मनमाने ढंग से विभाजन के बावजूद प्रणाली का संचालन जारी है<br />नेटवर्क विश्वसनीय नहीं हैं, इसलिए आपको विभाजन सहिष्णुता का समर्थन करना होगा। आपको निरंतरता और उपलब्धता के बीच एक सॉफ्टवेयर ट्रेडऑफ बनाना होगा।</p>\n<p>सीपी - स्थिरता और विभाजन सहिष्णुता<br />विभाजित नोड से प्रतिक्रिया की प्रतीक्षा करने के परिणामस्वरूप समयबाह्य त्रुटि हो सकती है। यदि आपके व्यवसाय को परमाणु पढ़ने और लिखने की आवश्यकता है तो सीपी एक अच्छा विकल्प है।</p>\n<p>एपी - उपलब्धता और विभाजन सहिष्णुता<br />प्रतिक्रियाएं किसी भी नोड पर उपलब्ध डेटा के सबसे आसानी से उपलब्ध संस्करण को वापस करती हैं, जो कि नवीनतम नहीं हो सकता है। विभाजन के हल होने पर राइट्स को प्रचार करने में कुछ समय लग सकता है।</p>\n<p>एपी एक अच्छा विकल्प है यदि व्यापार को अंतिम स्थिरता के लिए अनुमति देता है या जब सिस्टम को बाहरी त्रुटियों के बावजूद काम जारी रखने की आवश्यकता होती है।</p>\n<p>स्रोत (ओं) और आगे पढ़ने<br />सीएपी प्रमेय पर दोबारा गौर किया<br />कैप प्रमेय के लिए एक सादा अंग्रेजी परिचय<br />कैप FAQ<br />कैप प्रमेय<br />संगति पैटर्न<br />एक ही डेटा की कई प्रतियों के साथ, हमें उन विकल्पों के साथ सामना करना पड़ता है कि उन्हें कैसे सिंक्रनाइज़ किया जाए ताकि ग्राहकों के पास डेटा का एक सुसंगत दृश्य हो। सीएपी प्रमेय से संगति की परिभाषा को याद करें - हर पढ़ने को सबसे हालिया लेखन या एक त्रुटि प्राप्त होती है।</p>\n<p>कमजोर संगति<br />एक लिखने के बाद, पढ़ता है या नहीं देख सकता है। सबसे अच्छा प्रयास दृष्टिकोण लिया जाता है।</p>\n<p>इस दृष्टिकोण को मेमकास्टेड जैसी प्रणालियों में देखा जाता है। कमजोर सुसंगतता वीओआईपी, वीडियो चैट और रियलटाइम मल्टीप्लेयर गेम जैसे वास्तविक समय के उपयोग के मामलों में अच्छी तरह से काम करती है। उदाहरण के लिए, यदि आप एक फोन कॉल पर हैं और कुछ सेकंड के लिए रिसेप्शन खो देते हैं, तो जब आप कनेक्शन प्राप्त करते हैं तो आप यह नहीं सुनते हैं कि कनेक्शन हानि के बारे में क्या बोला गया था।</p>\n<p>आखिरकार संगति<br />एक लिखने के बाद, रीड्स अंततः इसे देखेंगे (आमतौर पर मिलीसेकंड के भीतर)। डेटा को एसिंक्रोनस रूप से दोहराया जाता है।</p>\n<p>यह दृष्टिकोण DNS और ईमेल जैसी प्रणालियों में देखा जाता है। अंततः उपलब्ध प्रणालियों में अच्छी तरह से काम करता है।</p>\n<p>मजबूत स्थिरता<br />लिखने के बाद, रीड्स इसे देखेंगे। डेटा को सिंक्रोनाइज़ किया जाता है।</p>\n<p>यह दृष्टिकोण फ़ाइल सिस्टम और RDBMSes में देखा जाता है। मजबूत संगतता उन प्रणालियों में अच्छी तरह से काम करती है जिन्हें लेनदेन की आवश्यकता होती है।</p>\n<p>स्रोत (ओं) और आगे पढ़ने<br />डेटा केंद्रों में लेनदेन<br />उपलब्धता पैटर्न<br />उच्च उपलब्धता का समर्थन करने के लिए दो पूरक पैटर्न हैं: असफलता और प्रतिकृति।</p>\n<p>फेल-ओवर<br />सक्रिय निष्क्रिय<br />सक्रिय-निष्क्रिय विफल-ओवर के साथ, दिल की धड़कन को सक्रिय और निष्क्रिय सर्वर के बीच स्टैंडबाय पर भेजा जाता है। यदि दिल की धड़कन बाधित हो जाती है, तो निष्क्रिय सर्वर सक्रिय आईपी पते को लेता है और सेवा फिर से शुरू करता है।</p>\n<p>डाउनटाइम की लंबाई इस बात से निर्धारित होती है कि क्या निष्क्रिय सर्वर पहले से ही 'हॉट' स्टैंडबाय में चल रहा है या क्या इसे 'कोल्ड' स्टैंडबाय से शुरू करने की आवश्यकता है। केवल सक्रिय सर्वर ट्रैफ़िक को संभालता है।</p>\n<p>एक्टिव-पैसिव फेलओवर को मास्टर-स्लेव फेलओवर भी कहा जा सकता है।</p>\n<p>सक्रिय-सक्रिय<br />सक्रिय-सक्रिय में, दोनों सर्वर ट्रैफ़िक का प्रबंधन कर रहे हैं, उनके बीच लोड फैला रहे हैं।</p>\n<p>यदि सर्वर सार्वजनिक-सामना कर रहे हैं, तो DNS को दोनों सर्वरों के सार्वजनिक आईपी के बारे में जानना होगा। यदि सर्वर आंतरिक-सामना कर रहे हैं, तो एप्लिकेशन लॉजिक को दोनों सर्वरों के बारे में जानना होगा।</p>\n<p>सक्रिय-सक्रिय फ़ेलओवर को मास्टर-मास्टर फ़ेलओवर भी कहा जा सकता है।</p>\n<p>नुकसान:<br />असफलता अधिक हार्डवेयर और अतिरिक्त जटिलता को जोड़ती है।<br />यदि किसी नए लिखित डेटा को निष्क्रिय करने के लिए दोहराया जा सकता है तो सक्रिय प्रणाली विफल होने पर डेटा के नुकसान की संभावना है।<br />प्रतिकृति<br />गुरु-दास और गुरु-गुरु<br />इस विषय पर डेटाबेस अनुभाग में आगे चर्चा की गई है:</p>\n<p>मास्टर-दास प्रतिकृति<br />गुरु-गुरु की प्रतिकृति<br />संख्या में उपलब्धता<br />सेवा उपलब्ध होने के प्रतिशत के रूप में उपलब्धता को अक्सर अपटाइम (या डाउनटाइम) द्वारा निर्धारित किया जाता है। उपलब्धता को आमतौर पर 9s की संख्या में मापा जाता है - 99.99% उपलब्धता वाली एक सेवा को चार 9s के रूप में वर्णित किया गया है।</p>\n<p>99.9% उपलब्धता - तीन 9s<br />अवधि स्वीकार्य डाउनटाइम<br />डाउनटाइम प्रति वर्ष 8h 45min 57s<br />डाउनटाइम प्रति माह 43 मीटर 49.7 एस<br />डाउनटाइम प्रति सप्ताह 10 मीटर 4.8s<br />डाउनटाइम प्रति दिन 1 मी 26.4 एस<br />99.99% उपलब्धता - चार 9 एस<br />अवधि स्वीकार्य डाउनटाइम<br />डाउनटाइम प्रति वर्ष 52min 35.7<br />डाउनटाइम प्रति माह 4 मी 23 से<br />डाउनटाइम प्रति सप्ताह 1 मी 5 एस<br />डाउनटाइम प्रति दिन 8.6s<br />अनुक्रम में समानांतर बनाम में उपलब्धता<br />यदि किसी सेवा में विफलता के लिए कई घटक होते हैं, तो सेवा की समग्र उपलब्धता इस बात पर निर्भर करती है कि घटक क्रम में हैं या समानांतर।</p>\n<p>क्रम में<br />समग्र उपलब्धता घट जाती है जब उपलब्धता के साथ दो घटक &lt;100% क्रम में होते हैं:</p>\n<p>उपलब्धता (कुल) = उपलब्धता (फू) * उपलब्धता (बार)<br />यदि फू और बार दोनों में 99.9% उपलब्धता है, तो अनुक्रम में उनकी कुल उपलब्धता 99.8% होगी।</p>\n<p>समान्तर में<br />उपलब्धता के साथ दो घटक होने पर कुल उपलब्धता बढ़ जाती है &lt;100% समानांतर में हैं:</p>\n<p>Av</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a22695c8-b2d8-4ca6-8546-265c07e566d7.png","subContents":[],"category":{"name":"शिक्षण","slug":"tutorials"},"slug":"availability-vs-consistency","tags":[{"name":"interview","slug":"interview"}],"recommendations":[{"id":1692,"title":"विलंबता बनाम थ्रूपुट","imageUrl":"icon_9e97e6f4-fec4-4e60-8bb0-618e048a04a5.jpg","dateCreated":"2020-11-20T07:28:07.813Z","dateModified":"2020-11-20T07:28:15.212Z","contributedBy":"sumitc91","content":"विलंबता कुछ क्रिया करने या कुछ परिणाम उत्पन्न करने का समय है।\nथ्रूपुट समय की प्रति इकाई इस तरह के कार्यों या परिणामों की संख्या है।\nआम तौर पर, आपको स्वीकार्य विलंबता के साथ अधिकतम थ्रूपुट के लिए लक्ष्य करना चाहिए।","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/9e97e6f4-fec4-4e60-8bb0-618e048a04a5.jpg","category":{"name":"शिक्षण","slug":"tutorials"},"tags":[{"name":"interview","slug":"interview"}],"slug":"latency-vs-throughput","total":0},{"id":112,"title":"Search an element in binary tree without recursion.","imageUrl":"b3ea6acf-6279-4e29-b3cd-bb09edbc2784_binary-tree.jpg","dateCreated":"2018-08-16T09:08:38.069Z","dateModified":"2018-08-16T09:09:08.341Z","contributedBy":"AskGif","content":"We can use level order traversal for solving this problem. The only change required in level order traversal is, instead of printing the date we just need to check whether the root data is equal to the element we want to search.\r\nsource:&nbsp;Data Structures and Algorithms Made Easy in Jav","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/b3ea6acf-6279-4e29-b3cd-bb09edbc2784_binary-tree.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"interview","slug":"interview"},{"name":"java","slug":"java"},{"name":"traversal","slug":"traversal"},{"name":"tree","slug":"tree"},{"name":"प्रशन","slug":"questions"},{"name":"binary-tree","slug":"binary-tree"},{"name":"level-order","slug":"level-order"}],"slug":"search-an-element-in-binary-tree-without-recursion","total":0},{"id":33,"title":"Generate all the possible k-ary strings of length and digit upto k","imageUrl":"9ed0c558-acca-470f-9406-597cf137ad77_n-ary-tree-1.jpg","dateCreated":"2018-07-16T08:22:56.122Z","dateModified":"2018-07-16T13:00:34.748Z","contributedBy":"AskGif","content":"You have been given an integer n that corresponds to the length of the array and k which corresponds to the digit value possible in the array. The task is to print all the possible strings using those k values of length n. the array can consist only value digits up to k.\r\nJava Solution:</p","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/9ed0c558-acca-470f-9406-597cf137ad77_n-ary-tree-1.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"interview","slug":"interview"},{"name":"backtracking","slug":"backtracking"},{"name":"algorithm","slug":"algorithm"},{"name":"java","slug":"java"},{"name":"recursion","slug":"recursion"},{"name":"array","slug":"array"}],"slug":"generate-all-the-possible-k-ary-strings-of-length-and-digit-upto-k","total":0},{"id":17,"title":"Write a Simple Hello World Program in JAVA.","imageUrl":"f91c0323-afd7-4b3e-aa1f-71c79e9913f2_hello-world-java.png","dateCreated":"2018-07-12T06:44:09.184Z","dateModified":"2018-07-12T06:44:59.673Z","contributedBy":"AskGif","content":"Writing a simple hello world programm in java.&nbsp;Java is a general-purpose computer-programming language that is concurrent, class-based, object-oriented, and specifically designed to have as few implementation dependencies as possible. It is intended to let application developers \"write once,","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/f91c0323-afd7-4b3e-aa1f-71c79e9913f2_hello-world-java.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"interview","slug":"interview"},{"name":"java","slug":"java"}],"slug":"write-a-simple-hello-world-program-in-java","total":0}]}