{"id":1696,"title":"लोड बैलेंसर क्या है?","imageUrl":"icon_bf29fc63-378c-41be-832e-77c965333bfb.png","dateCreated":"2020-11-20T07:37:09.771Z","dateModified":"2020-11-20T07:37:16.113Z","contributedBy":"sumitc91","content":"<p>लोड बैलेंसर्स आने वाले क्लाइंट अनुरोधों को एप्लिकेशन सर्वर और डेटाबेस जैसे कंप्यूटिंग संसाधनों में वितरित करते हैं। प्रत्येक मामले में, लोड बैलेंसर कंप्यूटिंग संसाधन से उपयुक्त क्लाइंट को प्रतिक्रिया देता है। लोड बैलेंसर्स प्रभावी हैं:</p>\n<p>अस्वस्थ सर्वर पर जाने से अनुरोधों को रोकना<br />ओवरलोडिंग संसाधनों को रोकना<br />विफलता के एक भी बिंदु को खत्म करने में मदद करना<br />लोड बैलेंसरों को हार्डवेयर (महंगे) या HAProxy जैसे सॉफ़्टवेयर के साथ लागू किया जा सकता है।</p>\n<p>अतिरिक्त लाभों में शामिल हैं:</p>\n<p>SSL समाप्ति - आने वाले अनुरोधों को अस्वीकार करें और सर्वर प्रतिक्रियाओं को एन्क्रिप्ट करें ताकि बैकेंड सर्वरों को इन संभावित महंगे ऑपरेशनों को करने की आवश्यकता न हो<br />प्रत्येक सर्वर पर X.509 प्रमाणपत्र स्थापित करने की आवश्यकता को हटाता है<br />सत्र दृढ़ता - कुकीज़ जारी करें और एक विशिष्ट ग्राहक के अनुरोधों को उसी तरह से रूट करें यदि वेब एप्लिकेशन सत्रों का ट्रैक नहीं रखते हैं<br />विफलताओं से बचाने के लिए, सक्रिय-निष्क्रिय या सक्रिय-सक्रिय मोड में या तो कई लोड बैलेंसर्स सेट करना आम है।</p>\n<p>लोड बैलेंसर्स विभिन्न मैट्रिक्स के आधार पर ट्रैफ़िक को रूट कर सकते हैं, जिनमें शामिल हैं:</p>\n<p>बिना सोचे समझे<br />कम से कम लाद दिया<br />सत्र / कुकीज़<br />राउंड रॉबिन या वेटेड राउंड रॉबिन<br />परत ४<br />परत 7<br />परत 4 लोड संतुलन<br />अनुरोधों को वितरित करने के तरीके का निर्णय करने के लिए लेयर 4 लोड बैलेंसर्स परिवहन परत की जानकारी को देखते हैं। आम तौर पर, इसमें स्रोत, गंतव्य आईपी पते और हेडर में पोर्ट शामिल होते हैं, लेकिन पैकेट की सामग्री नहीं। लेयर 4 लोड अपस्ट्रीम सर्वर से और नेटवर्क एड्रेस ट्रांसलेशन (NAT) के लिए आगे और पीछे से नेटवर्क पैकेट लोड करता है।</p>\n<p>परत 7 लोड संतुलन<br />अनुरोधों को कैसे वितरित किया जाए, यह तय करने के लिए लेयर 7 लोड बैलेंसर्स आवेदन परत को देखते हैं। इसमें हेडर, संदेश और कुकीज़ की सामग्री शामिल हो सकती है। लेयर 7 लोड बैलेंसर्स नेटवर्क ट्रैफ़िक को समाप्त करता है, संदेश पढ़ता है, लोड-बैलेंसिंग निर्णय करता है, फिर चयनित सर्वर से एक कनेक्शन खोलता है। उदाहरण के लिए, एक लेयर 7 लोड बैलेंसर वीडियो ट्रैफ़िक को उन सर्वरों को निर्देशित कर सकता है जो वीडियो को होस्ट करते हैं, सुरक्षा-कठोर सर्वरों को अधिक संवेदनशील उपयोगकर्ता बिलिंग ट्रैफ़िक को निर्देशित करते हैं।</p>\n<p>लचीलेपन की लागत पर, लेयर 4 लोड बैलेंसिंग में लेयर 7 की तुलना में कम समय और कंप्यूटिंग संसाधनों की आवश्यकता होती है, हालांकि कमोडिटी हार्डवेयर पर प्रदर्शन प्रभाव न्यूनतम हो सकता है।</p>\n<p>क्षैतिज स्केलिंग<br />लोड बैलेंसर्स क्षैतिज स्केलिंग, प्रदर्शन और उपलब्धता में सुधार करने में भी मदद कर सकते हैं। कमोडिटी मशीनों का उपयोग करके स्केलिंग करना अधिक लागत प्रभावी है और अधिक महंगी हार्डवेयर पर एकल सर्वर को स्केल करने की तुलना में अधिक उपलब्धता के परिणामस्वरूप होता है, जिसे वर्टिकल स्केलिंग कहा जाता है। विशेष हार्डवेयर सिस्टम की तुलना में कमोडिटी हार्डवेयर पर काम करने वाली प्रतिभाओं के लिए काम पर रखना आसान है।</p>\n<p>नुकसान (ओं): क्षैतिज स्केलिंग<br />स्केलिंग क्षैतिज रूप से जटिलता का परिचय देती है और इसमें क्लोनिंग सर्वर शामिल होते हैं<br />सर्वर को स्टेटलेस होना चाहिए: उनमें किसी भी उपयोगकर्ता से संबंधित डेटा जैसे सत्र या प्रोफ़ाइल चित्र नहीं होना चाहिए<br />सत्रों को एक केंद्रीकृत डेटा स्टोर में संग्रहीत किया जा सकता है जैसे कि डेटाबेस (SQL, NoSQL) या लगातार कैश (Redis, Memcached)<br />डाउनस्ट्रीम सर्वर जैसे कैश और डेटाबेस को अपस्ट्रीम सर्वर के पैमाने के साथ अधिक समकालिक कनेक्शन को संभालने की आवश्यकता होती है<br />नुकसान (ओं): लोड बैलेंसर<br />लोड बैलेंसर एक प्रदर्शन अड़चन बन सकता है अगर इसके पास पर्याप्त संसाधन नहीं हैं या यदि यह ठीक से कॉन्फ़िगर नहीं किया गया है।<br />बढ़ी हुई जटिलता में विफलता के परिणाम के एक बिंदु को खत्म करने में मदद करने के लिए एक लोड बैलेंसर का परिचय।<br />एक एकल लोड बैलेंसर विफलता का एक एकल बिंदु है, कई लोड बैलेंसरों को कॉन्फ़िगर करने से जटिलता बढ़ जाती है।</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/bf29fc63-378c-41be-832e-77c965333bfb.png","subContents":[],"category":{"name":"शिक्षण","slug":"tutorials"},"slug":"what-is-load-balancer","tags":[{"name":"interview","slug":"interview"}],"recommendations":[{"id":91,"title":"Find the Merging Point of Two Linked Lists.","imageUrl":"5c3e878f-f7b0-49be-a057-486f950a7a67_linked-list-merging.png","dateCreated":"2018-08-07T13:43:16.367Z","dateModified":"2018-08-08T10:36:40.67Z","contributedBy":"AskGif","content":"Given pointers to the head nodes of linked lists that merge together at some point, find the Node where the two lists merge. It is guaranteed that the two head Nodes will be different, and neither will be NULL.\r\nWe need to find the merging point of two linked lists.\r\n&nbsp;\r\n","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/5c3e878f-f7b0-49be-a057-486f950a7a67_linked-list-merging.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"stack","slug":"stack"},{"name":"interview","slug":"interview"},{"name":"linked-list","slug":"linked-list"},{"name":"java","slug":"java"},{"name":"प्रशन","slug":"questions"}],"slug":"find-the-merging-point-of-two-linked-lists","total":0},{"id":70,"title":"सिंगलटन पैटर्न क्या है?","imageUrl":"cd3b4cdf-875c-4382-8f39-8e7c74356b19_singleton-pattern.png","dateCreated":"2018-08-01T13:32:33.457Z","dateModified":"2018-08-01T17:19:42.254Z","contributedBy":"AskGif","content":"In software engineering, the singleton pattern is a software design pattern that restricts the instantiation of a class to one object. This is useful when exactly one object is needed to coordinate actions across the system. The concept is sometimes generalized to systems that operate more effici","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/cd3b4cdf-875c-4382-8f39-8e7c74356b19_singleton-pattern.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"interview","slug":"interview"},{"name":"प्रशन","slug":"questions"},{"name":"design-patterns","slug":"design-patterns"},{"name":"creational-pattern","slug":"creational-pattern"}],"slug":"what-is-singleton-pattern","total":0},{"id":59,"title":"How to Solve Coin Change Problem using Dynamic Programming for Minimum number of ways possible?","imageUrl":"450a3f20-633e-4f13-aa8e-dce34b85cf72_make-change.png","dateCreated":"2018-07-31T09:15:15.694Z","dateModified":"2018-07-31T09:15:30.599Z","contributedBy":"AskGif","content":"Coin Change Problem is also known as Making Change Problem.\r\nThe change-making problem, also known as the minimum coin change problem, addresses the question of finding the minimum number of coins (of certain denominations) that add up to a given amount of money. It is a knapsack type prob","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/450a3f20-633e-4f13-aa8e-dce34b85cf72_make-change.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"recursion","slug":"recursion"},{"name":"java","slug":"java"},{"name":"dynamic-programming","slug":"dynamic-programming"},{"name":"प्रशन","slug":"questions"},{"name":"interview","slug":"interview"}],"slug":"how-to-solve-coin-change-problem-using-dynamic-programming-for-minimum-number-of-ways-possible","total":0},{"id":17,"title":"Write a Simple Hello World Program in JAVA.","imageUrl":"f91c0323-afd7-4b3e-aa1f-71c79e9913f2_hello-world-java.png","dateCreated":"2018-07-12T06:44:09.184Z","dateModified":"2018-07-12T06:44:59.673Z","contributedBy":"AskGif","content":"Writing a simple hello world programm in java.&nbsp;Java is a general-purpose computer-programming language that is concurrent, class-based, object-oriented, and specifically designed to have as few implementation dependencies as possible. It is intended to let application developers \"write once,","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/f91c0323-afd7-4b3e-aa1f-71c79e9913f2_hello-world-java.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"interview","slug":"interview"},{"name":"java","slug":"java"}],"slug":"write-a-simple-hello-world-program-in-java","total":0}]}