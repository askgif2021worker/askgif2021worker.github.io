{"id":1702,"title":"Subarray Sum Equals K - Array - Medium - LeetCode","imageUrl":"icon_5dec0e7e-af11-40c9-b0bb-98503e290084.jpg","dateCreated":"2020-11-21T04:33:22.934Z","dateModified":"2020-11-21T04:33:27.536Z","contributedBy":"sumitc91","content":"<p>Given an array of integers nums and an integer k, return the total number of continuous subarrays whose sum equals to k.</p>\n<p>&nbsp;</p>\n<p>Example 1:</p>\n<p>Input: nums = [1,1,1], k = 2<br />Output: 2<br />Example 2:</p>\n<p>Input: nums = [1,2,3], k = 3<br />Output: 2<br />&nbsp;</p>\n<p>Constraints:</p>\n<p>1 &lt;= nums.length &lt;= 2 * 104<br />-1000 &lt;= nums[i] &lt;= 1000<br />-107 &lt;= k &lt;= 107</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    public int SubarraySum(int[] nums, int k) {\n        var map = new Dictionary&lt;int,int&gt;();\n        map.Add(0,1);\n        int sum = 0;\n        int res = 0;\n        for(int i=0;i&lt;nums.Length;i++){\n            sum += nums[i];\n            int count = 0;\n            map.TryGetValue(sum-k, out count);\n            res+=count;\n            \n            int val=0;\n            map.TryGetValue(sum, out val);\n            map[sum]=val+1;\n        }\n        \n        return res;\n    }\n}</code></pre>\n<p>Time Complexity: O(n)</p>\n<p>Space Complexity: O(n)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/5dec0e7e-af11-40c9-b0bb-98503e290084.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"subarray-sum-equals-k-array-medium-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"recommendations":[{"id":1680,"title":"Find All Duplicates in an Array - Array - Medium - LeetCode","imageUrl":"icon_5a6c2b89-77d6-4d5e-978b-35b19f85ed66.jpg","dateCreated":"2020-11-19T07:32:23.312Z","dateModified":"2020-11-19T07:32:30.12Z","contributedBy":"sumitc91","content":"Given an array of integers, 1 &le; a[i] &le; n (n = size of array), some elements appear twice and others appear once.\nFind all the elements that appear twice in this array.\nCould you do it without extra space and in O(n) runtime?\nExample:<br />Input:<br />[4,3,2,7,8,2,3,1]</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/5a6c2b89-77d6-4d5e-978b-35b19f85ed66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"find-all-duplicates-in-an-array-array-medium-leetcode","total":0},{"id":1631,"title":"Largest Substring Between Two Equal Characters - Array - Easy - LeetCode","imageUrl":"icon_696afb81-fd63-43c4-a6e8-038e3152e83e.jpg","dateCreated":"2020-10-18T09:57:37.517Z","dateModified":"2020-10-18T09:57:48.765Z","contributedBy":"sumitc91","content":"Given a string s, return the length of the longest substring between two equal characters, excluding the two characters. If there is no such substring return -1.\nA substring is a contiguous sequence of characters within a string.\n&nbsp;\nExample 1:\nInput: s = \"aa\"<br />","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/696afb81-fd63-43c4-a6e8-038e3152e83e.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"largest-substring-between-two-equal-characters-array-easy-leetcode","total":0},{"id":1609,"title":"Customers Who Never Order - Sql - Easy - LeetCode","imageUrl":"icon_3979029e-3ead-4244-a16d-a1344d80e6ec.jpg","dateCreated":"2020-10-16T07:20:40.745Z","dateModified":"2020-10-16T07:20:46.124Z","contributedBy":"sumitc91","content":"Suppose that a website contains two tables, the Customers table and the Orders table. Write a SQL query to find all customers who never order anything.\nTable: Customers.\n+----+-------+<br />| Id | Name &nbsp;|<br />+----+-------+<br />| 1 &nbsp;| Joe &nbsp; |<br />| 2 &nbsp;| Henry ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/3979029e-3ead-4244-a16d-a1344d80e6ec.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"mysql","slug":"mysql"},{"name":"sql","slug":"sql"}],"slug":"customers-who-never-order-sql-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}