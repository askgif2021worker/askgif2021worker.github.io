{"id":1712,"title":"सबसे हाल के वेब सर्वर प्रश्नों के परिणामों को बचाने के लिए एक कुंजी-मूल्य कैश कैसे डिज़ाइन करें","imageUrl":"icon_0e55c5af-9a54-497f-a246-ff16a71e6bbf.png","dateCreated":"2020-11-20T06:59:50.28Z","dateModified":"2020-11-20T06:59:59.352Z","contributedBy":"sumitc91","content":"<p>चरण 1: मामलों और बाधाओं का उपयोग करें<br />आवश्यकताओं को इकट्ठा करें और समस्या को हल करें। उपयोग के मामलों और बाधाओं को स्पष्ट करने के लिए प्रश्न पूछें। मान्यताओं पर चर्चा करें।</p>\n<p>साक्षात्कारकर्ता के बिना स्पष्ट प्रश्नों को संबोधित करने के लिए, हम कुछ उपयोग मामलों और बाधाओं को परिभाषित करेंगे।</p>\n<p>बक्सों का इस्तेमाल करें<br />हम केवल निम्नलिखित उपयोग के मामलों को संभालने के लिए समस्या को हल करेंगे<br />उपयोगकर्ता एक खोज अनुरोध भेजता है जिसके परिणामस्वरूप कैश हिट होता है<br />उपयोगकर्ता एक खोज अनुरोध भेजता है जिसके परिणामस्वरूप कैश मिस होता है<br />सेवा की उच्च उपलब्धता है<br />अड़चनें और धारणाएँ<br />राज्य की धारणाएँ<br />यातायात समान रूप से वितरित नहीं किया जाता है<br />लोकप्रिय क्वेरी लगभग हमेशा कैश में होनी चाहिए<br />यह निर्धारित करने की आवश्यकता है कि समाप्ति / ताज़ा कैसे करें<br />कैश से सेवा करने के लिए तेज़ लुकअप की आवश्यकता होती है<br />मशीनों के बीच कम विलंबता<br />कैश में सीमित मेमोरी<br />यह निर्धारित करने की आवश्यकता है कि क्या रखना / निकालना है<br />लाखों प्रश्नों को कैश करने की आवश्यकता है<br />10 मिलियन उपयोगकर्ता<br />प्रति माह 10 बिलियन क्वेरी<br />उपयोग की गणना करें<br />अपने साक्षात्कारकर्ता के साथ स्पष्ट करें कि क्या आपको बैक-ऑफ-द-लिफाफा उपयोग गणनाओं को चलाना चाहिए।</p>\n<p>कैश स्टोर ने कुंजी की सूची का आदेश दिया: क्वेरी, मूल्य: परिणाम<br />क्वेरी - 50 बाइट्स<br />शीर्षक - 20 बाइट्स<br />स्निपेट - 200 बाइट्स<br />कुल: 270 बाइट्स<br />2.7 टीबी कैश डेटा प्रति माह यदि सभी 10 बिलियन प्रश्न अद्वितीय हैं और सभी संग्रहीत हैं<br />प्रति खोज 270 बाइट्स * प्रति माह 10 बिलियन खोजें<br />मान्यताओं को सीमित स्मृति होती है, यह निर्धारित करने की आवश्यकता होती है कि सामग्री को कैसे समाप्त किया जाए<br />प्रति सेकंड 4,000 अनुरोध<br />आसान रूपांतरण गाइड:</p>\n<p>2.5 मिलियन सेकंड प्रति माह<br />1 प्रति सेकंड अनुरोध = प्रति माह 2.5 मिलियन अनुरोध<br />40 प्रति सेकंड अनुरोध = प्रति माह 100 मिलियन अनुरोध<br />प्रति माह 400 अनुरोध = प्रति माह 1 बिलियन अनुरोध<br />चरण 2: एक उच्च स्तरीय डिज़ाइन बनाएं<br />सभी महत्वपूर्ण घटकों के साथ एक उच्च स्तरीय डिजाइन की रूपरेखा।</p>\n<p>Imgur</p>\n<p>चरण 3: डिजाइन कोर घटक<br />प्रत्येक मुख्य घटक के लिए विवरण में गोता लगाएँ।</p>\n<p>मामले का उपयोग करें: उपयोगकर्ता एक अनुरोध भेजता है जिसके परिणामस्वरूप कैश हिट होता है<br />लोकप्रिय प्रश्नों को मेमोरी कैश से पढ़ा जा सकता है जैसे कि रेडिस या मेमक्च्ड को रीड लेटेंसी को कम करने और रिवर्स इंडेक्स सर्विस और डॉक्यूमेंट सर्विस को ओवरलोड करने से बचने के लिए। मेमोरी से 1 एमबी क्रमिक रूप से पढ़ने में लगभग 250 माइक्रोसेकंड लगते हैं, जबकि एसएसडी से पढ़ने में 4x लगते हैं और डिस्क से 80x5 मिनट लगते हैं</p>\n<p>चूंकि कैश की सीमित क्षमता है, हम पुरानी प्रविष्टियों को समाप्त करने के लिए कम से कम हाल ही में उपयोग किए गए (LRU) दृष्टिकोण का उपयोग करेंगे।</p>\n<p>क्लाइंट एक रिवर्स प्रॉक्सी के रूप में चल रहा है, वेब सर्वर के लिए एक अनुरोध भेजता है<br />वेब सर्वर क्वेरी API सर्वर के लिए अनुरोध को अग्रेषित करता है<br />क्वेरी API सर्वर निम्न कार्य करता है:<br />क्वेरी को पार्स करता है<br />मार्कअप को हटाता है<br />पाठ को शब्दों में तोड़ता है<br />टाइपो को ठीक करता है<br />पूंजीकरण को सामान्य करता है<br />बूलियन संचालन का उपयोग करने के लिए क्वेरी को कनवर्ट करता है<br />क्वेरी से मेल खाने वाली सामग्री के लिए मेमोरी कैश की जाँच करता है<br />यदि मेमोरी कैश में कोई हिट है, तो मेमोरी कैश निम्न कार्य करता है:<br />एलआरयू सूची के सामने कैश्ड प्रविष्टि की स्थिति को अद्यतन करता है<br />कैश्ड सामग्री लौटाता है<br />Else, क्वेरी API निम्न कार्य करता है:<br />क्वेरी से मेल खाते दस्तावेज़ खोजने के लिए रिवर्स इंडेक्स सेवा का उपयोग करता है<br />रिवर्स इंडेक्स सर्विस मिलान परिणामों को रैंक करती है और शीर्ष लोगों को वापस लौटाती है<br />शीर्षक और स्निपेट वापस करने के लिए दस्तावेज़ सेवा का उपयोग करता है<br />एलआरयू सूची के सामने प्रविष्टि को रखकर, सामग्री के साथ मेमोरी कैश को अपडेट करता है<br />कैश कार्यान्वयन<br />कैश एक दोहरी-लिंक की गई सूची का उपयोग कर सकता है: नई वस्तुओं को सिर में जोड़ा जाएगा जबकि समाप्त होने वाली वस्तुओं को पूंछ से हटा दिया जाएगा। हम प्रत्येक लिंक किए गए सूची नोड में तेज़ लुकअप के लिए हैश टेबल का उपयोग करेंगे।</p>\n<p>अपने साक्षात्कारकर्ता के साथ स्पष्ट करें कि आपको कितने कोड लिखने की उम्मीद है।</p>\n<p>क्वेरी API सर्वर कार्यान्वयन:</p>\n<p>वर्ग QueryApi (ऑब्जेक्ट):</p>\n<p>&nbsp; &nbsp; def __init __ (स्व, मेमोरी_ कैश, रिवर्स_इंडेक्स_ सर्विस):<br />&nbsp; &nbsp; &nbsp; &nbsp; self.memory_cache = memory_cache<br />&nbsp; &nbsp; &nbsp; &nbsp; self.reverse_index_service = रिवर्स_इंडेक्स_ सर्विस</p>\n<p>&nbsp; &nbsp; def parse_query (स्वयं, क्वेरी):<br />&nbsp; &nbsp; &nbsp; &nbsp; \"\" \"मार्कअप हटाएं, टेक्स्ट को शब्दों में तोड़ें, टाइपो से निपटें,<br />&nbsp; &nbsp; &nbsp; &nbsp; पूंजीकरण को सामान्य करें, बूलियन संचालन का उपयोग करने के लिए परिवर्तित करें।<br />&nbsp; &nbsp; &nbsp; &nbsp; \"\" \"<br />&nbsp; &nbsp; &nbsp; &nbsp; ...</p>\n<p>&nbsp; &nbsp; def process_query (स्वयं, क्वेरी):<br />&nbsp; &nbsp; &nbsp; &nbsp; क्वेरी = self.parse_query (क्वेरी)<br />&nbsp; &nbsp; &nbsp; &nbsp; परिणाम = self.memory_cache.get (क्वेरी)<br />&nbsp; &nbsp; &nbsp; &nbsp; यदि परिणाम कोई नहीं है:<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; परिणाम = self.reverse_index_service.process_search (क्वेरी)<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; self.memory_cache.set (क्वेरी, परिणाम)<br />&nbsp; &nbsp; &nbsp; &nbsp; वापसी के परिणाम<br />नोड कार्यान्वयन:</p>\n<p>वर्ग नोड (वस्तु):</p>\n<p>&nbsp; &nbsp; def __init __ (स्व, क्वेरी, परिणाम):<br />&nbsp; &nbsp; &nbsp; &nbsp; self.query = क्वेरी<br />&nbsp; &nbsp; &nbsp; &nbsp; self.results = परिणाम<br />लिंक्डलिस्ट कार्यान्वयन:</p>\n<p>क्लास लिंक्डलिस्ट (ऑब्जेक्ट):</p>\n<p>&nbsp; &nbsp; def __init __ (स्व):<br />&nbsp; &nbsp; &nbsp; &nbsp; self.head = कोई नहीं<br />&nbsp; &nbsp; &nbsp; &nbsp; self.tail = कोई नहीं</p>\n<p>&nbsp; &nbsp; def Move_to_front (स्वयं, नोड):<br />&nbsp; &nbsp; &nbsp; &nbsp; ...</p>\n<p>&nbsp; &nbsp; def app_to_front (स्वयं, नोड):<br />&nbsp; &nbsp; &nbsp; &nbsp; ...</p>\n<p>&nbsp; &nbsp; def remove_from_tail (स्व):<br />&nbsp; &nbsp; &nbsp; &nbsp; ...<br />कैश कार्यान्वयन:</p>\n<p>कक्षा कैश (ऑब्जेक्ट):</p>\n<p>&nbsp; &nbsp; def __init __ (स्व, MAX_SIZE):<br />&nbsp; &nbsp; &nbsp; &nbsp; self.MAX_SIZE = MAX_SIZE<br />&nbsp; &nbsp; &nbsp; &nbsp; स्व.सिसे = ०<br />&nbsp; &nbsp; &nbsp; &nbsp; self.lookup = {} # कुंजी: क्वेरी, मान: नोड<br />&nbsp; &nbsp; &nbsp; &nbsp; self.linked_list = लिंक्डलिस्ट ()</p>\n<p>&nbsp; &nbsp; डीईएफ़ गेट (स्व, क्वेरी)<br />&nbsp; &nbsp; &nbsp; &nbsp; \"\" \"कैश से संग्रहीत क्वेरी परिणाम प्राप्त करें।</p>\n<p>&nbsp; &nbsp; &nbsp; &nbsp; एक नोड तक पहुंच एलआरयू सूची के सामने अपनी स्थिति को अपडेट करता है।<br />&nbsp; &nbsp; &nbsp; &nbsp; \"\" \"<br />&nbsp; &nbsp; &nbsp; &nbsp; नोड = self.lookup [क्वेरी]<br />&nbsp; &nbsp; &nbsp; &nbsp; यदि नोड कोई नहीं है:<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; कोई नहीं लौटा<br />&nbsp; &nbsp; &nbsp; &nbsp; self.linked_list.move</p>","ampImage":null,"subContents":[],"category":{"name":"शिक्षण","slug":"tutorials"},"slug":"how-to-design-a-key-value-cache-to-save-the-results-of-the-most-recent-web-server-queries","tags":[{"name":"डिज़ाइन","slug":"design"},{"name":"interview","slug":"interview"},{"name":"प्रणाली-की-रूपरेखा","slug":"system-design"}],"recommendations":[{"id":1687,"title":"Mint.com डिजाइन कैसे करें","imageUrl":"icon_2709cf5f-1f6f-435b-bf00-9cf152142df5.png","dateCreated":"2020-11-20T06:53:27.643Z","dateModified":"2020-11-20T06:53:36.94Z","contributedBy":"sumitc91","content":"चरण 1: मामलों और बाधाओं का उपयोग करें<br />आवश्यकताओं को इकट्ठा करें और समस्या को हल करें। उपयोग के मामलों और बाधाओं को स्पष्ट करने के लिए प्रश्न पूछें। मान्यताओं पर चर्चा करें।\nसाक्षात्कारकर्ता के बिना स्पष्ट प्रश्नों को संबोधित करने के लिए, हम कुछ उपयोग मामलों और बाधाओं को परिभाषित करेंग","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/2709cf5f-1f6f-435b-bf00-9cf152142df5.png","category":{"name":"शिक्षण","slug":"tutorials"},"tags":[{"name":"डिज़ाइन","slug":"design"},{"name":"interview","slug":"interview"},{"name":"प्रणाली-की-रूपरेखा","slug":"system-design"}],"slug":"how-to-design-mint.com","total":0},{"id":85,"title":"Discuss Towers of Hanoi Puzzle.","imageUrl":"c0163425-be46-4869-b182-865969bc6dee_tower-of-hanoi.gif","dateCreated":"2018-08-06T08:19:23.128Z","dateModified":"2018-08-06T08:19:38.491Z","contributedBy":"AskGif","content":"The Tower of Hanoi is a mathematical puzzle.&nbsp; It consists of three rods and a number of disks of different sizes which can slide onto any rod. The puzzle starts with the disks on one rod in ascending order of size the smallest at the top, thus making a conical shape. The objective of the puz","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/c0163425-be46-4869-b182-865969bc6dee_tower-of-hanoi.gif","category":{"name":"coding","slug":"coding"},"tags":[{"name":"interview","slug":"interview"},{"name":"recursion","slug":"recursion"},{"name":"java","slug":"java"},{"name":"प्रशन","slug":"questions"}],"slug":"discuss-towers-of-hanoi-puzzle","total":0},{"id":76,"title":"प्रॉक्सी पैटर्न क्या है?","imageUrl":"aaeafdf4-c3d7-4245-809f-7be5d5a4ac59_Proxy_Pattern.jpg","dateCreated":"2018-08-01T16:04:57.813Z","dateModified":"2018-08-01T17:22:28.188Z","contributedBy":"AskGif","content":"In computer programming, the proxy pattern is a software design pattern.\r\n&nbsp;\r\nA proxy, in its most general form, is a class functioning as an interface to something else. The proxy could interface to anything: a network connection, a large object in memory, a file, or some other","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/aaeafdf4-c3d7-4245-809f-7be5d5a4ac59_Proxy_Pattern.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"प्रशन","slug":"questions"},{"name":"design-patterns","slug":"design-patterns"},{"name":"structural-pattern","slug":"structural-pattern"},{"name":"interview","slug":"interview"}],"slug":"what-is-proxy-pattern","total":0},{"id":17,"title":"Write a Simple Hello World Program in JAVA.","imageUrl":"f91c0323-afd7-4b3e-aa1f-71c79e9913f2_hello-world-java.png","dateCreated":"2018-07-12T06:44:09.184Z","dateModified":"2018-07-12T06:44:59.673Z","contributedBy":"AskGif","content":"Writing a simple hello world programm in java.&nbsp;Java is a general-purpose computer-programming language that is concurrent, class-based, object-oriented, and specifically designed to have as few implementation dependencies as possible. It is intended to let application developers \"write once,","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/f91c0323-afd7-4b3e-aa1f-71c79e9913f2_hello-world-java.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"interview","slug":"interview"},{"name":"java","slug":"java"}],"slug":"write-a-simple-hello-world-program-in-java","total":0}]}