{"id":1715,"title":"Determine if String Halves Are Alike - String - Easy - LeetCode","imageUrl":"icon_8d5b87e0-0bd8-47c9-8f55-cfff94e5858d.jpg","dateCreated":"2021-01-08T09:24:14.63Z","dateModified":"2021-01-08T09:24:20.084Z","contributedBy":"sumitc91","content":"<p>You are given a string s of even length. Split this string into two halves of equal lengths, and let a be the first half and b be the second half.</p>\n<p>Two strings are alike if they have the same number of vowels ('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'). Notice that s contains uppercase and lowercase letters.</p>\n<p>Return true if a and b are alike. Otherwise, return false.</p>\n<p>&nbsp;</p>\n<p>Example 1:</p>\n<p>Input: s = \"book\"<br />Output: true<br />Explanation: a = \"bo\" and b = \"ok\". a has 1 vowel and b has 1 vowel. Therefore, they are alike.<br />Example 2:</p>\n<p>Input: s = \"textbook\"<br />Output: false<br />Explanation: a = \"text\" and b = \"book\". a has 1 vowel whereas b has 2. Therefore, they are not alike.<br />Notice that the vowel o is counted twice.<br />Example 3:</p>\n<p>Input: s = \"MerryChristmas\"<br />Output: false<br />Example 4:</p>\n<p>Input: s = \"AbCdEfGh\"<br />Output: true<br />&nbsp;</p>\n<p>Constraints:</p>\n<p>2 &lt;= s.length &lt;= 1000<br />s.length is even.<br />s consists of uppercase and lowercase letters.</p>\n<p>&nbsp;</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    public bool HalvesAreAlike(string s) {\n        int vowel = 0;    \n        \n        for(int i=0;i&lt;s.Length/2;i++){\n            if(IsVowel(s[i])){\n                vowel++;\n            }\n        }\n        \n        for(int i=s.Length/2;i&lt;s.Length;i++){\n            if(IsVowel(s[i])){\n                vowel--;\n            }\n        }\n        \n        return vowel==0;\n    }\n    \n    private bool IsVowel(char ch){\n        if(ch=='a'||ch=='A'||ch=='e'||ch=='E'||ch=='i'||ch=='I'||ch=='o'||ch=='O'||ch=='u'||ch=='U'){\n            return true;\n        }\n        return false;\n    }\n}</code></pre>\n<p>Time Complexity: O(n)</p>\n<p>Space Complexity: O(1)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/8d5b87e0-0bd8-47c9-8f55-cfff94e5858d.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"determine-if-string-halves-are-alike-string-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"string","slug":"string"}],"recommendations":[{"id":1714,"title":"Number of Students Unable to Eat Lunch - String - Easy - LeetCode","imageUrl":"icon_dad639fe-8bb2-4bcd-ba3d-af4e7cb5299b.jpg","dateCreated":"2021-01-06T10:28:07.741Z","dateModified":"2021-01-06T10:28:12.288Z","contributedBy":"sumitc91","content":"The school cafeteria offers circular and square sandwiches at lunch break, referred to by numbers 0 and 1 respectively. All students stand in a queue. Each student either prefers square or circular sandwiches.\nThe number of sandwiches in the cafeteria is equal to the number of students. Th","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/dad639fe-8bb2-4bcd-ba3d-af4e7cb5299b.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"string","slug":"string"}],"slug":"number-of-students-unable-to-eat-lunch-string-easy-leetcode","total":0},{"id":1626,"title":"Reformat Department Table - Sql - Easy - LeetCode","imageUrl":"icon_59cdadef-bfee-4b37-bafa-ad7569c32e3f.jpg","dateCreated":"2020-10-18T04:10:25.839Z","dateModified":"2020-10-18T04:10:34.638Z","contributedBy":"sumitc91","content":"Table: Department\n+---------------+---------+<br />| Column Name &nbsp; | Type &nbsp; &nbsp;|<br />+---------------+---------+<br />| id &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;| int &nbsp; &nbsp; |<br />| revenue &nbsp; &nbsp; &nbsp; | int &nbsp; &nbsp; |<br />| month &nbsp; &nbsp; &nbsp","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/59cdadef-bfee-4b37-bafa-ad7569c32e3f.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"mysql","slug":"mysql"},{"name":"sql","slug":"sql"}],"slug":"reformat-department-table-sql-easy-leetcode","total":0},{"id":1619,"title":"Classes More Than 5 Students - Sql - Easy - LeetCode","imageUrl":"icon_e71c8d7a-4f1f-4f65-8676-b2f2b13032cb.jpg","dateCreated":"2020-10-17T06:01:27.477Z","dateModified":"2020-10-17T06:01:38.886Z","contributedBy":"sumitc91","content":"There is a table courses with columns: student and class\nPlease list out all classes which have more than or equal to 5 students.\nFor example, the table:\n+---------+------------+<br />| student | class &nbsp; &nbsp; &nbsp;|<br />+---------+------------+<br />| A &nbsp; &nbsp;","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/e71c8d7a-4f1f-4f65-8676-b2f2b13032cb.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"sql","slug":"sql"}],"slug":"classes-more-than-5-students-sql-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}