{"id":1720,"title":"Number Of Rectangles That Can Form The Largest Square - Array - Easy - LeetCode","imageUrl":"icon_a3758d97-0c9c-4e59-860a-b2f31b1f95ab.jpg","dateCreated":"2021-01-18T12:11:37.997Z","dateModified":"2021-01-18T12:11:43.515Z","contributedBy":"sumitc91","content":"<p>You are given an array rectangles where rectangles[i] = [li, wi] represents the ith rectangle of length li and width wi.</p>\n<p>You can cut the ith rectangle to form a square with a side length of k if both k &lt;= li and k &lt;= wi. For example, if you have a rectangle [4,6], you can cut it to get a square with a side length of at most 4.</p>\n<p>Let maxLen be the side length of the largest square you can obtain from any of the given rectangles.</p>\n<p>Return the number of rectangles that can make a square with a side length of maxLen.</p>\n<p>&nbsp;</p>\n<p>Example 1:</p>\n<p>Input: rectangles = [[5,8],[3,9],[5,12],[16,5]]<br />Output: 3<br />Explanation: The largest squares you can get from each rectangle are of lengths [5,3,5,5].<br />The largest possible square is of length 5, and you can get it out of 3 rectangles.<br />Example 2:</p>\n<p>Input: rectangles = [[2,3],[3,7],[4,3],[3,7]]<br />Output: 3<br />&nbsp;</p>\n<p>Constraints:</p>\n<p>1 &lt;= rectangles.length &lt;= 1000<br />rectangles[i].length == 2<br />1 &lt;= li, wi &lt;= 109<br />li != wi</p>\n<p>&nbsp;</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    public int CountGoodRectangles(int[][] rectangles) {\n        int max = 0;\n        int count = 0;\n        for(int i=0;i&lt;rectangles.Length;i++){\n            int min = Math.Min(rectangles[i][0],rectangles[i][1]);\n            if(max&lt;min){\n                max = min;\n                count=1;\n            }\n            else if(max==min){\n                count++;\n            }\n        }\n        \n        return count;\n    }\n}</code></pre>\n<p>Time Complexity: O(n)</p>\n<p>Space Complexity: O(1)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a3758d97-0c9c-4e59-860a-b2f31b1f95ab.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"number-of-rectangles-that-can-form-the-largest-square-array-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"recommendations":[{"id":1669,"title":"Maximum Product Subarray - Array - Medium - LeetCode","imageUrl":"icon_7f1afad0-6986-4b75-b8b1-48cc2da5b308.jpg","dateCreated":"2020-11-17T12:27:09.279Z","dateModified":"2020-11-17T12:27:13.842Z","contributedBy":"sumitc91","content":"Given an integer array nums, find the contiguous subarray within an array (containing at least one number) which has the largest product.\nExample 1:\nInput: [2,3,-2,4]<br />Output: 6<br />Explanation: [2,3] has the largest product 6.<br />Example 2:\nInput: [-2,0,-1]<br />Outpu","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/7f1afad0-6986-4b75-b8b1-48cc2da5b308.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"maximum-product-subarray-array-medium-leetcode","total":0},{"id":1652,"title":"Minimum Path Sum - Array - Medium - LeetCode","imageUrl":"icon_d9f5ff7a-791f-41b0-89b0-f12760706d99.jpg","dateCreated":"2020-10-31T09:04:08.041Z","dateModified":"2020-10-31T09:04:16.725Z","contributedBy":"sumitc91","content":"Given a m x n grid filled with non-negative numbers, find a path from top left to bottom right which minimizes the sum of all numbers along its path.\nNote: You can only move either down or right at any point in time.\nExample:\nInput:<br />[<br />&nbsp; [1,3,1],<br />&nbsp; [1,","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/d9f5ff7a-791f-41b0-89b0-f12760706d99.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"minimum-path-sum-array-medium-leetcode","total":0},{"id":1641,"title":"Combination Sum - Array - Medium - LeetCode","imageUrl":"icon_b42ea67c-de94-42f6-aa57-391837827a47.jpg","dateCreated":"2020-10-25T14:37:09.044Z","dateModified":"2020-10-25T14:37:53.305Z","contributedBy":"sumitc91","content":"Given an array of distinct integers candidates and a target integer target, return a list of all unique combinations of candidates where the chosen numbers sum to target. You may return the combinations in any order.\nThe same number may be chosen from candidates an unlimited number of time","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/b42ea67c-de94-42f6-aa57-391837827a47.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"combination-sum-array-medium-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}