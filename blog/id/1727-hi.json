{"id":1727,"title":"Check if Array Is Sorted and Rotated - Array - Easy - LeetCode","imageUrl":"icon_2110d383-81cb-448a-8e4f-3773ff37294d.jpg","dateCreated":"2021-03-31T05:53:14.382Z","dateModified":"2021-03-31T05:53:27.431Z","contributedBy":"sumitc91","content":"<p>Given an array nums, return true if the array was originally sorted in non-decreasing order, then rotated some number of positions (including zero). Otherwise, return false.</p>\n<p>There may be duplicates in the original array.</p>\n<p>Note: An array A rotated by x positions results in an array B of the same length such that A[i] == B[(i+x) % A.length], where % is the modulo operation.</p>\n<p>&nbsp;</p>\n<p>Example 1:</p>\n<p>Input: nums = [3,4,5,1,2]<br />Output: true<br />Explanation: [1,2,3,4,5] is the original sorted array.<br />You can rotate the array by x = 3 positions to begin on the the element of value 3: [3,4,5,1,2].<br />Example 2:</p>\n<p>Input: nums = [2,1,3,4]<br />Output: false<br />Explanation: There is no sorted array once rotated that can make nums.<br />Example 3:</p>\n<p>Input: nums = [1,2,3]<br />Output: true<br />Explanation: [1,2,3] is the original sorted array.<br />You can rotate the array by x = 0 positions (i.e. no rotation) to make nums.<br />Example 4:</p>\n<p>Input: nums = [1,1,1]<br />Output: true<br />Explanation: [1,1,1] is the original sorted array.<br />You can rotate any number of positions to make nums.<br />Example 5:</p>\n<p>Input: nums = [2,1]<br />Output: true<br />Explanation: [1,2] is the original sorted array.<br />You can rotate the array by x = 5 positions to begin on the element of value 2: [2,1].<br />&nbsp;</p>\n<p>Constraints:</p>\n<p>1 &lt;= nums.length &lt;= 100<br />1 &lt;= nums[i] &lt;= 100</p>\n<pre class=\"language-csharp\"><code>public class Solution {\n    public bool Check(int[] nums) {\n        bool isRotationFound = false;\n        bool isSorted = true;\n        for(int i=1;i&lt;nums.Length;i++){\n            if(nums[i-1]&gt;nums[i]){\n                if(isRotationFound){\n                    return false;\n                }\n                else{\n                    isRotationFound = true;\n                }\n            }\n        }\n        \n        if(isRotationFound){\n            if(nums[nums.Length-1] &gt; nums[0]){\n                return false;\n            }\n        }\n        \n        return true;\n    }\n}</code></pre>\n<p>Time Complexity: O(n)<br />Space Complexity: O(1)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/2110d383-81cb-448a-8e4f-3773ff37294d.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"check-if-array-is-sorted-and-rotated-array-easy-leetcode","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"recommendations":[{"id":1725,"title":"Sum of Unique Elements - Array - Easy - LeetCode","imageUrl":"icon_9e341651-0933-4893-84a8-1d3f65898dda.jpg","dateCreated":"2021-02-13T13:13:53.857Z","dateModified":"2021-02-13T13:13:59.576Z","contributedBy":"sumitc91","content":"You are given an integer array nums. The unique elements of an array are the elements that appear exactly once in the array.\nReturn the sum of all the unique elements of nums.\n&nbsp;\nExample 1:\nInput: nums = [1,2,3,2]<br />Output: 4<br />Explanation: The unique element","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/9e341651-0933-4893-84a8-1d3f65898dda.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"sum-of-unique-elements-array-easy-leetcode","total":0},{"id":1625,"title":"Print in Order - Multi Threading - Easy - LeetCode","imageUrl":"icon_3e17a90d-8d3d-4655-9ad5-34bee8157e21.jpg","dateCreated":"2020-10-18T04:04:15.138Z","dateModified":"2020-10-18T04:04:52.636Z","contributedBy":"sumitc91","content":"Suppose we have a class:\npublic class Foo {<br />&nbsp; public void first() { print(\"first\"); }<br />&nbsp; public void second() { print(\"second\"); }<br />&nbsp; public void third() { print(\"third\"); }<br />}<br />The same instance of Foo will be passed to three different threads. Thread A","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/3e17a90d-8d3d-4655-9ad5-34bee8157e21.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"multi-threading","slug":"multi-threading"}],"slug":"print-in-order-multi-threading-easy-leetcode","total":0},{"id":1607,"title":"Employees Earning More Than Their Managers - Sql - Easy - LeetCode","imageUrl":"icon_0a6cfc7c-14b2-43e5-8538-b4498ef0b5c3.jpg","dateCreated":"2020-10-16T06:26:34.794Z","dateModified":"2020-10-16T06:26:46.282Z","contributedBy":"sumitc91","content":"The Employee table holds all employees including their managers. Every employee has an Id, and there is also a column for the manager Id.\n+----+-------+--------+-----------+<br />| Id | Name &nbsp;| Salary | ManagerId |<br />+----+-------+--------+-----------+<br />| 1 &nbsp;| Joe &nbsp; |","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/0a6cfc7c-14b2-43e5-8538-b4498ef0b5c3.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"mysql","slug":"mysql"},{"name":"sql","slug":"sql"}],"slug":"employees-earning-more-than-their-managers-sql-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}