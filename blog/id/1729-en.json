{"id":1729,"title":"Install and Configure MongoDB on Ubuntu","imageUrl":"icon_ccc5133b-10ee-406d-b827-62b000b3fa13.png","dateCreated":"2021-05-22T04:30:29.486Z","dateModified":"2021-05-22T04:30:40.286Z","contributedBy":"sumitc91","content":"<p>Prerequisites<br />Ubuntu Server 18.04 - 64 bit<br />Root privileges<br />What we will do in this tutorial:</p>\n<p>Install MongoDB<br />Configure MongoDB<br />Conclusion<br />Install MongoDB on Ubuntu 18.04 LTS<br />Step 1 - Importing the Public Key<br />GPG keys of the software distributor are required by the Ubuntu package manager apt (Advanced Package Tool) to ensure the consistency and authenticity of the package. Execute this command to import MongoDB keys to your server.</p>\n<pre class=\"language-markup\"><code>sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 68818C72E52529D4</code></pre>\n<p>&nbsp;</p>\n<p>Step 2 - Create source list file MongoDB<br />Create a MongoDB list file in /etc/apt/sources.list.d/ with this command:</p>\n<pre class=\"language-markup\"><code>sudo echo \"deb http://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/4.0 multiverse\" | sudo tee /etc/apt/sources.list.d/mongodb-org-4.0.list</code></pre>\n<p>&nbsp;</p>\n<p>Step 3 - Update the repository<br />update the repository with the apt command:</p>\n<pre class=\"language-markup\"><code>sudo apt-get update</code></pre>\n<p><br />Step 4 - Install MongoDB<br />Now you can install MongoDB by typing this command:</p>\n<pre class=\"language-markup\"><code>sudo apt-get install -y mongodb-org</code></pre>\n<p><br />The MongoDB apt installer created a mongod.service file for Systemd automatically, so there is no need to create it manually anymore.</p>\n<p>Start MongoDB and add it as a service to be started at boot time:</p>\n<pre class=\"language-markup\"><code>sudo systemctl start mongod\nsudo systemctl enable mongod</code></pre>\n<p>Now check that&nbsp;MongoDB&nbsp;has been started on port 27017 with the&nbsp;netstat command.</p>\n<pre class=\"language-markup\"><code>sudo netstat -plntu</code></pre>\n<p>&nbsp;</p>\n<p>Configure MongoDB username and password<br />When the MongoDB packages are installed you can configure username and password for the database server:</p>\n<p>Step 1 - Open mongo shell<br />Before you set up a username and password for MongoDB, you need to open the MongoDB shell on your server. You can login by typing:</p>\n<pre class=\"language-markup\"><code>mongo</code></pre>\n<p><br />If you get error Failed global initialization: BadValue Invalid or no user locale set. Please ensure LANG and/or LC_* environment variables are set correctly, try the command:</p>\n<pre class=\"language-markup\"><code>export LC_ALL=C\nmongo</code></pre>\n<p><br />Step 2 - Switch to the database admin<br />Once you`re in the MongoDB shell, switch to the database named admin:</p>\n<pre class=\"language-markup\"><code>use admin</code></pre>\n<p><br />Step 3 - Create the root user<br />Create the root user with this command :</p>\n<pre class=\"language-markup\"><code>db.createUser({user:\"admin\", pwd:\"admin123\", roles:[{role:\"root\", db:\"admin\"}]})</code></pre>\n<p><br />Desc: Create user admin with password admin123 and have the permission/role as root and the database is admin.</p>\n<p>Now type exit to exit from MongoDB shell.</p>\n<pre class=\"language-markup\"><code>exit</code></pre>\n<p><br />And you are back on the Linux shell.</p>\n<p>Step 4 - Enable MongoDB authentication<br />Edit the mongodb service file '/lib/systemd/system/mongod.service' with your editor.</p>\n<pre class=\"language-markup\"><code>sudo nano /lib/systemd/system/mongod.service</code></pre>\n<p><br />On the 'ExecStart' line 9, add the new option '--auth'.</p>\n<pre class=\"language-markup\"><code>ExecStart=/usr/bin/mongod --auth --config /etc/mongod.conf</code></pre>\n<p><br />Save the service file and exit nano.</p>\n<p>Reload the systemd service:</p>\n<pre class=\"language-markup\"><code>sudo systemctl daemon-reload</code></pre>\n<p><br />Step 5 - Restart MongoDB and try to connect<br />Now restart MongoDB and connect with the user created.</p>\n<pre class=\"language-markup\"><code>sudo service mongod restart</code></pre>\n<p><br />and connect to the MongoDB shell with this command:</p>\n<pre class=\"language-markup\"><code>mongo -u admin -p admin123 --authenticationDatabase admin</code></pre>\n<p>&nbsp;</p>\n<p>Enable external access and configure the UFW Firewall<br />UFW is the default firewall in Ubuntu. In this chapter, I will show how to configure UFW to allow external access to MongoDB.</p>\n<p>Check the UFW status</p>\n<pre class=\"language-markup\"><code>sudo ufw status</code></pre>\n<p><br />When the result is:&nbsp;</p>\n<p>Status: inactive<br />Enable UFW with this command and open the SSH port first if connected by SSH:</p>\n<pre class=\"language-markup\"><code>sudo ufw allow ssh\nsudo ufw enable</code></pre>\n<p><br />before you proceed with the next steps.</p>\n<p>For security reasons, you should allow access to the MongoDB port 27017 only from IP addresses that need to access the database. By default, localhost is always able to access it, so no need to open the MongoDB port for IP 127.0.0.1.</p>\n<p>UFW Firewall Syntax</p>\n<pre class=\"language-markup\"><code>sudo ufw allow from &lt;target&gt; to &lt;destination&gt; port &lt;port number&gt;</code></pre>\n<p><br />Open MongoDB Port in UFW<br />To allow access from external IP 192.168.1.10 to MongoDB, use this command:</p>\n<pre class=\"language-markup\"><code>sudo ufw allow from 192.168.1.10 to any port 27017</code></pre>\n<p><br />Replace the IP address in the above command with the external Ip you want to allow access to MongoDB.</p>\n<p>If you want to open the MongoDB port for any IP, e.g. in case you run it in a local network and all systems in that network shall be able to access MongoDB, then use this command:</p>\n<pre class=\"language-markup\"><code>sudo ufw allow 27017</code></pre>\n<p><br />Check the status of the UFW firewall with this command:</p>\n<pre class=\"language-markup\"><code>sudo ufw status</code></pre>\n<p><br />MongoDB listens to localhost by default, to make the database accessible from outside, we have to reconfigure it to listen on the server IP address too.</p>\n<p>Open the mongod.conf file in nano editor:</p>\n<pre class=\"language-markup\"><code>sudo nano /etc/mongod.conf</code></pre>\n<p><br />and add the IP address of the server in the bind_ip line like this:</p>\n<pre class=\"language-markup\"><code># network interfaces\nnet:\n port: 27017\n bindIp: 127.0.0.1,192,168.1.100</code></pre>\n<p><br />Replace 192.168.1.100 with the IP of your server, then restart MongoDB to apply the changes.</p>\n<pre class=\"language-markup\"><code>sudo service mongod restart</code></pre>\n<p><br />Now you can access the MongoDB database server over the network.</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/ccc5133b-10ee-406d-b827-62b000b3fa13.png","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"install-and-configure-mongodb-on-ubuntu","tags":[{"name":"mongodb","slug":"mongodb"},{"name":"ubuntu","slug":"ubuntu"}],"recommendations":[{"id":1729,"title":"Install and Configure MongoDB on Ubuntu","imageUrl":"icon_ccc5133b-10ee-406d-b827-62b000b3fa13.png","dateCreated":"2021-05-22T04:30:29.486Z","dateModified":"2021-05-22T04:30:40.286Z","contributedBy":"sumitc91","content":"Prerequisites<br />Ubuntu Server 18.04 - 64 bit<br />Root privileges<br />What we will do in this tutorial:\nInstall MongoDB<br />Configure MongoDB<br />Conclusion<br />Install MongoDB on Ubuntu 18.04 LTS<br />Step 1 - Importing the Public Key<br />GPG keys of the software distributor are r","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/ccc5133b-10ee-406d-b827-62b000b3fa13.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"mongodb","slug":"mongodb"},{"name":"ubuntu","slug":"ubuntu"}],"slug":"install-and-configure-mongodb-on-ubuntu","total":0},{"id":157,"title":"How to completely remove VirtualBox in Ubuntu 16.04?","imageUrl":"daeb485a-1c96-467c-8bad-8e85a2d15f66_vb.png","dateCreated":"2018-11-27T11:23:04.079Z","dateModified":"2018-11-27T11:23:12.409Z","contributedBy":"AskGif","content":"Question:\r\nI had installed VirtualBox but it started giving me problems. So I uninstalled it using:-\r\nsudo apt-get remove virtualbox-\\*\r\nsudo apt-get purge virtualbox-\\*\r\nBut when I reinstalled VirtualBox it again resumed to previous settings and started giving same pr","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/daeb485a-1c96-467c-8bad-8e85a2d15f66_vb.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"virtualbox","slug":"virtualbox"},{"name":"ubuntu","slug":"ubuntu"}],"slug":"how-to-completely-remove-virtualbox-in-ubuntu-16.04","total":0},{"id":153,"title":"How to mount a VirtualBox shared folder?","imageUrl":"02aa9115-563d-4a68-b4ef-92c28e8b53ae_ubuntu-shared-folder.png","dateCreated":"2018-11-22T11:47:39.038Z","dateModified":"2018-11-22T11:47:47.217Z","contributedBy":"AskGif","content":"To be able to mount a VirtualBox shared folder between your windows and Linux machine you need to do the following steps.\r\nFirst add your share directory in the VM Box:\r\nWhatever you name your share here will be the name you will need to use when mounting in the vm guest OS. i.e. I ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/02aa9115-563d-4a68-b4ef-92c28e8b53ae_ubuntu-shared-folder.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"ubuntu","slug":"ubuntu"},{"name":"virtualbox","slug":"virtualbox"}],"slug":"how-to-mount-a-virtualbox-shared-folder","total":0},{"id":5,"title":"How Can I Install Nginx on AWS EC2 Ubuntu 16.04 Machine and host Multiple Websites.","imageUrl":"78354fdb-9e8d-43be-a51a-75dc508974e5_NGINX-On-Ubuntu-1200x1200.jpg","dateCreated":"2018-07-02T12:43:39.373Z","dateModified":"2018-07-02T16:12:00.428Z","contributedBy":"AskGif","content":"Nginx ( /ˌɛndʒɪnˈɛks/ EN-jin-EKS[8]) (stylized as NGINX, NGiИX or nginx) is a web server which can also be used as a reverse proxy, load balancer, mail proxy and HTTP cache. The software was created by Igor Sysoev and first publicly released in 2004. A company of the same name was founded in 2011","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/78354fdb-9e8d-43be-a51a-75dc508974e5_NGINX-On-Ubuntu-1200x1200.jpg","category":{"name":"tutorials","slug":"tutorials"},"tags":[{"name":"ec2","slug":"ec2"},{"name":"nginx","slug":"nginx"},{"name":"ubuntu","slug":"ubuntu"}],"slug":"how-can-i-install-nginx-on-aws-ec2-ubuntu-16.04-machine-and-host-multiple-websites","total":0}]}