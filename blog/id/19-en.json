{"id":19,"title":"Find Longest Increasing Subsequence Using Binary Search","imageUrl":"11b79284-f1ed-4645-ade0-e4eb5a2b247c_longest-increasing-subsequence.png","dateCreated":"2018-07-12T11:08:33.866Z","dateModified":"2018-07-14T03:26:50.263Z","contributedBy":"AskGif","content":"<p>In this approach we will find longest increasing Subsequence using Binary Search. Time Complexity for this approach will be <strong>nlogn</strong>.</p>\r\n<p><span style=\"color: #576871; font-family: OpenSans, Arial, Helvetica, sans-serif; font-size: 13px;\">The task is to find the length of the longest subsequence in a given array of integers such that all elements of the subsequence are sorted in strictly ascending order. This is called the Longest Increasing Subsequence (LIS) problem.</span></p>\r\n<pre class=\"language-java\"><code>public class LongestIncreasingSubsequenceBinarySearch {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tint[] arr = new int[] {3, 4, -1, 5, 8, 2, 3, 12, 7, 9, 10};\r\n\t\tint[] tempArr = new int[arr.length];\r\n\t\tint[] resArr = new int[arr.length];\r\n\t\tint len=0;\r\n\t\tint tempArrLastIndex = 0;\r\n\t\t\r\n\t\tfor(int i=0;i&lt;arr.length;i++) {\r\n\t\t\tresArr[i]=-1;\r\n\t\t}\r\n\t\t\r\n\t\tfor(int i=0;i&lt;arr.length-1;i++) {\r\n\t\t\tif(arr[i+1]&gt;arr[tempArr[tempArrLastIndex]]) {\r\n\t\t\t\ttempArrLastIndex++;\r\n\t\t\t\ttempArr[tempArrLastIndex]=i+1;\r\n\t\t\t\tlen++;\r\n\t\t\t\tresArr[i+1]=tempArr[tempArrLastIndex-1];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tfor(int j=0;j&lt;=tempArrLastIndex;j++) {\r\n\t\t\t\t\tif(arr[i+1]&lt;arr[tempArr[j]]) {\r\n\t\t\t\t\t\ttempArr[j]=i+1;\r\n\t\t\t\t\t\tif(j==0)\r\n\t\t\t\t\t\t\tresArr[i+1]=0;\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tresArr[i+1]=tempArr[j-1];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tSystem.out.println(\"Increasing Subsequence : \" + (len+1));\r\n\t\tint i = tempArr[tempArrLastIndex];\r\n\t\twhile(resArr[i] != -1)\r\n\t\t{\r\n\t\t\tSystem.out.println(arr[i]);\r\n\t\t\ti = resArr[i];\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n</code></pre>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/11b79284-f1ed-4645-ade0-e4eb5a2b247c_longest-increasing-subsequence.png","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"find-longest-increasing-subsequence-using-binary-search","tags":[{"name":"interview","slug":"interview"},{"name":"java","slug":"java"},{"name":"algorithm","slug":"algorithm"},{"name":"lis","slug":"lis"}],"recommendations":[{"id":1728,"title":"Minimum Changes To Make Alternating Binary String - String - Easy - LeetCode","imageUrl":"icon_85c66994-0911-4abb-b06f-a20a0a11dcd4.jpg","dateCreated":"2021-03-31T07:22:03.012Z","dateModified":"2021-03-31T07:22:08.602Z","contributedBy":"sumitc91","content":"You are given a string s consisting only of the characters '0' and '1'. In one operation, you can change any '0' to '1' or vice versa.\nThe string is called alternating if no two adjacent characters are equal. For example, the string \"010\" is alternating, while the string \"0100\" is not.","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/85c66994-0911-4abb-b06f-a20a0a11dcd4.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"string","slug":"string"}],"slug":"minimum-changes-to-make-alternating-binary-string-string-easy-leetcode","total":0},{"id":1699,"title":"Database Tutorial","imageUrl":"icon_c7cd88d2-763e-4ef9-9beb-362cd1bf07b7.jpg","dateCreated":"2020-11-20T07:41:52.695Z","dateModified":"2020-11-20T07:42:01.215Z","contributedBy":"sumitc91","content":"Relational database management system (RDBMS)<br />A relational database like SQL is a collection of data items organized in tables.\nACID is a set of properties of relational database transactions.\nAtomicity - Each transaction is all or nothing<br />Consistency - Any transaction wil","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/c7cd88d2-763e-4ef9-9beb-362cd1bf07b7.jpg","category":{"name":"tutorials","slug":"tutorials"},"tags":[{"name":"interview","slug":"interview"}],"slug":"database-tutorial","total":0},{"id":1668,"title":"Triangle - Array - Medium - LeetCode","imageUrl":"icon_40571e99-73c8-48d0-aa94-4a53cb2adbce.jpg","dateCreated":"2020-11-17T12:18:25.997Z","dateModified":"2020-11-17T12:18:30.576Z","contributedBy":"sumitc91","content":"Given a triangle, find the minimum path sum from top to bottom. Each step you may move to adjacent numbers on the row below.\nFor example, given the following triangle\n[<br />&nbsp; &nbsp; &nbsp;[2],<br />&nbsp; &nbsp; [3,4],<br />&nbsp; &nbsp;[6,5,7],<br />&nbsp; [4,1,8,3]<br />]<br","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/40571e99-73c8-48d0-aa94-4a53cb2adbce.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"triangle-array-medium-leetcode","total":0},{"id":1609,"title":"Customers Who Never Order - Sql - Easy - LeetCode","imageUrl":"icon_3979029e-3ead-4244-a16d-a1344d80e6ec.jpg","dateCreated":"2020-10-16T07:20:40.745Z","dateModified":"2020-10-16T07:20:46.124Z","contributedBy":"sumitc91","content":"Suppose that a website contains two tables, the Customers table and the Orders table. Write a SQL query to find all customers who never order anything.\nTable: Customers.\n+----+-------+<br />| Id | Name &nbsp;|<br />+----+-------+<br />| 1 &nbsp;| Joe &nbsp; |<br />| 2 &nbsp;| Henry ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/3979029e-3ead-4244-a16d-a1344d80e6ec.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"mysql","slug":"mysql"},{"name":"sql","slug":"sql"}],"slug":"customers-who-never-order-sql-easy-leetcode","total":0}]}