{"id":20,"title":"Coin Change Problem Algorithm Solution","imageUrl":"ceddc0d4-c5a2-46bd-b91e-f5413ff64816_Coin-Change-Problem.jpg","dateCreated":"2018-07-12T13:29:09.634Z","dateModified":"2018-07-12T13:29:09.634Z","contributedBy":"AskGif","content":"<p>The change-making problem, also known as minimum coin change problem, addresses the question of finding the minimum number of coins (of certain denominations) that add up to a given amount of money refer coin change problem. It is a knapsack type problem, and has applications wider than just currency.</p>\r\n<p>It is also the most common variation of the coin change problem, a general case of partition in which, given the available denominations of an infinite set of coins, the objective is to find out the number of possible ways of making a change for a specific amount of money, without considering the order of the coins.</p>\r\n<pre class=\"language-java\"><code>public class CoinChangingProblem {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tint[] coins = new int[] {1, 2, 3};\r\n\t\tint total = 5;\r\n\t\tint[][] dp = new int[coins.length][total+1];\r\n\t\t\r\n\t\tfor(int i=0;i&lt;coins.length;i++) {\r\n\t\t\tfor(int j=0;j&lt;total+1;j++) {\r\n\t\t\t\tif(j==0)\r\n\t\t\t\t\tdp[i][j]=1;\r\n\t\t\t\telse if(i==0) {\r\n\t\t\t\t\tif (coins[i]&lt;=j) \r\n\t\t\t\t\t\tdp[i][j]=1;\r\n\t\t\t\t}\r\n\t\t\t\telse if(coins[i]&gt;j)\r\n\t\t\t\t\tdp[i][j]=dp[i-1][j];\r\n\t\t\t\telse\r\n\t\t\t\t\tdp[i][j]=dp[i-1][j] + dp[i][j-coins[i]];\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tSystem.out.println(dp[coins.length-1][total]);\r\n\t}\r\n}\r\n</code></pre>\r\n<p>It is weakly NP-hard, but may be solved optimally in pseudo-polynomial time by dynamic programming.</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/ceddc0d4-c5a2-46bd-b91e-f5413ff64816_Coin-Change-Problem.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"coin-change-problem-algorithm-solution","tags":[{"name":"dynamic-programming","slug":"dynamic-programming"},{"name":"java","slug":"java"},{"name":"algorithm","slug":"algorithm"},{"name":"interview","slug":"interview"}],"recommendations":[{"id":1718,"title":"Calculate Money in Leetcode Bank - Maths - Easy - LeetCode","imageUrl":"icon_8f7ac85a-3434-4f99-ba13-6b64b13831b7.jpg","dateCreated":"2021-01-10T05:17:33.968Z","dateModified":"2021-01-10T05:17:40.265Z","contributedBy":"sumitc91","content":"Hercy wants to save money for his first car. He puts money in the Leetcode bank every day.\nHe starts by putting in $1 on Monday, the first day. Every day from Tuesday to Sunday, he will put in $1 more than the day before. On every subsequent Monday, he will put in $1 more than the previous","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/8f7ac85a-3434-4f99-ba13-6b64b13831b7.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"गणित","slug":"maths"}],"slug":"calculate-money-in-leetcode-bank-maths-easy-leetcode","total":0},{"id":1682,"title":"Teemo Attacking - Array - Medium - LeetCode","imageUrl":"icon_03f183b7-2b4e-49b5-9009-249834a17a2e.jpg","dateCreated":"2020-11-20T03:15:55.545Z","dateModified":"2020-11-20T03:16:00.413Z","contributedBy":"sumitc91","content":"In LOL world, there is a hero called Teemo and his attacking can make his enemy Ashe be in poisoned condition. Now, given the Teemo's attacking ascending time series towards Ashe and the poisoning time duration per Teemo's attacking, you need to output the total time that Ashe is in poisoned cond","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/03f183b7-2b4e-49b5-9009-249834a17a2e.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"teemo-attacking-array-medium-leetcode","total":0},{"id":1636,"title":"Two Strings - HashMap - Easy - HackerRank","imageUrl":"icon_b574251c-e9c0-4be6-9bc1-7c86f8da1806.jpg","dateCreated":"2020-10-24T07:22:16.972Z","dateModified":"2020-10-24T07:22:22.952Z","contributedBy":"sumitc91","content":"Given two strings, determine if they share a common substring. A substring may be as small as one character.\nFor example, the words \"a\", \"and\", \"art\" share the common substring . The words \"be\" and \"cat\" do not share a substring.\nFunction Description\nComplete the function two","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/b574251c-e9c0-4be6-9bc1-7c86f8da1806.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"hackerrank","slug":"hackerrank"},{"name":"hash-table","slug":"hash-table"}],"slug":"two-strings-hashmap-easy-hackerrank","total":0},{"id":1609,"title":"Customers Who Never Order - Sql - Easy - LeetCode","imageUrl":"icon_3979029e-3ead-4244-a16d-a1344d80e6ec.jpg","dateCreated":"2020-10-16T07:20:40.745Z","dateModified":"2020-10-16T07:20:46.124Z","contributedBy":"sumitc91","content":"Suppose that a website contains two tables, the Customers table and the Orders table. Write a SQL query to find all customers who never order anything.\nTable: Customers.\n+----+-------+<br />| Id | Name &nbsp;|<br />+----+-------+<br />| 1 &nbsp;| Joe &nbsp; |<br />| 2 &nbsp;| Henry ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/3979029e-3ead-4244-a16d-a1344d80e6ec.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"mysql","slug":"mysql"},{"name":"sql","slug":"sql"}],"slug":"customers-who-never-order-sql-easy-leetcode","total":0}]}