{"id":211,"title":"What is a Heap?","imageUrl":"80944397-ba9b-4d97-bcce-176b789b4f04_Heap-Data-Structure.jpg","dateCreated":"2019-01-03T15:41:47.483Z","dateModified":"2019-01-03T15:42:05.659Z","contributedBy":"AskGif","content":"<p>A heap is a tree with some special properties. The basic requirement of a heap is that the value of</p>\r\n<p>a node must be &gt; (or &lt;) than the values of its children. This is called heap property. A heap also</p>\r\n<p>has the additional property that all leaves should be at h or h &ndash; 1 levels (where h is the height of</p>\r\n<p>the tree) for some h &gt; 0 (complete binary trees). That means heap should form a complete binary</p>\r\n<p>tree (as shown below).</p>\r\n<p>&nbsp;</p>\r\n<p>Types of Heaps?</p>\r\n<p>Based on the property of a heap we can classify heaps into two types:</p>\r\n<p>&bull; Min heap: The value of a node must be less than or equal to the values of its</p>\r\n<p>children</p>\r\n<p>&nbsp;</p>\r\n<p>&bull; Max heap: The value of a node must be greater than or equal to the values of its</p>\r\n<p>children</p>\r\n<p>&nbsp;</p>\r\n<p>Binary Heaps</p>\r\n<p>In binary heap each node may have up to two children. In practice, binary heaps are enough and</p>\r\n<p>we concentrate on binary min heaps and binary max heaps for the remaining discussion.</p>\r\n<p>Representing Heaps: Before looking at heap operations, let us see how heaps can be</p>\r\n<p>represented. One possibility is using arrays. Since heaps are forming complete binary trees, there</p>\r\n<p>will not be any wastage of locations. For the discussion below let us assume that elements are</p>\r\n<p>stored in arrays, which starts at index 0.</p>\r\n<p>source: Data Structures and Algorithms Made Easy in Java - Narasimha Karumanchi</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/80944397-ba9b-4d97-bcce-176b789b4f04_Heap-Data-Structure.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"what-is-a-heap","tags":[{"name":"प्रशन","slug":"questions"},{"name":"min-heap","slug":"min-heap"},{"name":"Heap-Data-Structure","slug":"heap-data-structure"},{"name":"max-heap","slug":"max-heap"},{"name":"algorithm","slug":"algorithm"}],"recommendations":[{"id":1703,"title":"Array Nesting - Array - Medium - LeetCode","imageUrl":"icon_5da00dcd-3cd3-4eb0-a2ee-26865bba7184.jpg","dateCreated":"2020-11-21T07:20:04.928Z","dateModified":"2020-11-21T07:20:11.837Z","contributedBy":"sumitc91","content":"A zero-indexed array A of length N contains all integers from 0 to N-1. Find and return the longest length of set S, where S[i] = {A[i], A[A[i]], A[A[A[i]]], ... } subjected to the rule below.\nSuppose the first element in S starts with the selection of element A[i] of index = i, the next e","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/5da00dcd-3cd3-4eb0-a2ee-26865bba7184.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"array-nesting-array-medium-leetcode","total":0},{"id":1619,"title":"Classes More Than 5 Students - Sql - Easy - LeetCode","imageUrl":"icon_e71c8d7a-4f1f-4f65-8676-b2f2b13032cb.jpg","dateCreated":"2020-10-17T06:01:27.477Z","dateModified":"2020-10-17T06:01:38.886Z","contributedBy":"sumitc91","content":"There is a table courses with columns: student and class\nPlease list out all classes which have more than or equal to 5 students.\nFor example, the table:\n+---------+------------+<br />| student | class &nbsp; &nbsp; &nbsp;|<br />+---------+------------+<br />| A &nbsp; &nbsp;","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/e71c8d7a-4f1f-4f65-8676-b2f2b13032cb.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"sql","slug":"sql"}],"slug":"classes-more-than-5-students-sql-easy-leetcode","total":0},{"id":1610,"title":"Valid Phone Numbers - Bash - Easy - LeetCode","imageUrl":"icon_903f4733-4a8e-4987-9d87-0e0feefd9f8e.jpg","dateCreated":"2020-10-16T07:46:02.223Z","dateModified":"2020-10-16T07:46:13.79Z","contributedBy":"sumitc91","content":"Given a text file file.txt that contains list of phone numbers (one per line), write a one liner bash script to print all valid phone numbers.\nYou may assume that a valid phone number must appear in one of the following two formats: (xxx) xxx-xxxx or xxx-xxx-xxxx. (x means a digit)\n","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/903f4733-4a8e-4987-9d87-0e0feefd9f8e.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"valid-phone-numbers-bash-easy-leetcode","total":0},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode","total":0}]}