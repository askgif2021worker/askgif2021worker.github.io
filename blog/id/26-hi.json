{"id":26,"title":"Cutting Rod Problem to get maximum profit","imageUrl":"9e5dad83-cf44-4cbb-802a-d2b361487079_cutting-rod.png","dateCreated":"2018-07-13T13:29:30.675Z","dateModified":"2018-07-14T04:10:50.978Z","contributedBy":"AskGif","content":"<p>You are given a rod of a particular length and prices at which those different lengths of this rod can be sell, how will you cut this rod to maximize your profit?&nbsp;</p>\r\n<p>We will be using dynamic programming to solve this problem. Java Solution for the problem is given below:</p>\r\n<p>&nbsp;</p>\r\n<pre class=\"language-java\"><code>import java.util.HashMap;\r\n\r\npublic class CuttingRodProblem {\r\n\t\r\n\tprivate static int max(int a, int b) {\r\n\t\treturn a&gt;b?a:b;\r\n\t}\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t//adding extra 0 in beginning as dummy value.\r\n\t\tInteger[] rodLenArr = new Integer[] {0, 1, 2, 3, 4};\r\n\t\tInteger length = 5;\r\n\t\tHashMap&lt;Integer,Integer&gt; profit = new HashMap&lt;Integer,Integer&gt;();\r\n\t\tprofit.put(rodLenArr[0], 0);\r\n\t\tprofit.put(rodLenArr[1], 2);\r\n\t\tprofit.put(rodLenArr[2], 5);\r\n\t\tprofit.put(rodLenArr[3], 7);\r\n\t\tprofit.put(rodLenArr[4], 8);\r\n\t\t\r\n\t\tInteger[][] dp = new Integer[rodLenArr.length+1][length+1];\r\n\t\tfor(int i=0;i&lt;rodLenArr.length;i++) {\r\n\t\t\tfor(int j=0;j&lt;length+1;j++) {\r\n\t\t\t\tif(j==0 || i == 0)\r\n\t\t\t\t\tdp[i][j]=0;\r\n\t\t\t\telse if(j&lt;rodLenArr[i]) {\r\n\t\t\t\t\tdp[i][j]=dp[i-1][j];\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tdp[i][j]=max(dp[i-1][j],\r\n\t\t\t\t\t\t\tdp[i][j-rodLenArr[i]]\r\n\t\t\t\t\t\t\t\t\t+profit.get(rodLenArr[i]));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tSystem.out.println(dp[rodLenArr.length-1][length]);\r\n\t}\r\n}\r\n</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Time Complexity of the above solution will be n*m. Where n is the total number of different lengths of the rod while m is the length of the given rod.</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/9e5dad83-cf44-4cbb-802a-d2b361487079_cutting-rod.png","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"cutting-rod-problem-to-get-maximum-profit","tags":[{"name":"dynamic-programming","slug":"dynamic-programming"},{"name":"algorithm","slug":"algorithm"},{"name":"interview","slug":"interview"},{"name":"java","slug":"java"}],"recommendations":[{"id":1700,"title":"अतुल्यकालिकता ट्यूटोरियल","imageUrl":"icon_0b59af20-c986-4d3f-b12b-304dc3797df3.png","dateCreated":"2020-11-20T07:45:02.912Z","dateModified":"2020-11-20T07:45:07.976Z","contributedBy":"sumitc91","content":"अतुल्यकालिक वर्कफ़्लोज़ महंगे ऑपरेशनों के लिए अनुरोध समय को कम करने में मदद करते हैं जो अन्यथा इन-लाइन में किए जाएंगे। वे समय-समय पर काम करने से पहले भी मदद कर सकते हैं, जैसे कि समय-समय पर डेटा एकत्र करना।\nसंदेश की कतारें<br />संदेश की कतारें संदेश प्राप्त, धारण और वितरित करती हैं। यदि कोई","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/0b59af20-c986-4d3f-b12b-304dc3797df3.png","category":{"name":"शिक्षण","slug":"tutorials"},"tags":[{"name":"interview","slug":"interview"}],"slug":"asynchronism-tutorial","total":0},{"id":1698,"title":"अनुप्रयोग परत क्या है?","imageUrl":"icon_6faa8ad3-f4c7-411a-a351-f5721537582b.jpg","dateCreated":"2020-11-20T07:40:00.435Z","dateModified":"2020-11-20T07:40:05.453Z","contributedBy":"sumitc91","content":"वेब परत को एप्लिकेशन लेयर (जिसे प्लेटफ़ॉर्म लेयर के रूप में भी जाना जाता है) से अलग करना आपको दोनों परतों को स्वतंत्र रूप से स्केल करने और कॉन्फ़िगर करने की अनुमति देता है। बिना अतिरिक्त वेब सर्वर को जोड़ने के बिना एप्लिकेशन सर्वर को जोड़ने में एक नया एपीआई परिणाम जोड़ना। एकल जिम्मेदारी सिद्धांत ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/6faa8ad3-f4c7-411a-a351-f5721537582b.jpg","category":{"name":"शिक्षण","slug":"tutorials"},"tags":[{"name":"interview","slug":"interview"}],"slug":"what-is-application-layer","total":0},{"id":1639,"title":"Search in Rotated Sorted Array - Array - Medium - LeetCode","imageUrl":"icon_92804ec8-8b64-41e0-a4f4-89ed11e1a5e2.jpg","dateCreated":"2020-10-24T14:15:15.013Z","dateModified":"2020-10-24T14:15:23.602Z","contributedBy":"sumitc91","content":"You are given an integer array nums sorted in ascending order, and an integer target.\nSuppose that nums is rotated at some pivot unknown to you beforehand (i.e., [0,1,2,4,5,6,7] might become [4,5,6,7,0,1,2]).\nIf target is found in the array return its index, otherwise, return -1.</p","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/92804ec8-8b64-41e0-a4f4-89ed11e1a5e2.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"search-in-rotated-sorted-array-array-medium-leetcode","total":0},{"id":1609,"title":"Customers Who Never Order - Sql - Easy - LeetCode","imageUrl":"icon_3979029e-3ead-4244-a16d-a1344d80e6ec.jpg","dateCreated":"2020-10-16T07:20:40.745Z","dateModified":"2020-10-16T07:20:46.124Z","contributedBy":"sumitc91","content":"Suppose that a website contains two tables, the Customers table and the Orders table. Write a SQL query to find all customers who never order anything.\nTable: Customers.\n+----+-------+<br />| Id | Name &nbsp;|<br />+----+-------+<br />| 1 &nbsp;| Joe &nbsp; |<br />| 2 &nbsp;| Henry ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/3979029e-3ead-4244-a16d-a1344d80e6ec.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"mysql","slug":"mysql"},{"name":"sql","slug":"sql"}],"slug":"customers-who-never-order-sql-easy-leetcode","total":0}]}