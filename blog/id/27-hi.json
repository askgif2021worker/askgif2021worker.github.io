{"id":27,"title":"Convert an Array into Zig-Zag Fashion","imageUrl":"6f66c008-05c5-4b5c-9d26-c0e57e301991_Zigzag-Array.png","dateCreated":"2018-07-13T17:10:52.741Z","dateModified":"2018-07-31T05:20:13.559Z","contributedBy":"AskGif","content":"<p><span style=\"font-family: 'Open Sans', Helvetica, Arial, Verdana, sans-serif; font-size: 15px; text-align: justify;\">You are given an array of some distinct elements, you have to rearrange those elements of the array in a zig-zag fashion. The resultant array should be in format&nbsp; a &lt; b &gt; c &lt; d &gt; e &lt; f.</span></p>\r\n<p><span style=\"font-family: 'Open Sans', Helvetica, Arial, Verdana, sans-serif; font-size: 15px; text-align: justify;\">First, we will solve this problem in nlogn&nbsp;Time complexity. in this scenario, we will first sort the Array and then will apply the zig-zap logic.</span></p>\r\n<pre class=\"language-java\"><code>import java.util.Arrays;\r\n\r\npublic class ZigZagArray {\r\n\tpublic static void main(String[] args) {\r\n\t\t\r\n\t\t//nlong approach\r\n\t\tint[] arr = new int[] {4, 3, 7, 8, 6, 2, 1};\r\n\t\t\r\n\t\t//Sort the array \r\n\t\tArrays.sort(arr);\r\n\t\t\r\n\t\t//Swap elements in pair skipping first element\r\n\t\tfor(int i=1;i&lt;arr.length-1;i+=2) {\r\n\t\t\tint temp = arr[i];\r\n\t\t\tarr[i]=arr[i+1];\r\n\t\t\tarr[i+1]=temp;\r\n\t\t}\r\n\t\t\r\n\t\tStringBuilder str = new StringBuilder();\r\n\t\tfor(int i=0;i&lt;arr.length;i++) {\r\n\t\t\tstr.append(arr[i]).append(' ');\r\n\t\t}\r\n\t\tSystem.out.print(str);\r\n\t}\r\n}\r\n</code></pre>\r\n<p>The time complexity of the above solution is O(nlogn) for sorting the array using quick sort.</p>\r\n<p>&nbsp;</p>\r\n<p>Now We will Optimize our solution for O(n) time complexity.</p>\r\n<pre class=\"language-java\"><code>import java.util.Arrays;\r\n\r\npublic class ZigZagArray {\r\n\tpublic static void main(String[] args) {\r\n\t\t\r\n\t\t//O(n) approach\r\n\t\tint[] arr = new int[] {4, 3, 7, 8, 6, 2, 1};\r\n\t\t\r\n\t\t//flag to keep track of swapping order, i.e either increasing or decrasing order logic\r\n\t\tBoolean isGreaterOrder = true;\r\n\t\t\r\n\t\t//Swap elements in in alternate order\r\n\t\tfor(int i=0;i&lt;arr.length-1;i++) {\r\n\t\t\t//if it is increasing order\r\n\t\t\tif(isGreaterOrder) {\r\n\t\t\t\tif(arr[i]&lt;arr[i+1]) {\r\n\t\t\t\t\tint temp = arr[i];\r\n\t\t\t\t\tarr[i]=arr[i+1];\r\n\t\t\t\t\tarr[i+1]=temp;\r\n\t\t\t\t}\r\n\t\t\t\tisGreaterOrder = !isGreaterOrder;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif(arr[i]&gt;arr[i+1]) {\r\n\t\t\t\t\tint temp=arr[i];\r\n\t\t\t\t\tarr[i]=arr[i+1];\r\n\t\t\t\t\tarr[i+1]=temp;\r\n\t\t\t\t}\r\n\t\t\t\tisGreaterOrder = !isGreaterOrder;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tStringBuilder str = new StringBuilder();\r\n\t\tfor(int i=0;i&lt;arr.length;i++) {\r\n\t\t\tstr.append(arr[i]).append(' ');\r\n\t\t}\r\n\t\tSystem.out.print(str);\r\n\t}\r\n}\r\n</code></pre>\r\n<p>&nbsp;</p>\r\n<p>The Time complexity of the above solution is O(n) as we are iterating through the Array only once.</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/6f66c008-05c5-4b5c-9d26-c0e57e301991_Zigzag-Array.png","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"convert-an-array-into-zig-zag-fashion","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"interview","slug":"interview"},{"name":"java","slug":"java"},{"name":"array","slug":"array"}],"recommendations":[{"id":1727,"title":"Check if Array Is Sorted and Rotated - Array - Easy - LeetCode","imageUrl":"icon_2110d383-81cb-448a-8e4f-3773ff37294d.jpg","dateCreated":"2021-03-31T05:53:14.382Z","dateModified":"2021-03-31T05:53:27.431Z","contributedBy":"sumitc91","content":"Given an array nums, return true if the array was originally sorted in non-decreasing order, then rotated some number of positions (including zero). Otherwise, return false.\nThere may be duplicates in the original array.\nNote: An array A rotated by x positions results in an array B ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/2110d383-81cb-448a-8e4f-3773ff37294d.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"check-if-array-is-sorted-and-rotated-array-easy-leetcode","total":0},{"id":1647,"title":"Slowest Key - Array - Easy - LeetCode","imageUrl":"icon_836f29a5-8a43-4160-b64a-fbf8416788bd.jpg","dateCreated":"2020-10-31T03:14:43.566Z","dateModified":"2020-10-31T03:14:48.648Z","contributedBy":"sumitc91","content":"A newly designed keypad was tested, where a tester pressed a sequence of n keys, one at a time.\nYou are given a string keysPressed of length n, where keysPressed[i] was the ith key pressed in the testing sequence, and a sorted list releaseTimes, where releaseTimes[i] was the time the ith k","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/836f29a5-8a43-4160-b64a-fbf8416788bd.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"slowest-key-array-easy-leetcode","total":0},{"id":1614,"title":"Fizz Buzz - List - Easy - LeetCode","imageUrl":"icon_6cbe0cee-fefe-40d0-8e0c-36270b4fa350.jpg","dateCreated":"2020-10-16T11:55:40.749Z","dateModified":"2020-10-16T11:55:50.939Z","contributedBy":"sumitc91","content":"Write a program that outputs the string representation of numbers from 1 to n.\nBut for multiples of three, it should output &ldquo;Fizz&rdquo; instead of the number and for the multiples of five output &ldquo;Buzz&rdquo;. For numbers which are multiples of both three and five output &ldquo","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/6cbe0cee-fefe-40d0-8e0c-36270b4fa350.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"fizz-buzz-list-easy-leetcode","total":0},{"id":1609,"title":"Customers Who Never Order - Sql - Easy - LeetCode","imageUrl":"icon_3979029e-3ead-4244-a16d-a1344d80e6ec.jpg","dateCreated":"2020-10-16T07:20:40.745Z","dateModified":"2020-10-16T07:20:46.124Z","contributedBy":"sumitc91","content":"Suppose that a website contains two tables, the Customers table and the Orders table. Write a SQL query to find all customers who never order anything.\nTable: Customers.\n+----+-------+<br />| Id | Name &nbsp;|<br />+----+-------+<br />| 1 &nbsp;| Joe &nbsp; |<br />| 2 &nbsp;| Henry ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/3979029e-3ead-4244-a16d-a1344d80e6ec.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"mysql","slug":"mysql"},{"name":"sql","slug":"sql"}],"slug":"customers-who-never-order-sql-easy-leetcode","total":0}]}