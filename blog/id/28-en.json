{"id":28,"title":"Check if Pythagorean Triplet is present in an Array","imageUrl":"b9364632-4b59-4581-9ba9-1e8e0c19a123_pythagorean-triplet.png","dateCreated":"2018-07-14T09:20:48.293Z","dateModified":"2018-07-14T09:20:56.481Z","contributedBy":"AskGif","content":"<p>You will be given an array of integers, you have to write a function which will return true if there is a triplet (a, b, c) that satisfies a^2+ b^2 = c^2 otherwise false.</p>\r\n<p>We will solve the problem with the naive approach first then we will optimize our solution.</p>\r\n<pre class=\"language-java\"><code>public class PythagoreanTripletInArray {\r\n\t//Naive solution in N^3\r\n\t\r\n\tprivate static Boolean IsPythagoreanTriplet(double d, \r\n\t\t\tdouble e, double f) {\r\n\t\tif(d == (e+f))\r\n\t\t\treturn true;\r\n\t\telse if(e == (d+f))\r\n\t\t\treturn true;\r\n\t\telse if(f == (d+e))\r\n\t\t\treturn true;\r\n\t\t\r\n\t\treturn false;\r\n\t}\r\n\tpublic static void main(String[] args) {\r\n\t\tlong startTime = System.nanoTime();\r\n\t\t\r\n\t\tint[] arr = new int[] {3, 1, 4, 6, 5};\r\n\t\tBoolean isPresent = false;\r\n\t\tfor(int i=0;i&lt;arr.length-2;i++) {\r\n\t\t\tfor(int j=i+1;j&lt;arr.length-1;j++) {\r\n\t\t\t\tfor(int k=j+1;k&lt;arr.length;k++) {\r\n\t\t\t\t\tif(IsPythagoreanTriplet( \r\n\t\t\t\t\t\t\tMath.pow(arr[i],2),\r\n\t\t\t\t\t\t\tMath.pow(arr[j],2),\r\n\t\t\t\t\t\t\tMath.pow(arr[k],2))) {\r\n\t\t\t\t\t\tisPresent = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(isPresent)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif(isPresent)\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\t\r\n\t\tSystem.out.println(isPresent);\r\n\t\tlong endTime   = System.nanoTime();\r\n\t\tlong totalTime = endTime - startTime;\r\n\t\tSystem.out.println(\"Total Time (nanoseconds) : \" + (totalTime));\r\n\t}\r\n}\r\n</code></pre>\r\n<p>The time complexity of the above solution is O(N^3).</p>\r\n<p>Output :</p>\r\n<pre class=\"language-markup\"><code>true\r\nTotal Time (nanoseconds) : 421758\r\n</code></pre>\r\n<p>&nbsp;</p>\r\n<p><span style=\"font-family: 'Open Sans', Helvetica, Arial, Verdana, sans-serif; font-size: 15px; text-align: justify;\">Now we will optimize the solution for time complexity O(N^2).</span></p>\r\n<pre class=\"language-java\"><code>import java.util.Arrays;\r\n\r\npublic class PythagoreanTripletInArray {\r\n\t//Optimized solution in N^2\r\n\t\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\tlong startTime = System.nanoTime();\r\n\t\t\r\n\t\tint[] arr = new int[] {3, 1, 4, 6, 5};\r\n\t\tBoolean isPresent = false;\r\n\t\t\r\n\t\t//sort the array\r\n\t\tArrays.sort(arr);\r\n\t\t\r\n\t\t//find squares of each element in array\r\n\t\tfor(int i=0;i&lt;arr.length;i++) {\r\n\t\t\tarr[i]=(int) Math.pow(arr[i], 2);\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t// will pick last element and will compare for other two\r\n\t\t\r\n\t\tfor(int i=arr.length-1;i&gt;=0;i--) {\r\n\t\t\tint j=0;\r\n\t\t\tint k=i-1;\r\n\t\t\twhile(j&lt;k) {\r\n\t\t\t\tif(arr[i]==(arr[j]+arr[k])) {\r\n\t\t\t\t\tisPresent = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\telse if(arr[i]&gt;(arr[j]+arr[k])) {\r\n\t\t\t\t\tj++;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tk--;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(isPresent)\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\t\r\n\t\tSystem.out.println(isPresent);\r\n\t\tlong endTime   = System.nanoTime();\r\n\t\tlong totalTime = endTime - startTime;\r\n\t\tSystem.out.println(\"Total Time (nanoseconds) : \" + (totalTime));\r\n\t}\r\n}\r\n</code></pre>\r\n<pre class=\"language-markup\"><code>true\r\nTotal Time (nanoseconds) : 798584</code></pre>\r\n<p>&nbsp;</p>\r\n<p>You will see the considerable time difference between these two approaches when the input size is very large.</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/b9364632-4b59-4581-9ba9-1e8e0c19a123_pythagorean-triplet.png","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"check-if-pythagorean-triplet-is-present-in-an-array","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"java","slug":"java"},{"name":"array","slug":"array"},{"name":"interview","slug":"interview"}],"recommendations":[{"id":1726,"title":"Maximum Swap - Array - Medium - LeetCode","imageUrl":"icon_16589057-204a-4929-8beb-ec745719515b.jpg","dateCreated":"2021-03-04T10:15:19.693Z","dateModified":"2021-03-04T10:16:54.289Z","contributedBy":"sumitc91","content":"Given a non-negative integer, you could swap two digits at most once to get the maximum valued number. Return the maximum valued number you could get.\nExample 1:<br />Input: 2736<br />Output: 7236<br />Explanation: Swap the number 2 and the number 7.<br />Example 2:<br />Input: 9973<br />O","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/16589057-204a-4929-8beb-ec745719515b.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"maximum-swap-array-medium-leetcode","total":0},{"id":1695,"title":"Content delivery network (CDN)","imageUrl":"icon_57adef3f-d788-4753-bda7-a12a6bc0d462.jpg","dateCreated":"2020-11-20T07:35:23.915Z","dateModified":"2020-11-20T07:35:35.322Z","contributedBy":"sumitc91","content":"A content delivery network (CDN) is a globally distributed network of proxy servers, serving content from locations closer to the user. Generally, static files such as HTML/CSS/JS, photos, and videos are served from CDN, although some CDNs such as Amazon's CloudFront support dynamic content. The ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/57adef3f-d788-4753-bda7-a12a6bc0d462.jpg","category":{"name":"tutorials","slug":"tutorials"},"tags":[{"name":"interview","slug":"interview"}],"slug":"content-delivery-network-cdn","total":0},{"id":1687,"title":"How to Design Mint.com","imageUrl":"icon_2709cf5f-1f6f-435b-bf00-9cf152142df5.png","dateCreated":"2020-11-20T06:53:27.643Z","dateModified":"2020-11-20T06:53:36.94Z","contributedBy":"sumitc91","content":"Step 1: Outline use cases and constraints<br />Gather requirements and scope the problem. Ask questions to clarify use cases and constraints. Discuss assumptions.\nWithout an interviewer to address clarifying questions, we'll define some use cases and constraints.\nUse cases<br />We'l","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/2709cf5f-1f6f-435b-bf00-9cf152142df5.png","category":{"name":"tutorials","slug":"tutorials"},"tags":[{"name":"design","slug":"design"},{"name":"interview","slug":"interview"},{"name":"system-design","slug":"system-design"}],"slug":"how-to-design-mint.com","total":0},{"id":1609,"title":"Customers Who Never Order - Sql - Easy - LeetCode","imageUrl":"icon_3979029e-3ead-4244-a16d-a1344d80e6ec.jpg","dateCreated":"2020-10-16T07:20:40.745Z","dateModified":"2020-10-16T07:20:46.124Z","contributedBy":"sumitc91","content":"Suppose that a website contains two tables, the Customers table and the Orders table. Write a SQL query to find all customers who never order anything.\nTable: Customers.\n+----+-------+<br />| Id | Name &nbsp;|<br />+----+-------+<br />| 1 &nbsp;| Joe &nbsp; |<br />| 2 &nbsp;| Henry ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/3979029e-3ead-4244-a16d-a1344d80e6ec.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"mysql","slug":"mysql"},{"name":"sql","slug":"sql"}],"slug":"customers-who-never-order-sql-easy-leetcode","total":0}]}