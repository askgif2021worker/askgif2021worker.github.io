{"id":298,"title":"How to use ASP.NET Web API cross-origin with ASP.NET Identity ?","imageUrl":"de304292-ed2e-4e28-8b7f-2cc5898f57ac_cross-origin.jpg","dateCreated":"2019-03-20T16:50:35.577Z","dateModified":"2019-03-20T16:54:16.861Z","contributedBy":"AskGif","content":"<p>ASP.NET Web API is a fantastic piece of the .NET family (there is certainly some weirdness since we now have MVC and Web API with nearly identical methods, but ASP.NET MVC 6 is coming :)). However, getting a SPA or mobile hybrid (Ionic!) app working isn&rsquo;t the most pleasant experience.</p>\r\n<p>&nbsp;</p>\r\n<p>Allowing Cross-Origin Requests</p>\r\n<p>So if you tried hitting the API without some setup, you&rsquo;ll notice your pre-flight OPTIONS request failed. This is happening because the browser wants to send a request BEFORE your request to make sure you&rsquo;re allowed to make your request.</p>\r\n<p>&nbsp;</p>\r\n<p>First things first, we need some packages. I had versions 3.0.1 and 5.0.0 respectively when writing this.</p>\r\n<pre class=\"language-markup\"><code>Install-Package Microsoft.Owin.Cors\r\nInstall-Package Microsoft.AspNet.Cors</code></pre>\r\n<p>Secondly, find /AppStart/Startup.Auth.cs and update the ConfigureAuth method to include the UseCors method as follows:</p>\r\n<pre class=\"language-markup\"><code>public void ConfigureAuth(IAppBuilder app)\r\n{\r\n    app.UseCors(Microsoft.Owin.Cors.CorsOptions.AllowAll);\r\n    \r\n    // creates owin contexts and stuff\r\n}</code></pre>\r\n<p>&nbsp;</p>\r\n<p>This will allow you to make requests from a different server.</p>\r\n<p>&nbsp;</p>\r\n<p>Setting up the requests for registering and logging in</p>\r\n<p>Register user</p>\r\n<p>To make a request to create a user, you want to send the following JSON to /api/account/register (if you&rsquo;re using default Identity routes):</p>\r\n<pre class=\"language-markup\"><code>var registrationData = {\r\n    UserName: userName,\r\n    Password: password,\r\n    ConfirmPassword: confirmPassword\r\n};</code></pre>\r\n<p>Login user</p>\r\n<p>To make a request to log in a user, you want to send the following JSON to /token with the following JSON:</p>\r\n<pre class=\"language-markup\"><code>var loginData = {\r\n    UserName: userName,\r\n    Password: password,\r\n    grant_type: password\r\n};</code></pre>\r\n<p>This may seem a little odd. We don&rsquo;t have a TokenController! What&rsquo;s it hitting? Well, if you go back to your /App_Start/Startup.Auth.cs file, you will see the following:</p>\r\n<pre class=\"language-markup\"><code>/ Configure the application for OAuth based flow\r\nPublicClientId = \"self\";\r\nOAuthOptions = new OAuthAuthorizationServerOptions\r\n{\r\n    TokenEndpointPath = new PathString(\"/Token\"),\r\n    Provider = new ApplicationOAuthProvider(PublicClientId),\r\n    AuthorizeEndpointPath = new PathString(\"/api/Account/ExternalLogin\"),\r\n    AccessTokenExpireTimeSpan = TimeSpan.FromDays(14),\r\n    AllowInsecureHttp = true\r\n};\r\n\r\n// Enable the application to use bearer tokens to authenticate users\r\napp.UseOAuthBearerTokens(OAuthOptions);</code></pre>\r\n<p>This code configures the /token response.</p>\r\n<p>&nbsp;</p>\r\n<p>Sending requests for API endpoints with [Authorize]</p>\r\n<p>When you make the request to log in, you will receive an &ldquo;access_token&rdquo; in the response. You&rsquo;ll need to hang on to this value, and send it as an &lsquo;Authorization&rsquo; header, like so (if you&rsquo;re using Angular):</p>\r\n<pre class=\"language-markup\"><code>   $http.defaults.headers.common['Authorization'] = \"Bearer \" + authentication.access_token;</code></pre>\r\n<p>Now all of your requests will send over this Authorization header, so when Identity authenticates the request, it will set your static User object to your user!</p>\r\n<p>&nbsp;</p>\r\n<p>All done!</p>\r\n<p>This is the workflow for hitting an API cross-origin and authenticating requests. You&rsquo;ll hit the /token URL to get your bearer token and add it to all subsequent requests requiring authorization.</p>\r\n<p>&nbsp;</p>\r\n<p>Using AngularJS?</p>\r\n<p>If you&rsquo;re using Angular or Ionic Framework, I&rsquo;ve posted a Gist providing some of the workflows explained above for registering, logging in, and making authorized requests. But be warned &ndash; it&rsquo;s not perfect. You may have to do some clean-up. If you do, please let me know. In the meantime, I will try to refactor it into something nice and pretty.</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/de304292-ed2e-4e28-8b7f-2cc5898f57ac_cross-origin.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"how-to-use-asp.net-web-api-cross-origin-with-asp.net-identity-","tags":[{"name":"mvc-5","slug":"mvc-5"},{"name":"angular-js","slug":"angular-js"},{"name":"javascript","slug":"javascript"},{"name":"asp-dot-net","slug":"asp-dot-net"}],"recommendations":[{"id":316,"title":"Getting started with TypeScript and Gulp","imageUrl":"c1d4ad00-74ec-458e-9500-723fe524c485_what_is_gulpjs.jpg","dateCreated":"2019-03-23T17:18:39.722Z","dateModified":"2019-03-23T17:18:57.109Z","contributedBy":"AskGif","content":"I&rsquo;ll be upfront &ndash; getting TypeScript building is frustrating, especially the first time. I&rsquo;m starting to get the hang of it, but keep finding myself running into brick walls with no help. This post will help guide you in opening the doors to the world of TypeScript (and I&rsquo;","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/c1d4ad00-74ec-458e-9500-723fe524c485_what_is_gulpjs.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"typescript","slug":"typescript"},{"name":"javascript","slug":"javascript"},{"name":"gulp","slug":"gulp"}],"slug":"getting-started-with-typescript-and-gulp","total":0},{"id":308,"title":"Using Moq to Mock Entity Framework DBSet objects","imageUrl":"c8e8ffe9-8d90-4cf5-a9a0-51866c6c6056_moq-ef.jpg","dateCreated":"2019-03-23T12:57:02.663Z","dateModified":"2019-03-23T14:12:53.798Z","contributedBy":"AskGif","content":"Unit testing in .NET is pretty nice when your dependency injection/IoC is set up well, but Entity Framework 6 isn&rsquo;t the nicest framework for mocking and testing. If you&rsquo;re using ASP.NET MVC 5, you may have run into this scenario.\r\n&nbsp;\r\nProblem: You want to use or mock","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/c8e8ffe9-8d90-4cf5-a9a0-51866c6c6056_moq-ef.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"asp-dot-net","slug":"asp-dot-net"},{"name":"ninject","slug":"ninject"},{"name":"mvc-5","slug":"mvc-5"}],"slug":"using-moq-to-mock-entity-framework-dbset-objects","total":0},{"id":302,"title":"Authorize .NET MVC Core API requests with OpenIddict and Identity","imageUrl":"9e3a5c90-baba-4d5b-88b1-3d354e200ce7_oidc-debugger.png","dateCreated":"2019-03-21T03:58:16.695Z","dateModified":"2019-03-21T03:58:16.695Z","contributedBy":"AskGif","content":"OpenIddict is an excellent open-source library for dealing with OAuth and OpenID in the new MVC Core (previously known as MVC6) for .NET Core. At first, I dreaded having to relearn this process; OAuth Bearer Tokens in MVC5 was dicey and kind of annoying to get the hang of. But, OpenIddict is pret","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/9e3a5c90-baba-4d5b-88b1-3d354e200ce7_oidc-debugger.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"c-sharp","slug":"c-sharp"},{"name":"asp-dot-net","slug":"asp-dot-net"},{"name":"mvc-core","slug":"mvc-core"}],"slug":"authorize-.net-mvc-core-api-requests-with-openiddict-and-identity","total":0},{"id":143,"title":"How to Convert given bytes in KB, MB, GB etc?","imageUrl":"2942acea-4a45-42f6-9fa6-fb552e182169_storage.jpg","dateCreated":"2018-10-25T05:32:57.852Z","dateModified":"2018-10-25T05:34:56.322Z","contributedBy":"AskGif","content":"How to calculate total bytes available in particular folder and I want to convert the total bytes available to total bytes available in KB, MB, GB etc?\r\nif you are calculating total bytes then you can use the following function to find out the respective total bytes in KB, MB, GB, TB etc.<","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/2942acea-4a45-42f6-9fa6-fb552e182169_storage.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"c-sharp","slug":"c-sharp"},{"name":"dot-net","slug":"dot-net"},{"name":"questions","slug":"questions"},{"name":"asp-dot-net","slug":"asp-dot-net"}],"slug":"how-to-convert-given-bytes-in-kb-mb-gb-etc","total":0}]}