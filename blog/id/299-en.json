{"id":299,"title":"Angular UI Bootstrap model For Confirm By Typing","imageUrl":"e9865107-9e45-47e0-9852-0bc89ce189c0_github-delete.jpg","dateCreated":"2019-03-20T17:10:35.174Z","dateModified":"2019-03-22T05:27:10.622Z","contributedBy":"AskGif","content":"<p>Github has a pretty nice UX for deleting repositories. When you click &ldquo;Delete&rdquo;, you aren&rsquo;t presented with a typical &ldquo;Are you sure? Yes/No&rdquo; alert. Instead, you are shown a modal with an in-your-face warning telling you the reprocussions of completing the modal, followed by a text input requiring you to enter a specific value before continuing.</p>\r\n<p>I think this is pretty great for this case. Not all Delete actions warrant this, but some do. So, I created an AngularJS directive to provide this. Feel free to use it, but keep in mind it does require AngularUI Bootstrap (note the $modal dependency).</p>\r\n<p>&nbsp;</p>\r\n<p>The directive:</p>\r\n<pre class=\"language-javascript\"><code>app.directive(\"confirmByTyping\", [\"$modal\", function ($modal) {\r\n    var getConfirmTypingModalTemplate = function (title, message) {\r\n        var modalTemplate = \"&lt;div class=\\\"modal-header\\\"&gt; \" +\r\n                                \"&lt;h3 class=\\\"modal-title\\\"&gt;\" + title + \"&lt;/h3&gt; \" +\r\n                            \"&lt;/div&gt;  \" +\r\n                            \"&lt;div class=\\\"modal-body\\\"&gt; \" + message +\r\n                                \"&lt;div class=\\\"form-group\\\" ng-class=\\\"{ 'has-success': confirmInput === expectedInput, 'has-error': confirmInput !== expectedInput }\\\"&gt;\" +\r\n                                    \"&lt;input class=\\\"form-control\\\" auto-focus ng-model=\\\"confirmInput\\\" ng-keydown=\\\"$event.which === 13 &amp;&amp; closeConfirmTypingModal(true)\\\"&gt;\" +\r\n                                \"&lt;/div&gt;\" +\r\n                            \"&lt;/div&gt; \" +\r\n                            \"&lt;div class=\\\"modal-footer modal-footer-buttons\\\"&gt; \" +\r\n                                \"&lt;button class=\\\"btn btn-primary\\\" type=\\\"button\\\" ng-click=\\\"closeConfirmTypingModal(true)\\\" ng-disabled=\\\"confirmInput !== expectedInput\\\"&gt;OK&lt;/button&gt; \" +\r\n                                \"&lt;button class=\\\"btn btn-danger\\\" type=\\\"button\\\" ng-click=\\\"closeConfirmTypingModal()\\\"&gt;Cancel&lt;/button&gt; \" +\r\n                            \"&lt;/div&gt;\";\r\n\r\n        return modalTemplate;\r\n    }\r\n\r\n    var getConfirmAlertModalTemplate = function (message) {\r\n        var modalTemplate = \"&lt;div class=\\\"modal-body\\\"&gt; \" + message + \"&lt;/div&gt; \" +\r\n                            \"&lt;div class=\\\"modal-footer modal-footer-buttons\\\"&gt; \" +\r\n                                \"&lt;button class=\\\"btn btn-primary\\\" type=\\\"button\\\" ng-click=\\\"closeConfirmAlertModal(true)\\\"&gt;Yes&lt;/button&gt; \" +\r\n                                \"&lt;button class=\\\"btn btn-danger\\\" type=\\\"button\\\" ng-click=\\\"closeConfirmAlertModal()\\\"&gt;No&lt;/button&gt; \" +\r\n                            \"&lt;/div&gt;\";\r\n\r\n        return modalTemplate;\r\n    }\r\n\r\n    return {\r\n        restrict: \"A\",\r\n        scope: {\r\n            confirmAction: \"&amp;\"\r\n        },\r\n        link: function (scope, element, attrs) {\r\n            element.bind(\"click\", function ($event) {\r\n                $event.target.blur();\r\n\r\n                var message = attrs.modalMessage,\r\n                    title = attrs.modalTitle,\r\n                    value = attrs.confirmValue;\r\n\r\n                var confirmTypingModal = function() {\r\n                    $modal.open({\r\n                        backdrop: \"static\",\r\n                        template: getConfirmTypingModalTemplate(title, message),\r\n                        controller: [\"$scope\", \"$modalInstance\", function($scope, $modalInstance) {\r\n                                $scope.expectedInput = value;\r\n                                $scope.confirmInput = \"\";\r\n\r\n                                $scope.closeConfirmTypingModal = function (confirmed) {\r\n                                    if (confirmed) {\r\n                                        if ($scope.expectedInput !== $scope.confirmInput) {\r\n                                            return;\r\n                                        }\r\n\r\n                                        scope.confirmAction();\r\n                                    }\r\n                                    $modalInstance.close();\r\n                                };\r\n                            }\r\n                        ]\r\n                    });\r\n                };\r\n\r\n                $modal.open({\r\n                    backdrop: \"static\",\r\n                    template: getConfirmAlertModalTemplate(title, message),\r\n                    controller: [\"$scope\", \"$modalInstance\", function ($scope, $modalInstance) {\r\n                        $scope.closeConfirmAlertModal = function (confirmed) {\r\n                            $modalInstance.close();\r\n\r\n                            if (confirmed) {\r\n                                confirmTypingModal();\r\n                            }\r\n                        };\r\n                    }]\r\n                });\r\n            });\r\n        }\r\n    }\r\n}]);</code></pre>\r\n<p>Example use:</p>\r\n<pre class=\"language-markup\"><code>&lt;button confirm-by-typing confirm-action=\"deleteSite(site)\" confirm-value=\"{{site.Path}}\" alert-message=\"Are you sure you want to delete '{{site.Name}}'?\" modal-title=\"Are you sure you want to delete '{{site.Name}}'?\" modal-message=\"Enter the site path &lt;strong&gt;'{{site.Path}}'&lt;/strong&gt; below to confirm.\"&gt;\r\n    Delete\r\n&lt;/button&gt;</code></pre>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/e9865107-9e45-47e0-9852-0bc89ce189c0_github-delete.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"angular-ui-bootstrap-model-for-confirm-by-typing","tags":[{"name":"angular-js","slug":"angular-js"},{"name":"javascript","slug":"javascript"}],"recommendations":[{"id":435,"title":"Implementing Interactive feedback form Using Jquery","imageUrl":"b56fe3f7-796d-4b9b-b3bb-2654741dc12a_feedback-form.png","dateCreated":"2019-08-21T08:30:01.552Z","dateModified":"2019-08-21T08:30:18.126Z","contributedBy":"AskGif","content":"I had designed a magical feedback form using Jquery with easing animation effect. It's simple and interesting just hiding and showing the div tags with jquery. Use it and make something better your web project feedback box.\r\n&nbsp;\r\nJavascript Code\r\nContains five animation mo","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/b56fe3f7-796d-4b9b-b3bb-2654741dc12a_feedback-form.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"javascript","slug":"javascript"}],"slug":"implementing-interactive-feedback-form-using-jquery","total":0},{"id":418,"title":"Count and Show Live Character in a Meter with Jquery.","imageUrl":"81050176-2db7-4955-b030-f01084c4a1a0_livecountjquery.jpg","dateCreated":"2019-08-14T09:56:23.772Z","dateModified":"2019-08-26T11:10:20.972Z","contributedBy":"AskGif","content":"In this post, I want to explain how to do live character or word count meter using Jquery. It is interesting and simple just ten lines of java script code. Use it and enrich your web applications with jquery.&nbsp;\r\n&nbsp;\r\nJavascript code\r\n$('#contentbox').keyup(function(){}","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/81050176-2db7-4955-b030-f01084c4a1a0_livecountjquery.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"javascript","slug":"javascript"},{"name":"jquery","slug":"jquery"}],"slug":"count-and-show-live-character-in-a-meter-with-jquery","total":0},{"id":316,"title":"Getting started with TypeScript and Gulp","imageUrl":"c1d4ad00-74ec-458e-9500-723fe524c485_what_is_gulpjs.jpg","dateCreated":"2019-03-23T17:18:39.722Z","dateModified":"2019-03-23T17:18:57.109Z","contributedBy":"AskGif","content":"I&rsquo;ll be upfront &ndash; getting TypeScript building is frustrating, especially the first time. I&rsquo;m starting to get the hang of it, but keep finding myself running into brick walls with no help. This post will help guide you in opening the doors to the world of TypeScript (and I&rsquo;","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/c1d4ad00-74ec-458e-9500-723fe524c485_what_is_gulpjs.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"typescript","slug":"typescript"},{"name":"javascript","slug":"javascript"},{"name":"gulp","slug":"gulp"}],"slug":"getting-started-with-typescript-and-gulp","total":0},{"id":296,"title":"What are Angular TypeScript Decorators in object-oriented front-end applications ?","imageUrl":"78201682-3caa-41be-accf-af9179653c34_angular-decorators.jpg","dateCreated":"2019-03-20T15:50:07.168Z","dateModified":"2019-03-22T05:16:15.61Z","contributedBy":"AskGif","content":"I've taken up TypeScript over the last few months, and it is such a breath of fresh air. TypeScript has quickly become one of my favorite languages to develop in, especially on the front-end. One of my favorite features is TypeScript Decorators, and I&rsquo;ve been taking advantage of them to tri","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/78201682-3caa-41be-accf-af9179653c34_angular-decorators.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"typescript","slug":"typescript"},{"name":"c-sharp","slug":"c-sharp"},{"name":"javascript","slug":"javascript"},{"name":"asp-dot-net","slug":"asp-dot-net"},{"name":"ionic-framework","slug":"ionic-framework"},{"name":"angular-js","slug":"angular-js"}],"slug":"what-are-angular-typescript-decorators-in-object-oriented-front-end-applications-","total":0}]}