{"id":30,"title":"Find the smallest sub array with a sum greater than a given number.","imageUrl":"0177c302-e832-43f0-be4d-09201ebca6b8_arrays.jpg","dateCreated":"2018-07-16T05:21:47.133Z","dateModified":"2018-07-16T05:22:39.011Z","contributedBy":"AskGif","content":"<p>You are given an array of integers and a particular number, you need to find the smallest subarray possible with a sum greater than the given Number. The requirement is to write an algorithm that calculates in Time Complexity of O(n).</p>\r\n<p>Java Solution of the given problem is :</p>\r\n<pre class=\"language-java\"><code>import java.util.LinkedList;\r\nimport java.util.Queue;\r\n\r\npublic class SmallestSubArrayWithSumGreaterThanNumber {\r\n\tpublic static void main(String[] args) {\r\n\t\t int arr[] = {1, 4, 45, 6, 10, 19};\r\n\t     int x = 51;\r\n\t     \r\n\t     long startTime = System.nanoTime();\r\n\t     \r\n\t     int res = FindSmallestSubArrayWithSumGreater(arr,x);\r\n\t     if(res == arr.length + 1)\r\n\t    \t System.out.println(\"Not Available\");\r\n\t     else\r\n\t    \t System.out.println(res);\r\n\t     \r\n\t    long endTime   = System.nanoTime();\r\n\t\tlong totalTime = endTime - startTime;\r\n\t\tSystem.out.println(\"Total Time (nanoseconds) : \" + (totalTime));\r\n\t}\r\n\r\n\tprivate static int FindSmallestSubArrayWithSumGreater(int[] arr, int x) {\r\n\t\t\r\n\t\tQueue&lt;Integer&gt; queue = new LinkedList&lt;Integer&gt;();\r\n\t\tint sum = 0;\r\n\t\tint min_len = arr.length + 1;\r\n\t\tfor(int i=0;i&lt;arr.length;i++)\r\n\t\t{\r\n\t\t\tif(x &lt; sum &amp;&amp; min_len &gt; queue.size()) {\r\n\t\t\t\tmin_len = queue.size();\r\n\t\t\t\tsum -= (Integer) queue.remove();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tsum += arr[i];\r\n\t\t\t\tqueue.add(arr[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn min_len;\r\n\t}\r\n}\r\n</code></pre>\r\n<p>Output:</p>\r\n<pre class=\"language-markup\"><code>3\r\nTotal Time (nanoseconds) : 665298</code></pre>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/0177c302-e832-43f0-be4d-09201ebca6b8_arrays.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"find-the-smallest-sub-array-with-a-sum-greater-than-a-given-number","tags":[{"name":"java","slug":"java"},{"name":"interview","slug":"interview"},{"name":"algorithm","slug":"algorithm"},{"name":"queue","slug":"queue"},{"name":"array","slug":"array"}],"recommendations":[{"id":1694,"title":"What is Domain name system (DNS)?","imageUrl":"icon_5d73c05a-94c0-45e6-b648-a89025ffe4e8.png","dateCreated":"2020-11-20T07:33:27.184Z","dateModified":"2020-11-20T07:33:33.359Z","contributedBy":"sumitc91","content":"A Domain Name System (DNS) translates a domain name such as www.example.com to an IP address.\nDNS is hierarchical, with a few authoritative servers at the top level. Your router or ISP provides information about which DNS server(s) to contact when doing a lookup. Lower level DNS servers ca","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/5d73c05a-94c0-45e6-b648-a89025ffe4e8.png","category":{"name":"tutorials","slug":"tutorials"},"tags":[{"name":"interview","slug":"interview"}],"slug":"what-is-domain-name-system-dns","total":0},{"id":1712,"title":"How to Design a key-value cache to save the results of the most recent web server queries","imageUrl":"icon_0e55c5af-9a54-497f-a246-ff16a71e6bbf.png","dateCreated":"2020-11-20T06:59:50.28Z","dateModified":"2020-11-20T06:59:59.352Z","contributedBy":"sumitc91","content":"Step 1: Outline use cases and constraints<br />Gather requirements and scope the problem. Ask questions to clarify use cases and constraints. Discuss assumptions.\nWithout an interviewer to address clarifying questions, we'll define some use cases and constraints.\nUse cases<br />We'l","ampImage":null,"category":{"name":"tutorials","slug":"tutorials"},"tags":[{"name":"design","slug":"design"},{"name":"interview","slug":"interview"},{"name":"system-design","slug":"system-design"}],"slug":"how-to-design-a-key-value-cache-to-save-the-results-of-the-most-recent-web-server-queries","total":0},{"id":1660,"title":"Check Array Formation Through Concatenation - Array - Easy - LeetCode","imageUrl":"icon_85392267-2028-4c02-8f8a-96c1d2368591.jpg","dateCreated":"2020-11-03T06:50:35.06Z","dateModified":"2020-11-03T06:50:53.205Z","contributedBy":"sumitc91","content":"You are given an array of distinct integers arr and an array of integer arrays pieces, where the integers in pieces are distinct. Your goal is to form arr by concatenating the arrays in pieces in any order. However, you are not allowed to reorder the integers in each array pieces[i].\nRetur","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/85392267-2028-4c02-8f8a-96c1d2368591.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"check-array-formation-through-concatenation-array-easy-leetcode","total":0},{"id":1609,"title":"Customers Who Never Order - Sql - Easy - LeetCode","imageUrl":"icon_3979029e-3ead-4244-a16d-a1344d80e6ec.jpg","dateCreated":"2020-10-16T07:20:40.745Z","dateModified":"2020-10-16T07:20:46.124Z","contributedBy":"sumitc91","content":"Suppose that a website contains two tables, the Customers table and the Orders table. Write a SQL query to find all customers who never order anything.\nTable: Customers.\n+----+-------+<br />| Id | Name &nbsp;|<br />+----+-------+<br />| 1 &nbsp;| Joe &nbsp; |<br />| 2 &nbsp;| Henry ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/3979029e-3ead-4244-a16d-a1344d80e6ec.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"mysql","slug":"mysql"},{"name":"sql","slug":"sql"}],"slug":"customers-who-never-order-sql-easy-leetcode","total":0}]}