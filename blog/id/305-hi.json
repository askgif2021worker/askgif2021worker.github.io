{"id":305,"title":"Correct way to Inject MVC and HTTP attributes and filters using Ninject","imageUrl":"8613db06-a70f-4441-8984-8dcdcfeaae34_net-dependency-injection-ninja-with-ninject.jpg","dateCreated":"2019-03-21T16:03:24.217Z","dateModified":"2019-03-21T16:03:53.399Z","contributedBy":"AskGif","content":"<p>Ninject has some fun quirks. For instance, one \"bug\" I came across was that if you hit an ASP.NET controller with a custom attribute, the attribute&rsquo;s constructor-injected dependencies would be null on startup. For example, take the following ActionFilterAttribute:</p>\r\n<pre class=\"language-markup\"><code>public class ForceHttpAttribute : ActionFilterAttribute\r\n{\r\n    private readonly IControllerContextHelper _controllerContextHelper;\r\n\r\n    public ForceHttpAttribute(IControllerContextHelper controllerContextHelper)\r\n    {\r\n        _controllerContextHelper = controllerContextHelper;\r\n    }\r\n\r\n    /// &lt;summary&gt;\r\n    /// Called before the controller action executes. Checks for HTTPS requsts\r\n    /// and redirects to HTTP if so.\r\n    /// &lt;/summary&gt;\r\n    /// &lt;param name=\"filterContext\"&gt;The filter context.&lt;/param&gt;\r\n    public override void OnActionExecuting(ActionExecutingContext filterContext)\r\n    {\r\n        var currentUri = _controllerContextHelper.GetRequestUri(filterContext);\r\n\r\n        var isSecure = _controllerContextHelper.IsSecureConnection(filterContext);\r\n\r\n        if (isSecure)\r\n        {\r\n            var secureUri = currentUri.AbsoluteUri.Replace(\"https://\", \"http://\");\r\n            filterContext.Result = new RedirectResult(secureUri);\r\n        }\r\n    }\r\n}</code></pre>\r\n<p>You can use BindFilter to bind this to implementation or an interface, such as the following INCORRECT WAY (don&rsquo;t do this!):</p>\r\n<pre class=\"language-markup\"><code>kernel.BindFilter&lt;ForceHttpAttribute&gt;(System.Web.Mvc.FilterScope.Controller, 0).WhenControllerHas&lt;ForceHttpAttribute&gt;();</code></pre>\r\n<p>This is wrong for a couple of reasons. For instance, you&rsquo;re binding implementation to itself. This will lead to the attribute&rsquo;s OnActionExecuting to run twice. So, don&rsquo;t do this. For me, the first time OnActionExecuting ran, there were null dependencies (sometimes throwing null reference exceptions), but the second time around it would execute as expected. This lead to some fun debugging&hellip;</p>\r\n<p>&nbsp;</p>\r\n<p>The solution</p>\r\n<p>The solution I found was to refactor the above class into the following:</p>\r\n<pre class=\"language-markup\"><code>public class ForceHttpAttribute : Attribute\r\n{\r\n    public class Implementation : ActionFilterAttribute\r\n    {\r\n        private readonly IControllerContextHelper _controllerContextHelper;\r\n\r\n        public Implementation(IControllerContextHelper controllerContextHelper)\r\n        {\r\n            _controllerContextHelper = controllerContextHelper;\r\n        }\r\n\r\n        /// &lt;summary&gt;\r\n        /// Called before the controller action executes. Checks for HTTPS requsts\r\n        /// and redirects to HTTP if so.\r\n        /// &lt;/summary&gt;\r\n        /// &lt;param name=\"filterContext\"&gt;The filter context.&lt;/param&gt;\r\n        public override void OnActionExecuting(ActionExecutingContext filterContext)\r\n        {\r\n            var currentUri = _controllerContextHelper.GetRequestUri(filterContext);\r\n\r\n            var isSecure = _controllerContextHelper.IsSecureConnection(filterContext);\r\n\r\n            if (isSecure)\r\n            {\r\n                var secureUri = currentUri.AbsoluteUri.Replace(\"https://\", \"http://\");\r\n                filterContext.Result = new RedirectResult(secureUri);\r\n            }\r\n        }\r\n    }\r\n}</code></pre>\r\n<p>With the following Ninject binding:</p>\r\n<pre class=\"language-markup\"><code>kernel.BindFilter&lt;ForceHttpAttribute.Implementation&gt;(System.Web.Mvc.FilterScope.Controller, 0)\r\n     .WhenControllerHas&lt;ForceHttpAttribute&gt;()\r\n     .InRequestScope();</code></pre>\r\n<p>So what is this telling Ninject? It says whenever you find the filter [ForceHttpAttribute] (an implementation of Attribute), use the nested class ForceHttpAttribute.Implementation (an implementation of ActionFilterAttribute).</p>\r\n<p>&nbsp;</p>\r\n<p>This binding gave expected results. The dependencies were no longer null and the OnActionExecuting only ran once.</p>\r\n<p>&nbsp;</p>\r\n<p>If you&rsquo;re using an HTTP filter&rsquo;s, you will have to use the BindHttpFilter method:</p>\r\n<pre class=\"language-markup\"><code>kernel.BindHttpFilter&lt;MyHttpAttribute.Implementation&gt;(FilterScope.Controller)\r\n     .WhenControllerHas&lt;MyHttpAttribute&gt;()\r\n     .InRequestScope();</code></pre>\r\n<p>You can also pass the constructor arguments using the WithConstructorArgumentFromControllerAttribute method:</p>\r\n<pre class=\"language-markup\"><code>kernel.BindHttpFilter(FilterScope.Controller)\r\n     .WhenControllerHas().InRequestScope()\r\n     // \"myParameter\" is the constructor parameter name, MyParamater is the class property on MyHttpAttribute (i.e. public string MyParamater {get;set;})\r\n     .WithConstructorArgumentFromControllerAttribute(\"myParameter\", a =&gt; a.MyParameter);</code></pre>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/8613db06-a70f-4441-8984-8dcdcfeaae34_net-dependency-injection-ninja-with-ninject.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"correct-way-to-inject-mvc-and-http-attributes-and-filters-using-ninject","tags":[{"name":"mvc-5","slug":"mvc-5"},{"name":"asp-dot-net","slug":"asp-dot-net"},{"name":"ninject","slug":"ninject"}],"recommendations":[{"id":308,"title":"Using Moq to Mock Entity Framework DBSet objects","imageUrl":"c8e8ffe9-8d90-4cf5-a9a0-51866c6c6056_moq-ef.jpg","dateCreated":"2019-03-23T12:57:02.663Z","dateModified":"2019-03-23T14:12:53.798Z","contributedBy":"AskGif","content":"Unit testing in .NET is pretty nice when your dependency injection/IoC is set up well, but Entity Framework 6 isn&rsquo;t the nicest framework for mocking and testing. If you&rsquo;re using ASP.NET MVC 5, you may have run into this scenario.\r\n&nbsp;\r\nProblem: You want to use or mock","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/c8e8ffe9-8d90-4cf5-a9a0-51866c6c6056_moq-ef.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"asp-dot-net","slug":"asp-dot-net"},{"name":"ninject","slug":"ninject"},{"name":"mvc-5","slug":"mvc-5"}],"slug":"using-moq-to-mock-entity-framework-dbset-objects","total":0},{"id":303,"title":"Best way to Update or Replace Entities in Entity Framework 6","imageUrl":"c5dd46a9-091f-4d7a-ad21-a567ce42d24e_entity-framework-6.jpg","dateCreated":"2019-03-21T15:25:15.365Z","dateModified":"2019-03-22T09:15:39.015Z","contributedBy":"AskGif","content":"I&rsquo;ve been working with Entity Framework for a few years and one pain-point for me was updating existing data entities. It typically ended up being tedious property replacement that made the code look nasty, and caused the risk of mismatching property assignments or missing a property assign","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/c5dd46a9-091f-4d7a-ad21-a567ce42d24e_entity-framework-6.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"entity-framework","slug":"entity-framework"},{"name":"c-sharp","slug":"c-sharp"},{"name":"asp-dot-net","slug":"asp-dot-net"}],"slug":"best-way-to-update-or-replace-entities-in-entity-framework-6","total":0},{"id":302,"title":"Authorize .NET MVC Core API requests with OpenIddict and Identity","imageUrl":"9e3a5c90-baba-4d5b-88b1-3d354e200ce7_oidc-debugger.png","dateCreated":"2019-03-21T03:58:16.695Z","dateModified":"2019-03-21T03:58:16.695Z","contributedBy":"AskGif","content":"OpenIddict is an excellent open-source library for dealing with OAuth and OpenID in the new MVC Core (previously known as MVC6) for .NET Core. At first, I dreaded having to relearn this process; OAuth Bearer Tokens in MVC5 was dicey and kind of annoying to get the hang of. But, OpenIddict is pret","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/9e3a5c90-baba-4d5b-88b1-3d354e200ce7_oidc-debugger.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"c-sharp","slug":"c-sharp"},{"name":"asp-dot-net","slug":"asp-dot-net"},{"name":"mvc-core","slug":"mvc-core"}],"slug":"authorize-.net-mvc-core-api-requests-with-openiddict-and-identity","total":0},{"id":143,"title":"मैं केबी, एमबी, जीबी आदि में उपलब्ध बाइट्स में उपलब्ध बाइट्स कैसे परिवर्तित कर सकता हूं?","imageUrl":"2942acea-4a45-42f6-9fa6-fb552e182169_storage.jpg","dateCreated":"2018-10-25T05:32:57.852Z","dateModified":"2018-10-25T05:34:56.322Z","contributedBy":"AskGif","content":"How to calculate total bytes available in particular folder and I want to convert the total bytes available to total bytes available in KB, MB, GB etc?\r\nif you are calculating total bytes then you can use the following function to find out the respective total bytes in KB, MB, GB, TB etc.<","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/2942acea-4a45-42f6-9fa6-fb552e182169_storage.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"c-sharp","slug":"c-sharp"},{"name":"dot-net","slug":"dot-net"},{"name":"प्रशन","slug":"questions"},{"name":"asp-dot-net","slug":"asp-dot-net"}],"slug":"how-to-convert-given-bytes-in-kb-mb-gb-etc","total":0}]}