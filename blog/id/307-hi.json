{"id":307,"title":"Learning Postgresql (npgsql), Entity Framework 7 (EF Core), and ASP.NET MVC 6","imageUrl":"79554dfa-4ad4-4915-a2a6-bd45c746336f_ngpsql.jpg","dateCreated":"2019-03-21T19:08:49.31Z","dateModified":"2019-03-21T19:09:34.833Z","contributedBy":"AskGif","content":"<p>Finally, Entity Framework has support for databases other than SQL Server, and as many of us know, MVC 6 is cross-platform. This means we .NET devs can now launch our ASP.NET applications on a Linux server, saving huge on server costs and giving us some freedom. EF7 now supports SQL Server, Postgres, and SQLite, with Azure Table Storage and other non-relational data store support on the way. However, there is a noticeable lack of official MySQL support.</p>\r\n<p>&nbsp;</p>\r\n<p>Why Postgres?</p>\r\n<p>Linux</p>\r\n<p>So why Postgresql? Well, for one, MySQL is not available and it doesn&rsquo;t seem to be in the works (let me know if I&rsquo;m wrong). So that makes Postgresql the only Linux-based full-featured database provider.</p>\r\n<p>&nbsp;</p>\r\n<p>Strengths over SQL Server</p>\r\n<p>A nameless author published an interesting blog comparing SQL Server and Postgres. There are a lot of strong arguments as to why Postgres is stronger, or at least comparable, to SQL Server. Technical reasons aside, Postgresql has zero licensing fees. 2nd Quandrant posted a related blog on this at with some valuable information.</p>\r\n<p>&nbsp;</p>\r\n<p>JSON Support</p>\r\n<p>Non-relational data support in your relational database. The best of both worlds! There isn&rsquo;t direct EF7 LINQ support for this yet, but it is on the way. When it hits, this will solidify NPGSQL as my favourite provider.</p>\r\n<p>&nbsp;</p>\r\n<p>Software Requirements</p>\r\n<p>To get started, you&rsquo;ll need the following:</p>\r\n<p>1. The latest Visual Studio 2015 update and templates.</p>\r\n<p>2. PostgreSQL</p>\r\n<p>3. pgAdmin</p>\r\n<p>&nbsp;</p>\r\n<p>Setting up your project</p>\r\n<p>The following short steps will help you set up a Postgres database and update your ASP.NET application to use it as its default database connection.</p>\r\n<p>&nbsp;</p>\r\n<p>1. Set up your database</p>\r\n<p>Boot up pgAdmin and log in with the superuser credentials you supplied on installation. To create a database, drill into your localhost server, right click &ldquo;Databases&rdquo; and click &ldquo;New Database&rdquo;. Enter your database name and create it.</p>\r\n<p>&nbsp;</p>\r\n<p>2. Set up your credentials</p>\r\n<p>To create a user for your database, open up the query window for your localhost (the SQL icon in the icon bar). Run the following script:</p>\r\n<pre class=\"language-markup\"><code>create user {{username}} with password '{{password}}'; \r\ngrant all privileges on database {{database name}} to {{username}};</code></pre>\r\n<p>This will give your new user all the privileges on your new database.</p>\r\n<p>&nbsp;</p>\r\n<p>3. Create your project</p>\r\n<p>When you create your project, select the latest ASP.NET MVC 6 Web Application template. This will scaffold your user authentication models.</p>\r\n<p>&nbsp;</p>\r\n<p>4. Add your npgsql dependencies</p>\r\n<p>Here are all of the Entity Framework packages you&rsquo;ll need (as of the date this blog was posted). So, go to your project.json file and replace the existing references with these:</p>\r\n<pre class=\"language-markup\"><code>\"EntityFramework.Commands\": \"7.0.0-rc1-final\",\r\n\"EntityFramework.Core\": \"7.0.0-rc1-final\",\r\n\"EntityFramework.Relational\": \"7.0.0-rc1-final\",\r\n\"EntityFramework7.Npgsql\": \"3.1.0-rc1-3\",</code></pre>\r\n<p>NuGet should auto-restore these (isn&rsquo;t MVC6 package management so much nicer?).</p>\r\n<p>&nbsp;</p>\r\n<p>5. Delete all files in the Migrations folder</p>\r\n<p>The current templates automatically add a starter migration for your application. However, they are specific to SQL Server, so they have to be deleted. Otherwise, you won&rsquo;t be able to build.</p>\r\n<p>&nbsp;</p>\r\n<p>6. Update the EF7 Startup configuration</p>\r\n<p>In Startup.cs, you should see the following code:</p>\r\n<pre class=\"language-csharp\"><code>services.AddEntityFramework()\r\n.AddSqlServer()\r\n.AddDbContext&lt;ApplicationDbContext&gt;(options =&gt; options.UseSqlServer(Configuration[\"Data:DefaultConnection:ConnectionString\"]));</code></pre>\r\n<p>This sets up your EF7 context to work with the SQL Server provider. We don&rsquo;t want that! Swap that code out with the following:</p>\r\n<pre class=\"language-csharp\"><code>services.AddEntityFramework()\r\n.AddNpgsql()\r\n.AddDbContext&lt;ApplicationDbContext&gt;(options =&gt; options.UseNpgsql(Configuration[\"Data:DefaultConnection:ConnectionString\"]));</code></pre>\r\n<p>7. Update your DefaultConnection in your appsettings.json file</p>\r\n<p>If you open up appsettings.json, you should see the following:</p>\r\n<pre class=\"language-csharp\"><code>\"Data\": {\r\n    \"DefaultConnection\": {\r\n        \"ConnectionString\": \"Server=(localdb)\\\\mssqllocaldb;Database={{dbname}};Trusted_Connection=True;MultipleActiveResultSets=true\"\r\n    }\r\n},</code></pre>\r\n<p>Postgres connection strings are a little different, so replace with the following:</p>\r\n<pre class=\"language-csharp\"><code>\"Data\": {\r\n    \"DefaultConnection\": {\r\n        \"ConnectionString\": \"Host=localhost;Username={{username}};Password={{password}};Database={{database name}}\"\r\n    }\r\n},</code></pre>\r\n<p>8. Create and run the initialization migration</p>\r\n<p>We will need to jump to command prompt/PowerShell for this, so open it up and CD to the folder with your XPROJ file. Once you&rsquo;re there, execute the following:</p>\r\n<pre class=\"language-markup\"><code>dnx ef migrations add init\r\ndnx ef database update</code></pre>\r\n<p>This will add your first migration with required ASP.NET Identity modeling and then run the migration against your database. After you&rsquo;ve run these, refresh your server tree in pgAdmin and navigate to localhost -&gt; Databases -&gt; {{database name}} -&gt; Schemas -&gt; public -&gt; Tables. You&rsquo;ll see your new AspNet user tables there.</p>\r\n<p>&nbsp;</p>\r\n<p>9. Run your application</p>\r\n<p>That&rsquo;s it! You&rsquo;ve configured your application to use a Postgres database. You can register and look at your data in pgAdmin.</p>\r\n<p>&nbsp;</p>\r\n<p>Have fun!</p>\r\n<p>EF7 has a lot of changes, but for the most part, managing your context models is the same.</p>\r\n<p>&nbsp;</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/79554dfa-4ad4-4915-a2a6-bd45c746336f_ngpsql.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"learning-postgresql-npgsql-entity-framework-7-ef-core-and-asp.net-mvc-6","tags":[{"name":"entity-framework-core","slug":"entity-framework-core"},{"name":"asp-dot-net","slug":"asp-dot-net"},{"name":"postgres","slug":"postgres"},{"name":"mvc-core","slug":"mvc-core"}],"recommendations":[{"id":313,"title":"Learning Routing and AttributeRouting Web API 2 Controllers in MVC with Areas","imageUrl":"4285ec15-bc4b-4e02-bbb4-75307e546848_attribute-routing-aspnet-core.jpg","dateCreated":"2019-03-23T14:30:03.714Z","dateModified":"2019-03-23T14:30:49.016Z","contributedBy":"AskGif","content":"The Acumen ASP.NET MVC development team started working with the new Web API 2 controllers released with Visual Studio 2013, and quickly hit some important issues that took some research to resolve.\r\n&nbsp;\r\nRouting and AttributeRouting and using Web API 2 controllers inside an Area","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/4285ec15-bc4b-4e02-bbb4-75307e546848_attribute-routing-aspnet-core.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"c-sharp","slug":"c-sharp"},{"name":"asp-dot-net","slug":"asp-dot-net"},{"name":"mvc-5","slug":"mvc-5"}],"slug":"learning-routing-and-attributerouting-web-api-2-controllers-in-mvc-with-areas","total":0},{"id":296,"title":"What are Angular TypeScript Decorators in object-oriented front-end applications ?","imageUrl":"78201682-3caa-41be-accf-af9179653c34_angular-decorators.jpg","dateCreated":"2019-03-20T15:50:07.168Z","dateModified":"2019-03-22T05:16:15.61Z","contributedBy":"AskGif","content":"I've taken up TypeScript over the last few months, and it is such a breath of fresh air. TypeScript has quickly become one of my favorite languages to develop in, especially on the front-end. One of my favorite features is TypeScript Decorators, and I&rsquo;ve been taking advantage of them to tri","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/78201682-3caa-41be-accf-af9179653c34_angular-decorators.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"typescript","slug":"typescript"},{"name":"c-sharp","slug":"c-sharp"},{"name":"javascript","slug":"javascript"},{"name":"asp-dot-net","slug":"asp-dot-net"},{"name":"ionic-framework","slug":"ionic-framework"},{"name":"Angular-JS","slug":"angular-js"}],"slug":"what-are-angular-typescript-decorators-in-object-oriented-front-end-applications-","total":0},{"id":146,"title":"Xamarin.forms shared project gives error while creation","imageUrl":"63ea6650-3931-4a59-aad2-bb51e06cd6cd_xamarin-forms.png","dateCreated":"2018-10-26T05:01:17.134Z","dateModified":"2018-10-26T05:02:27.883Z","contributedBy":"AskGif","content":"Whenever I try to create a new xamarin.forms project it is giving error. The Error Details is as below,\r\nXamarin.Forms.1.3.1.6296: Could not install package 'Xamarin.Forms 1.3.1.6296'. You are trying to install this package into a project that targets 'Xamarin.iOS,Version=v1.0', but the pa","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/63ea6650-3931-4a59-aad2-bb51e06cd6cd_xamarin-forms.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"xamarin","slug":"xamarin"},{"name":"xamarin-forms","slug":"xamarin-forms"},{"name":"c-sharp","slug":"c-sharp"},{"name":"cross-platform","slug":"cross-platform"},{"name":"प्रशन","slug":"questions"},{"name":"dot-net","slug":"dot-net"},{"name":"asp-dot-net","slug":"asp-dot-net"}],"slug":"xamarin.forms-shared-project-gives-error-while-creation","total":0},{"id":143,"title":"मैं केबी, एमबी, जीबी आदि में उपलब्ध बाइट्स में उपलब्ध बाइट्स कैसे परिवर्तित कर सकता हूं?","imageUrl":"2942acea-4a45-42f6-9fa6-fb552e182169_storage.jpg","dateCreated":"2018-10-25T05:32:57.852Z","dateModified":"2018-10-25T05:34:56.322Z","contributedBy":"AskGif","content":"How to calculate total bytes available in particular folder and I want to convert the total bytes available to total bytes available in KB, MB, GB etc?\r\nif you are calculating total bytes then you can use the following function to find out the respective total bytes in KB, MB, GB, TB etc.<","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/2942acea-4a45-42f6-9fa6-fb552e182169_storage.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"c-sharp","slug":"c-sharp"},{"name":"dot-net","slug":"dot-net"},{"name":"प्रशन","slug":"questions"},{"name":"asp-dot-net","slug":"asp-dot-net"}],"slug":"how-to-convert-given-bytes-in-kb-mb-gb-etc","total":0}]}