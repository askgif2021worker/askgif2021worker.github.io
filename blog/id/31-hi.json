{"id":31,"title":"What is Asymptotic Analysis and how to calculate it?","imageUrl":"e2bab25d-22ad-45ac-baf5-67649dfc6f67_asymptotic-analysis.png","dateCreated":"2018-07-16T06:44:39.864Z","dateModified":"2018-07-16T06:46:02.415Z","contributedBy":"AskGif","content":"<p>In mathematical analysis, asymptotic analysis, also known as asymptotics, is a method of describing limiting behavior.</p>\r\n<p>As an illustration, suppose that we are interested in the properties of a function f(n) as n becomes very large. If f(n) = n^2 + 3n, then as n becomes very large, the term 3n becomes insignificant compared to n^2. The function f(n) is said to be \"asymptotically equivalent to n^2, as n &rarr; &infin;\". This is often written symbolically as f(n) ~ n^2, which is read as \"f(n) is asymptotic to n^2\".</p>\r\n<p>&nbsp;</p>\r\n<p><strong>Guidelines for Asymptotic Analysis</strong></p>\r\n<p>&nbsp;</p>\r\n<p>1) <strong>Loops</strong>: The running time of a loop is, at most, the running time of the statements inside the loop (including tests) multiplied by the number of iterations.</p>\r\n<pre class=\"language-java\"><code>//n times execution\r\nfor(int i=0;i&lt;=n;i++) {\r\n\tn = n + 5; // constant time c\r\n}\r\n\t\r\nTotal time = c x n = cn = O(n)</code></pre>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>2) <strong>Nested loops</strong>: Analyze from the inside out. Total running time is the product of the sizes of all the loops.</p>\r\n<pre class=\"language-java\"><code>//outer loop executes n times\r\n\tfor(int i=0;i&lt;n;i++) {\r\n\t\t//inner loop executes n times\r\n\t\tfor(int j=0;j&lt;n;j++) {\r\n\t\t\tn = n + 5; // constant time c\r\n\t\t}\r\n\t}\r\n\t\r\n\tTotal time = c x n x n = cn^2 = O(n^2)</code></pre>\r\n<p>&nbsp;</p>\r\n<p>3) <strong>Logarithmic complexity</strong>: An algorithm is O(logn) if it takes a constant time to cut the problem size by a fraction (usually by 1/2). As an example let us consider the following example:</p>\r\n<pre class=\"language-java\"><code>for(int i=0;i&lt;n;) {\r\n\t\ti = i*2;\r\n\t}</code></pre>\r\n<p>On careful observation, the value of i is doubling every time. Initially i = 1, in next step i = 2, and in subsequent steps i =4, 8 and so on.</p>\r\n<pre class=\"language-markup\"><code>Now we have\r\n\r\n2^k = n\r\n\r\ntaking log on both sides\r\n\r\nlog(2^k) = logn\r\nklog2 = logn\r\nk = logn // assuming base is 2\r\n\r\nTotal time = O(logn)</code></pre>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/e2bab25d-22ad-45ac-baf5-67649dfc6f67_asymptotic-analysis.png","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"what-is-asymptotic-analysis-and-how-to-calculate-it","tags":[{"name":"loop","slug":"loop"},{"name":"nested-loop","slug":"nested-loop"},{"name":"interview","slug":"interview"},{"name":"algorithm","slug":"algorithm"},{"name":"asymptotic-analysis","slug":"asymptotic-analysis"},{"name":"logarithmic-complexity","slug":"logarithmic-complexity"}],"recommendations":[{"id":1673,"title":"Minimum Size Subarray Sum - Array - Medium - LeetCode","imageUrl":"icon_9cd5847f-8b41-455d-8ac3-9b66f2dcb47e.jpg","dateCreated":"2020-11-18T09:07:17.833Z","dateModified":"2020-11-18T09:07:23.659Z","contributedBy":"sumitc91","content":"Given an array of n positive integers and a positive integer s, find the minimal length of a contiguous subarray of which the sum &ge; s. If there isn't one, return 0 instead.\nExample:&nbsp;\nInput: s = 7, nums = [2,3,1,2,4,3]<br />Output: 2<br />Explanation: the subarray [4,3] has t","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/9cd5847f-8b41-455d-8ac3-9b66f2dcb47e.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"minimum-size-subarray-sum-array-medium-leetcode","total":0},{"id":1659,"title":"बढ़ती आवृत्ति द्वारा क्रमबद्ध सरणी - सरणी - मध्यम - LeetCode","imageUrl":"icon_0607b46b-96fe-470e-a316-ee8bf5aeee8e.jpg","dateCreated":"2020-11-03T05:02:58.417Z","dateModified":"2020-11-03T05:10:52.862Z","contributedBy":"sumitc91","content":"Given an array of integers nums, sort the array in increasing order based on the frequency of the values. If multiple values have the same frequency, sort them in decreasing order.\nReturn the sorted array.\n&nbsp;\nExample 1:\nInput: nums = [1,1,2,2,2,3]<br />Output: [3,1","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/0607b46b-96fe-470e-a316-ee8bf5aeee8e.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"sort-array-by-increasing-frequency-array-medium-leetcode","total":0},{"id":1641,"title":"Combination Sum - Array - Medium - LeetCode","imageUrl":"icon_b42ea67c-de94-42f6-aa57-391837827a47.jpg","dateCreated":"2020-10-25T14:37:09.044Z","dateModified":"2020-10-25T14:37:53.305Z","contributedBy":"sumitc91","content":"Given an array of distinct integers candidates and a target integer target, return a list of all unique combinations of candidates where the chosen numbers sum to target. You may return the combinations in any order.\nThe same number may be chosen from candidates an unlimited number of time","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/b42ea67c-de94-42f6-aa57-391837827a47.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"combination-sum-array-medium-leetcode","total":0},{"id":1609,"title":"Customers Who Never Order - Sql - Easy - LeetCode","imageUrl":"icon_3979029e-3ead-4244-a16d-a1344d80e6ec.jpg","dateCreated":"2020-10-16T07:20:40.745Z","dateModified":"2020-10-16T07:20:46.124Z","contributedBy":"sumitc91","content":"Suppose that a website contains two tables, the Customers table and the Orders table. Write a SQL query to find all customers who never order anything.\nTable: Customers.\n+----+-------+<br />| Id | Name &nbsp;|<br />+----+-------+<br />| 1 &nbsp;| Joe &nbsp; |<br />| 2 &nbsp;| Henry ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/3979029e-3ead-4244-a16d-a1344d80e6ec.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"mysql","slug":"mysql"},{"name":"sql","slug":"sql"}],"slug":"customers-who-never-order-sql-easy-leetcode","total":0}]}