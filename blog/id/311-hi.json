{"id":311,"title":"How to Configure Log4Net file appender in C#?","imageUrl":"04ebb0d1-dfaa-46d4-93e1-40705900dc6e_log4net.jpg","dateCreated":"2019-03-23T13:53:18.05Z","dateModified":"2019-03-23T14:13:45.141Z","contributedBy":"AskGif","content":"<p>I&rsquo;ll be honest. Setting up Log4net for ASP.NET MVC apps is a pain. For better or worse, Log4net doesn&rsquo;t error-out whenever things aren&rsquo;t set up correctly; it fails silently (really it&rsquo;s for the better, but it gets annoying!). Lately, I&rsquo;ve been using this C# snippet to configure my logging. Just call the following method in your Global.asax.cs and you should be up and ready to go with Log4net!</p>\r\n<pre class=\"language-csharp\"><code>private static void SetupLogging(bool removeAllOtherLoggers = false)\r\n{\r\n    var logFolder = GetSetting(\"LogFolder\", @\"c:\\logs\");\r\n    var logFile = GetSetting(\"LogFile\", @\"c:\\logs\\MyLog.txt\");\r\n    if (!Directory.Exists(logFolder))\r\n    {\r\n        Directory.CreateDirectory(logFolder);\r\n    }\r\n    var hierarchy = (Hierarchy) LogManager.GetRepository();\r\n    if (removeAllOtherLoggers)\r\n    {\r\n        hierarchy.Root.RemoveAllAppenders();\r\n    }\r\n    \r\n    var fileAppender = new RollingFileAppender\r\n    {\r\n        AppendToFile = true,\r\n        RollingStyle = RollingFileAppender.RollingMode.Size,\r\n        LockingModel = new FileAppender.MinimalLock(),\r\n        File = logFile,\r\n        DatePattern = \"yyyyMMdd\",\r\n        MaxSizeRollBackups = 10,\r\n        MaximumFileSize = \"5MB\",\r\n        Threshold = Level.Debug\r\n    };\r\n    var pl = new PatternLayout\r\n    {\r\n        ConversionPattern = \"%date [%thread] %-5level %logger [%property{NDC}] - %message%newline\"\r\n    };\r\n    pl.ActivateOptions();\r\n    fileAppender.Layout = pl;\r\n    fileAppender.ActivateOptions();\r\n\r\n    BasicConfigurator.Configure(fileAppender);\r\n    Trace.AutoFlush = true;\r\n}</code></pre>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/04ebb0d1-dfaa-46d4-93e1-40705900dc6e_log4net.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"how-to-configure-log4net-file-appender-in-c","tags":[{"name":"c-sharp","slug":"c-sharp"},{"name":"asp-dot-net","slug":"asp-dot-net"}],"recommendations":[{"id":1370,"title":"Relative Sort Array - Easy - LeetCode","imageUrl":"e187d7a5-3000-4803-888a-41cd36e75d23-array.png","dateCreated":"2020-06-18T13:34:27.382Z","dateModified":"2020-06-18T13:34:54.81Z","contributedBy":"AskGif","content":"Given two arrays arr1 and arr2, the elements of arr2 are distinct, and all elements in arr2 are also in arr1.\r\nSort the elements of arr1 such that the relative ordering of items in arr1 are the same as in arr2.&nbsp; Elements that don't appear in arr2 should be placed at the end of arr1 in","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/e187d7a5-3000-4803-888a-41cd36e75d23-array.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"array","slug":"array"},{"name":"leetcode","slug":"leetcode"},{"name":"algorithm","slug":"algorithm"},{"name":"c-sharp","slug":"c-sharp"},{"name":"आसान","slug":"easy"}],"slug":"relative-sort-array-easy-leetcode","total":0},{"id":1360,"title":"Number of Equivalent Domino Pairs - Array - Easy - LeetCode","imageUrl":"02bf5547-6308-4ab0-8869-d1628c49c021-array.png","dateCreated":"2020-06-13T16:42:37.703Z","dateModified":"2020-06-13T16:42:59.336Z","contributedBy":"AskGif","content":"Given a list of dominoes, dominoes[i] = [a, b] is equivalent to dominoes[j] = [c, d] if and only if either (a==c and b==d), or (a==d and b==c) - that is, one domino can be rotated to be equal to another domino.\r\nReturn the number of pairs (i, j) for which 0 &lt;= i &lt; j &lt; dominoes.len","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/02bf5547-6308-4ab0-8869-d1628c49c021-array.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"c-sharp","slug":"c-sharp"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"आसान","slug":"easy"},{"name":"algorithm","slug":"algorithm"}],"slug":"number-of-equivalent-domino-pairs-array-easy-leetcode","total":0},{"id":1321,"title":"Length of Last Word - String - Easy - LeetCode","imageUrl":"ad01632b-eb73-4d4c-9c83-3ca068abcc09-q3.jpg","dateCreated":"2020-06-04T09:52:33.02Z","dateModified":"2020-06-04T09:52:47.159Z","contributedBy":"AskGif","content":"Given a string s consists of upper/lower-case alphabets and empty space characters ' ', return the length of last word (last word means the last appearing word if we loop from left to right) in the string.\r\nIf the last word does not exist, return 0.\r\nNote: A word is defined as a max","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/ad01632b-eb73-4d4c-9c83-3ca068abcc09-q3.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"c-sharp","slug":"c-sharp"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"algorithm","slug":"algorithm"},{"name":"string","slug":"string"},{"name":"leetcode","slug":"leetcode"}],"slug":"length-of-last-word-string-easy-leetcode","total":0},{"id":35,"title":"Implement Merge Sort Using C-Sharp","imageUrl":"afd5c0fc-11e4-4b0d-b893-9ce977173328_merge_sort.png","dateCreated":"2018-07-19T05:35:20.326Z","dateModified":"2018-07-19T05:35:32.691Z","contributedBy":"AskGif","content":"In computer science, merge sort (also commonly spelled mergesort) is an efficient, general-purpose, comparison-based sorting algorithm. Most implementations produce a stable sort, which means that the implementation preserves the input order of equal elements in the sorted output. Merge sort is a","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/afd5c0fc-11e4-4b0d-b893-9ce977173328_merge_sort.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"c-sharp","slug":"c-sharp"},{"name":"sorting","slug":"sorting"},{"name":"algorithm","slug":"algorithm"},{"name":"interview","slug":"interview"}],"slug":"implement-merge-sort-using-c-sharp","total":0}]}