{"id":313,"title":"Learning Routing and AttributeRouting Web API 2 Controllers in MVC with Areas","imageUrl":"4285ec15-bc4b-4e02-bbb4-75307e546848_attribute-routing-aspnet-core.jpg","dateCreated":"2019-03-23T14:30:03.714Z","dateModified":"2019-03-23T14:30:49.016Z","contributedBy":"AskGif","content":"<p>The Acumen ASP.NET MVC development team started working with the new Web API 2 controllers released with Visual Studio 2013, and quickly hit some important issues that took some research to resolve.</p>\r\n<p>&nbsp;</p>\r\n<p>Routing and AttributeRouting and using Web API 2 controllers inside an Area in an ASP.NET MVC5 project</p>\r\n<p>Currently, this IS possible. It was not possible with Web API and it seems like it was also not possible in beta, but this can be done with Web API 2 and MVC 5. I used the following configurations:</p>\r\n<pre class=\"language-csharp\"><code>// File: ~/Areas/API/APIAreaRegistration.cs\r\n    using System.Web.Http;\r\n    using System.Web.Mvc;\r\n\r\n    namespace MySolution.Areas.API {\r\n        public class APIAreaRegistration : AreaRegistration {\r\n            public override string AreaName {\r\n                get {\r\n                    return \"API\";\r\n                }\r\n            }\r\n\r\n            public override void RegisterArea(AreaRegistrationContext context) {\r\n                context.Routes.MapMvcAttributeRoutes();\r\n                context.Routes.MapHttpRoute(\r\n                    name: this.AreaName,\r\n                    routeTemplate: this.AreaName + \"/{controller}/{id}\",\r\n                    defaults: new { id = RouteParameter.Optional }\r\n                );\r\n            }\r\n        }\r\n    }</code></pre>\r\n<pre class=\"language-csharp\"><code>// File: ~/Global.asax.cs\r\n    using System.Linq;\r\n    using System.Web.Http;\r\n    using System.Web.Mvc;\r\n    using System.Web.Routing;\r\n    using Newtonsoft.Json.Serialization;\r\n    using WebMatrix.WebData;\r\n    using AcumenSystem5.Models;\r\n    using System.Threading;\r\n    using System.Web.Optimization;\r\n\r\n    namespace MySolution {\r\n        public class MvcApplication : System.Web.HttpApplication {\r\n            protected void Application_Start() {\r\n                AreaRegistration.RegisterAllAreas();\r\n                GlobalConfiguration.Configure(config =&gt; { // This HAS to be here. Having it last caused routing to not work.\r\n                    config.MapHttpAttributeRoutes(); // This allows us to use AttributeRouting\r\n\r\n                    // This sets JSON as the default return format and removes any circular references\r\n                    var appXmlType = config.Formatters.XmlFormatter.SupportedMediaTypes.FirstOrDefault(t =&gt; t.MediaType == \"application/xml\");\r\n                    config.Formatters.XmlFormatter.SupportedMediaTypes.Remove(appXmlType);\r\n                    var json = GlobalConfiguration.Configuration.Formatters.JsonFormatter;\r\n                    json.SerializerSettings.ContractResolver = new CamelCasePropertyNamesContractResolver();\r\n                    config.Formatters.JsonFormatter.SerializerSettings.ReferenceLoopHandling = Newtonsoft.Json.ReferenceLoopHandling.Ignore; \r\n                });\r\n                RouteConfig.RegisterRoutes(RouteTable.Routes);\r\n                BundleConfig.RegisterBundles(BundleTable.Bundles);\r\n                LazyInitializer.EnsureInitialized(ref _initializer, ref _isInitialized, ref _initializerLock);\r\n            }\r\n        }\r\n    }</code></pre>\r\n<p>AttributeRouting and WebAPI Routing not working correctly and returning 404 Errors</p>\r\n<p>After struggling with areas, I hit this issue when adding the Web API 2 controller to the root controllers folder. I discovered that the ordering of configuration mattered. So,</p>\r\n<pre class=\"language-csharp\"><code>protected void Application_Start() {\r\n\t// Full file code in example above\r\n        AreaRegistration.RegisterAllAreas();\r\n        GlobalConfiguration.Configure(config =&gt; { // This HAS to be here. Having it last caused routing to not work.\r\n            config.MapHttpAttributeRoutes(); // This allows us to use AttributeRouting\r\n\r\n            config.Routes.MapHttpRoute( // This allows us to use conventional HTTP routing\r\n                    name: \"Name\",\r\n                    routeTemplate: \"api/{controller}/{id}\",\r\n                    defaults: new { id = RouteParameter.Optional }\r\n                ); ;\r\n\r\n            // This sets JSON as the default return format and removes any circular references\r\n            var appXmlType = config.Formatters.XmlFormatter.SupportedMediaTypes.FirstOrDefault(t =&gt; t.MediaType == \"application/xml\");\r\n            config.Formatters.XmlFormatter.SupportedMediaTypes.Remove(appXmlType);\r\n            var json = GlobalConfiguration.Configuration.Formatters.JsonFormatter;\r\n            json.SerializerSettings.ContractResolver = new CamelCasePropertyNamesContractResolver();\r\n            config.Formatters.JsonFormatter.SerializerSettings.ReferenceLoopHandling = Newtonsoft.Json.ReferenceLoopHandling.Ignore; \r\n        });\r\n        RouteConfig.RegisterRoutes(RouteTable.Routes);\r\n        BundleConfig.RegisterBundles(BundleTable.Bundles);\r\n        LazyInitializer.EnsureInitialized(ref _initializer, ref _isInitialized, ref _initializerLock);\r\n    }</code></pre>\r\n<p>&nbsp;</p>\r\n<p>as shown in the Global.asax.cs above, the order needs to be as follows to work correctly:</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/4285ec15-bc4b-4e02-bbb4-75307e546848_attribute-routing-aspnet-core.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"learning-routing-and-attributerouting-web-api-2-controllers-in-mvc-with-areas","tags":[{"name":"c-sharp","slug":"c-sharp"},{"name":"asp-dot-net","slug":"asp-dot-net"},{"name":"mvc-5","slug":"mvc-5"}],"recommendations":[{"id":1329,"title":"Number of Students Doing Homework at a Given Time - Array - Easy - LeetCode","imageUrl":"2c22f9de-1385-400e-b157-47224d1ff251-q3.jpg","dateCreated":"2020-06-05T13:21:41.355Z","dateModified":"2020-06-05T13:21:54.031Z","contributedBy":"AskGif","content":"Given two integer arrays startTime and endTime and given an integer queryTime.\r\nThe ith student started doing their homework at the time startTime[i] and finished it at time endTime[i].\r\nReturn the number of students doing their homework at time queryTime. More formally, return the ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/2c22f9de-1385-400e-b157-47224d1ff251-q3.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"c-sharp","slug":"c-sharp"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"array","slug":"array"},{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"}],"slug":"number-of-students-doing-homework-at-a-given-time-array-easy-leetcode","total":0},{"id":307,"title":"Learning Postgresql (npgsql), Entity Framework 7 (EF Core), and ASP.NET MVC 6","imageUrl":"79554dfa-4ad4-4915-a2a6-bd45c746336f_ngpsql.jpg","dateCreated":"2019-03-21T19:08:49.31Z","dateModified":"2019-03-21T19:09:34.833Z","contributedBy":"AskGif","content":"Finally, Entity Framework has support for databases other than SQL Server, and as many of us know, MVC 6 is cross-platform. This means we .NET devs can now launch our ASP.NET applications on a Linux server, saving huge on server costs and giving us some freedom. EF7 now supports SQL Server, Postg","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/79554dfa-4ad4-4915-a2a6-bd45c746336f_ngpsql.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"entity-framework-core","slug":"entity-framework-core"},{"name":"asp-dot-net","slug":"asp-dot-net"},{"name":"postgres","slug":"postgres"},{"name":"mvc-core","slug":"mvc-core"}],"slug":"learning-postgresql-npgsql-entity-framework-7-ef-core-and-asp.net-mvc-6","total":0},{"id":148,"title":"I'm getting Error “Server Application Unavailable” in IIS","imageUrl":"b3873410-9b55-4241-bf6f-9793dd3451b2_server-app-unavailable.png","dateCreated":"2018-11-06T06:06:17.034Z","dateModified":"2018-11-06T06:06:24.804Z","contributedBy":"AskGif","content":"The web service is throwing the following error when I browse from IIS:\r\nServer Application Unavailable\r\nThe web application you are attempting to access on this web server is currently unavailable. Please hit the \"Refresh\" button in your web browser to retry your request.\r\nA","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/b3873410-9b55-4241-bf6f-9793dd3451b2_server-app-unavailable.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"dot-net","slug":"dot-net"},{"name":"c-sharp","slug":"c-sharp"},{"name":"web-services","slug":"web-services"},{"name":"iis","slug":"iis"}],"slug":"im-getting-error-server-application-unavailable-in-iis","total":0},{"id":35,"title":"Implement Merge Sort Using C-Sharp","imageUrl":"afd5c0fc-11e4-4b0d-b893-9ce977173328_merge_sort.png","dateCreated":"2018-07-19T05:35:20.326Z","dateModified":"2018-07-19T05:35:32.691Z","contributedBy":"AskGif","content":"In computer science, merge sort (also commonly spelled mergesort) is an efficient, general-purpose, comparison-based sorting algorithm. Most implementations produce a stable sort, which means that the implementation preserves the input order of equal elements in the sorted output. Merge sort is a","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/afd5c0fc-11e4-4b0d-b893-9ce977173328_merge_sort.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"c-sharp","slug":"c-sharp"},{"name":"sorting","slug":"sorting"},{"name":"algorithm","slug":"algorithm"},{"name":"interview","slug":"interview"}],"slug":"implement-merge-sort-using-c-sharp","total":0}]}