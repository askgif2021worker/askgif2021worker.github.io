{"id":316,"title":"Getting started with TypeScript and Gulp","imageUrl":"c1d4ad00-74ec-458e-9500-723fe524c485_what_is_gulpjs.jpg","dateCreated":"2019-03-23T17:18:39.722Z","dateModified":"2019-03-23T17:18:57.109Z","contributedBy":"AskGif","content":"<p>I&rsquo;ll be upfront &ndash; getting TypeScript building is frustrating, especially the first time. I&rsquo;m starting to get the hang of it, but keep finding myself running into brick walls with no help. This post will help guide you in opening the doors to the world of TypeScript (and I&rsquo;m pretty sure you&rsquo;ll love it).</p>\r\n<p>First things first: NPM packages</p>\r\n<p>You are going to need to install 5 packages. Shortcut:</p>\r\n<p>npm install &ndash;save-dev gulp-typescript &ndash; gulp-typescript does the actual transpilation of TypeScript to JavaScript.</p>\r\n<p>npm install &ndash;save-dev tslint &ndash; gulp-tslint uses this as a dependency, so you&rsquo;ll need it.</p>\r\n<p>npm install &ndash;save-dev gulp-tslint &ndash; gulp-tslint is a linting package to help enforce style guides and keep your code clean.</p>\r\n<p>npm install &ndash;save systemjs &ndash; SystemJS is a module loader that can load ES6, AMD, and CommonJS modules. there&rsquo;s a few options here, so feel free to explore alternatives.</p>\r\n<p>npm install &ndash;save es6-shim &ndash; Not all browsers support everything SystemJS needs to operate. This package includes all the shims you&rsquo;ll need.</p>\r\n<p>npm install &ndash;save-dev gulp-concat &ndash; gulp-concat concatonates JavaScript files together. You&rsquo;ll need this for SystemJS and ES6-Shim.</p>\r\n<p>Setting up the TypeScript configuration</p>\r\n<p>&nbsp;</p>\r\n<p>tsconfig.json</p>\r\n<p>Tsconfig.json is an object of configurations for how the TypeScript build should work. This should live in the same level as your gulpfile.js. Here is a tsconfig.json that I&rsquo;ve been using that will get you moving:</p>\r\n<pre class=\"language-javascript\"><code>{\r\n    \"compilerOptions\": {\r\n        \"target\": \"es5\",\r\n        \"module\": \"system\",\r\n        \"moduleResolution\": \"node\",\r\n        \"experimentalDecorators\": true,\r\n        \"removeComments\": false\r\n    },\r\n    \"exclude\": [\r\n      \"node_modules\"\r\n    ]\r\n}</code></pre>\r\n<p>With this configuration, we are using SystemJS module loader, allowing for @Decorators, stripping comments, and transpiling to ES5. You can find more info on this on typescriptlang.org.</p>\r\n<p>&nbsp;</p>\r\n<p>tslint.json</p>\r\n<p>Tslint.json tells tslint what styles to follow. There are a ton of arguments available for this that you can see on the project Github. Check out this gist for an example of a tslint that I&rsquo;m using.</p>\r\n<p>&nbsp;</p>\r\n<p>Gulp builds</p>\r\n<p>We are going to add new tasks to the gulpfile. This is configured to take all TypeScript files from the &ldquo;ts&rdquo; folder and transpile the output (and SystemJS dependencies) to &ldquo;www/js&rdquo;.</p>\r\n<p>&nbsp;</p>\r\n<p>Linting the TypeScript</p>\r\n<pre class=\"language-javascript\"><code>gulp.task(\"lint:ts\", function() {\r\n    return gulp.src(\"ts/**/*.ts\")\r\n        .pipe(tslint({\r\n            formatter: \"verbose\"\r\n        }))\r\n        .pipe(tslint.report())\r\n});</code></pre>\r\n<p>Compiling the TypeScript to JavaScript</p>\r\n<pre class=\"language-javascript\"><code>var tsProject = ts.createProject(\"tsconfig.json\", {\r\n    outFile: \"app.js\"\r\n});\r\ngulp.task(\"compile:ts\", [\"lint:ts\"], function() {\r\n    return tsProject.src()\r\n        .pipe(ts(tsProject))\r\n        .js\r\n        .pipe(gulp.dest(\"www/js\"));\r\n});</code></pre>\r\n<p>Concatonating SystemJS dependencies</p>\r\n<p>If you have an existing JS concatonation build, you can of course just include these modules to it. But if you don&rsquo;t, you&rsquo;ll need these three files.</p>\r\n<pre class=\"language-javascript\"><code>gulp.task(\"concat:js\", function() {\r\n    return gulp.src([\r\n        \"node_modules/systemjs/dist/system.js\",\r\n        \"node_modules/systemjs/dist/system-polyfills.js\",\r\n        \"node_modules/es6-shim/es6-shim.js\"\r\n    ])\r\n    .pipe(concat(\"lib.js\"))\r\n    .pipe(gulp.dest(\"www/js\"));\r\n});</code></pre>\r\n<p>Loading the modules with SystemJS</p>\r\n<p>After you&rsquo;ve run your transpilation and concatonation tasks, you&rsquo;re now ready to add the scripts to your page. Add the following to the bottom of your HTML:</p>\r\n<pre class=\"language-javascript\"><code>&lt;script src=\"js/lib.js\"&gt;&lt;/script&gt;\r\n&lt;script src=\"js/app.js\"&gt;&lt;/script&gt;\r\n&lt;script&gt;\r\nSystem.import(\"app\")\r\n    .then(function() {\r\n        console.info(\"System.import was successful.\");\r\n    })\r\n    .catch(function(response) {\r\n        console.error(\"Error in System.import, could not bootstrap.\", response);\r\n    });\r\n&lt;/script&gt;</code></pre>\r\n<p>All done!</p>\r\n<p>Now that wasn&rsquo;t so bad was it? &hellip; Okay, there was a bit involved. But that&rsquo;s in the past now. Time to enjoy TypeScript</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/c1d4ad00-74ec-458e-9500-723fe524c485_what_is_gulpjs.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"getting-started-with-typescript-and-gulp","tags":[{"name":"typescript","slug":"typescript"},{"name":"javascript","slug":"javascript"},{"name":"gulp","slug":"gulp"}],"recommendations":[{"id":720,"title":"Loading Javascript Files using Jquery.","imageUrl":"a05a3ed4-4acc-4047-8b76-bf59dbca7b0b_languagee.jpg","dateCreated":"2019-09-20T07:40:29.026Z","dateModified":"2019-09-20T07:40:56.987Z","contributedBy":"AskGif","content":"In this post, I want to explain loading javascript files with jquery. Here demo regional language textbox contains many javascript files, so just loading files with jquery when the file required. It's useful to faster your page loading time.\r\nSample Script\r\n<pre class=\"language-markup\"","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a05a3ed4-4acc-4047-8b76-bf59dbca7b0b_languagee.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"javascript","slug":"javascript"},{"name":"jquery","slug":"jquery"}],"slug":"loading-javascript-files-using-jquery","total":0},{"id":435,"title":"Implementing Interactive feedback form Using Jquery","imageUrl":"b56fe3f7-796d-4b9b-b3bb-2654741dc12a_feedback-form.png","dateCreated":"2019-08-21T08:30:01.552Z","dateModified":"2019-08-21T08:30:18.126Z","contributedBy":"AskGif","content":"I had designed a magical feedback form using Jquery with easing animation effect. It's simple and interesting just hiding and showing the div tags with jquery. Use it and make something better your web project feedback box.\r\n&nbsp;\r\nJavascript Code\r\nContains five animation mo","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/b56fe3f7-796d-4b9b-b3bb-2654741dc12a_feedback-form.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"javascript","slug":"javascript"}],"slug":"implementing-interactive-feedback-form-using-jquery","total":0},{"id":413,"title":"Implementing Login or Signup with Jquery and PHP","imageUrl":"eb27afd9-2118-4ec4-b6f8-45227c00c42c_login-signup-images.jpg","dateCreated":"2019-06-27T02:25:49.027Z","dateModified":"2019-06-27T02:26:03.226Z","contributedBy":"AskGif","content":"Some users don't like to fill the registration form. So that I had implemented login and sign up fields in the same block just controlling with jquery and PHP. It's is a very simple javascript and basic PHP code.\r\n&nbsp;\r\nJavascript code\r\n$('#signup').click(function(){} - sig","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/eb27afd9-2118-4ec4-b6f8-45227c00c42c_login-signup-images.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"php","slug":"php"},{"name":"jquery","slug":"jquery"},{"name":"javascript","slug":"javascript"}],"slug":"implementing-login-or-signup-with-jquery-and-php","total":0},{"id":296,"title":"What are Angular TypeScript Decorators in object-oriented front-end applications ?","imageUrl":"78201682-3caa-41be-accf-af9179653c34_angular-decorators.jpg","dateCreated":"2019-03-20T15:50:07.168Z","dateModified":"2019-03-22T05:16:15.61Z","contributedBy":"AskGif","content":"I've taken up TypeScript over the last few months, and it is such a breath of fresh air. TypeScript has quickly become one of my favorite languages to develop in, especially on the front-end. One of my favorite features is TypeScript Decorators, and I&rsquo;ve been taking advantage of them to tri","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/78201682-3caa-41be-accf-af9179653c34_angular-decorators.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"typescript","slug":"typescript"},{"name":"c-sharp","slug":"c-sharp"},{"name":"javascript","slug":"javascript"},{"name":"asp-dot-net","slug":"asp-dot-net"},{"name":"ionic-framework","slug":"ionic-framework"},{"name":"Angular-JS","slug":"angular-js"}],"slug":"what-are-angular-typescript-decorators-in-object-oriented-front-end-applications-","total":0}]}