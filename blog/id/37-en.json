{"id":37,"title":"Find Longest Sub-string without any Repeating characters.","imageUrl":"28ea9b8b-1280-4d6a-8f2f-48f61377a5e2_maxresdefault.jpg","dateCreated":"2018-07-20T06:23:31.49Z","dateModified":"2018-07-20T06:23:41.247Z","contributedBy":"AskGif","content":"<p>A substring is a contiguous sequence of characters within a string. For instance, \"the best of\" is a substring of \"It was the best of times\". This is not to be confused with subsequence, which is a generalization of a substring. For example, \"Itwastimes\" is a subsequence of \"It was the best of times\", but not a substring.</p>\r\n<p>Prefix and suffix are special cases of a substring. A prefix of a string {\\displaystyle S} S is a substring of {\\displaystyle S} S that occurs at the beginning of {\\displaystyle S} S. A suffix of a string {\\displaystyle S} S is a substring that occurs at the end of {\\displaystyle S} S.</p>\r\n<p>The list of all substrings of the string \"apple\" would be \"apple\", \"appl\", \"pple\", \"app\", \"ppl\", \"ple\", \"ap\", \"pp\", \"pl\", \"le\", \"a\", \"p\", \"l\", \"e\", \"\".</p>\r\n<pre class=\"language-java\"><code>import java.util.HashMap;\r\n\r\npublic class LongestSubstringWithoutRepeatingCharacters {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tString str = \"abcabcbb\";\r\n\t\tHashMap&lt;Character,Integer&gt; map = new HashMap&lt;Character,Integer&gt;();\r\n\t\tint maxLen = 0;\r\n\t\tfor(int i=0;i&lt;str.length();i++) {\r\n\t\t\tif(map.containsKey(str.charAt(i))) {\r\n\t\t\t\tif((i - map.get(str.charAt(i))) &gt; maxLen) {\r\n\t\t\t\t\tmaxLen = i - map.get(str.charAt(i));\r\n\t\t\t\t}\r\n\t\t\t\tmap.put(str.charAt(i), i);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tmap.put(str.charAt(i), i);\r\n\t\t}\r\n\t\t\r\n\t\tSystem.out.println(maxLen);\r\n\r\n\t}\r\n\r\n}\r\n</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Output :</p>\r\n<pre class=\"language-markup\"><code>3</code></pre>\r\n<p>Time Complexity of Above solution is O(n) while space complexity is O(n) in the worst case.</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/28ea9b8b-1280-4d6a-8f2f-48f61377a5e2_maxresdefault.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"find-longest-sub-string-without-any-repeating-characters","tags":[{"name":"string","slug":"string"},{"name":"java","slug":"java"},{"name":"interview","slug":"interview"},{"name":"algorithm","slug":"algorithm"}],"recommendations":[{"id":1717,"title":"Task Scheduler - Array - Medium - LeetCode","imageUrl":"icon_ce3e557e-274e-4956-a16f-a62c66777be4.jpg","dateCreated":"2021-01-09T09:25:26.524Z","dateModified":"2021-01-09T09:25:33.09Z","contributedBy":"sumitc91","content":"Given a characters array tasks, representing the tasks a CPU needs to do, where each letter represents a different task. Tasks could be done in any order. Each task is done in one unit of time. For each unit of time, the CPU could complete either one task or just be idle.\nHowever, there is","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/ce3e557e-274e-4956-a16f-a62c66777be4.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"task-scheduler-array-medium-leetcode","total":0},{"id":1650,"title":"Unique Paths - Array - Medium - LeetCode","imageUrl":"icon_7d520a0b-1d85-4323-8864-5769e8bcd088.jpg","dateCreated":"2020-10-31T08:21:35.294Z","dateModified":"2020-10-31T08:21:40.324Z","contributedBy":"sumitc91","content":"A robot is located at the top-left corner of a m x n grid (marked 'Start' in the diagram below).\nThe robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid (marked 'Finish' in the diagram below).\nHow many possi","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/7d520a0b-1d85-4323-8864-5769e8bcd088.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"unique-paths-array-medium-leetcode","total":0},{"id":1642,"title":"Combination Sum II - Array - Medium - LeetCode","imageUrl":"icon_134b4baa-680a-45e5-b0df-c627789e2d42.jpg","dateCreated":"2020-10-25T16:13:32.074Z","dateModified":"2020-10-25T16:13:43.44Z","contributedBy":"sumitc91","content":"Given a collection of candidate numbers (candidates) and a target number (target), find all unique combinations in candidates where the candidate numbers sum to target.\nEach number in candidates may only be used once in the combination.\nNote: The solution set must not contain duplic","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/134b4baa-680a-45e5-b0df-c627789e2d42.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"combination-sum-ii-array-medium-leetcode","total":0},{"id":1609,"title":"Customers Who Never Order - Sql - Easy - LeetCode","imageUrl":"icon_3979029e-3ead-4244-a16d-a1344d80e6ec.jpg","dateCreated":"2020-10-16T07:20:40.745Z","dateModified":"2020-10-16T07:20:46.124Z","contributedBy":"sumitc91","content":"Suppose that a website contains two tables, the Customers table and the Orders table. Write a SQL query to find all customers who never order anything.\nTable: Customers.\n+----+-------+<br />| Id | Name &nbsp;|<br />+----+-------+<br />| 1 &nbsp;| Joe &nbsp; |<br />| 2 &nbsp;| Henry ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/3979029e-3ead-4244-a16d-a1344d80e6ec.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"mysql","slug":"mysql"},{"name":"sql","slug":"sql"}],"slug":"customers-who-never-order-sql-easy-leetcode","total":0}]}