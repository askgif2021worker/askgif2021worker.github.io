{"id":38,"title":"Find a Single Occurrence Number in an Array, Given all other numbers occurred twice.","imageUrl":"6ad14d2a-63ce-4b72-9b1f-5b72b74d661a_arrays1.jpg","dateCreated":"2018-07-20T07:02:08.195Z","dateModified":"2018-07-20T07:02:37.152Z","contributedBy":"AskGif","content":"<p>You have been given a non-empty array of integers in which every element appears twice except for one. You have to Find that single one.</p>\r\n<p>Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory?</p>\r\n<p>We will use XOR Operation to achieve this goal.</p>\r\n<pre class=\"language-java\"><code>public class SingleNumber {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tint[] arr = new int[] {12, 4, 36, 10, 12, 36, 4};\r\n\t\tint res = arr[0];\r\n\t\tfor(int i=1;i&lt;arr.length;i++) {\r\n\t\t\tres = res ^ arr[i];\r\n\t\t}\r\n\t\t\r\n\t\tSystem.out.println(res);\r\n\r\n\t}\r\n\r\n}\r\n</code></pre>\r\n<p>Output :</p>\r\n<pre class=\"language-markup\"><code>10</code></pre>\r\n<p>Time Complexity of above solution os O(n) and Space Complexity is O(1) (i.e no extra space is used)</p>\r\n<p>&nbsp;</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/6ad14d2a-63ce-4b72-9b1f-5b72b74d661a_arrays1.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"find-a-single-occurrence-number-in-an-array-given-all-other-numbers-occurred-twice","tags":[{"name":"interview","slug":"interview"},{"name":"java","slug":"java"},{"name":"array","slug":"array"},{"name":"algorithm","slug":"algorithm"}],"recommendations":[{"id":1698,"title":"अनुप्रयोग परत क्या है?","imageUrl":"icon_6faa8ad3-f4c7-411a-a351-f5721537582b.jpg","dateCreated":"2020-11-20T07:40:00.435Z","dateModified":"2020-11-20T07:40:05.453Z","contributedBy":"sumitc91","content":"वेब परत को एप्लिकेशन लेयर (जिसे प्लेटफ़ॉर्म लेयर के रूप में भी जाना जाता है) से अलग करना आपको दोनों परतों को स्वतंत्र रूप से स्केल करने और कॉन्फ़िगर करने की अनुमति देता है। बिना अतिरिक्त वेब सर्वर को जोड़ने के बिना एप्लिकेशन सर्वर को जोड़ने में एक नया एपीआई परिणाम जोड़ना। एकल जिम्मेदारी सिद्धांत ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/6faa8ad3-f4c7-411a-a351-f5721537582b.jpg","category":{"name":"शिक्षण","slug":"tutorials"},"tags":[{"name":"interview","slug":"interview"}],"slug":"what-is-application-layer","total":0},{"id":1696,"title":"लोड बैलेंसर क्या है?","imageUrl":"icon_bf29fc63-378c-41be-832e-77c965333bfb.png","dateCreated":"2020-11-20T07:37:09.771Z","dateModified":"2020-11-20T07:37:16.113Z","contributedBy":"sumitc91","content":"लोड बैलेंसर्स आने वाले क्लाइंट अनुरोधों को एप्लिकेशन सर्वर और डेटाबेस जैसे कंप्यूटिंग संसाधनों में वितरित करते हैं। प्रत्येक मामले में, लोड बैलेंसर कंप्यूटिंग संसाधन से उपयुक्त क्लाइंट को प्रतिक्रिया देता है। लोड बैलेंसर्स प्रभावी हैं:\nअस्वस्थ सर्वर पर जाने से अनुरोधों को रोकना<br />ओवरलोड","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/bf29fc63-378c-41be-832e-77c965333bfb.png","category":{"name":"शिक्षण","slug":"tutorials"},"tags":[{"name":"interview","slug":"interview"}],"slug":"what-is-load-balancer","total":0},{"id":1660,"title":"Check Array Formation Through Concatenation - Array - Easy - LeetCode","imageUrl":"icon_85392267-2028-4c02-8f8a-96c1d2368591.jpg","dateCreated":"2020-11-03T06:50:35.06Z","dateModified":"2020-11-03T06:50:53.205Z","contributedBy":"sumitc91","content":"You are given an array of distinct integers arr and an array of integer arrays pieces, where the integers in pieces are distinct. Your goal is to form arr by concatenating the arrays in pieces in any order. However, you are not allowed to reorder the integers in each array pieces[i].\nRetur","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/85392267-2028-4c02-8f8a-96c1d2368591.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"check-array-formation-through-concatenation-array-easy-leetcode","total":0},{"id":1609,"title":"Customers Who Never Order - Sql - Easy - LeetCode","imageUrl":"icon_3979029e-3ead-4244-a16d-a1344d80e6ec.jpg","dateCreated":"2020-10-16T07:20:40.745Z","dateModified":"2020-10-16T07:20:46.124Z","contributedBy":"sumitc91","content":"Suppose that a website contains two tables, the Customers table and the Orders table. Write a SQL query to find all customers who never order anything.\nTable: Customers.\n+----+-------+<br />| Id | Name &nbsp;|<br />+----+-------+<br />| 1 &nbsp;| Joe &nbsp; |<br />| 2 &nbsp;| Henry ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/3979029e-3ead-4244-a16d-a1344d80e6ec.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"mysql","slug":"mysql"},{"name":"sql","slug":"sql"}],"slug":"customers-who-never-order-sql-easy-leetcode","total":0}]}