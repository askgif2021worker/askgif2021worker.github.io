{"id":395,"title":"Running RabbitMQ 2.6 and 2.7 on Mac OS/X","imageUrl":"a258218f-3ede-4b12-ad6e-44b308a6a6e4_macOS-RabbitMq.jpg","dateCreated":"2019-06-19T09:33:30.475Z","dateModified":"2019-06-19T10:21:35.315Z","contributedBy":"AskGif","content":"<p>AMQP is an open protocol for Asynchronous message queueing.&nbsp; The number one implementation for AMQP is RabbitMQ.</p>\r\n<p>&nbsp;&nbsp;</p>\r\n<p>I normally run RabbitMQ on my Mac in a Linux/Ubuntu VM&nbsp; but I recently got a new MacBook Air that's limited to 4GB.&nbsp; I wanted to run RabbitMQ native on the Macbook Air instead of the Linux virtual machine to save space and give me better performance when running tcServer, RabbitMQ, and STS on this slightly smaller machine.&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>Installation</p>\r\n<p>RabbitMQ is written in Erlang.&nbsp; The Mac doesn't come with Erlang so you have to install it. You can use MacPorts or Homebrew per the Rabbit installation instructions.&nbsp; I'm lazy so I used Rudix&nbsp; Erlang-Solutions which provides Erlang in neat Mac installation packages that put the files in /usr/local /usr/bin. (The rudix version of Erlang went away over the weekend of 11/12/2011).&nbsp;</p>\r\n<p>Download the img/package mentioned above and install it like any other .img file.</p>\r\n<p>Download RabbitMQ and unpack it into some working directory.</p>\r\n<p>cd into the RabbitMQ sbin directory.</p>\r\n<p>Start the server with sudo ./rabbitmq-server</p>\r\n<p>Use the sudo sbin/rabbitmqctl status command to see the status of the broker.</p>\r\n<p>You now have a running RabbitMQ broker with only administrative exchanges and no queues configured.&nbsp; You should now stop that server if you want to install the optional Web Management console or any other plugin.</p>\r\n<p>&nbsp;</p>\r\n<p>Web Management Console&nbsp;</p>\r\n<p>The web management console makes troubleshooting and experimentation easier. The steps for configuring plugins differ based on the version.&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>Users access the web management console using URL http://localhost:55672/mgmt/. The default username and password are guest/guest. The console uses JavaScript so make sure you have JavaScript enabled for that web site.</p>\r\n<p>&nbsp;</p>\r\n<p>Rabbit 2.6&nbsp;</p>\r\n<p>The plugins must be manually downloaded and installed in Rabbit 2.6</p>\r\n<p>Download the RabbitMQ management console components from the plugins page.&nbsp; Download the plugins and copy them into RabbitMQ the plugins directory. Each of the plugins has a .ez file extension. The console plug-in requires 6 components at the time of this blog posting.</p>\r\n<p>Restart the RabbitMQ server. You should see the plugins load in the console output.</p>\r\n<p>Connect to the management console with a web browser and log in.</p>\r\n<p>Rabbit 2.7&nbsp;</p>\r\n<p>The plugins are installed but not enabled for RabbitMQ 2.7.&nbsp; You manually enable plugins with the new sbin/rabbitmq-plugins command.&nbsp; First bring down your RabbitMQ server you started above.</p>\r\n<p>Create the location where the config file will be generated sudo mkdir /etc/rabbitmq</p>\r\n<p>cd into &lt;rabbitmq_home&gt;/sbin</p>\r\n<p>run sudo ./rabbitmq-plugins enable rabbitmq_management to create the config file and add this plugin. Note that no plug-in version numbers are specified. You should see that it adds all of the necessary dependencies.&nbsp; A core dump probably means you forgot to use \"sudo\"</p>\r\n<p>Start the RabbitMQ server as you did in the previous steps.</p>\r\n<p>Connect to the management console with a web browser and log in.</p>\r\n<p>&nbsp;</p>\r\n<p>Conclusion</p>\r\n<p>You should now have a running server with the optional web console configured and loaded.&nbsp; Use the previous section as a guide if you want to add additional plug-ins.&nbsp; See the Rabbit tutorials for examples on how you can use the RabbitMQ server configured above.</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a258218f-3ede-4b12-ad6e-44b308a6a6e4_macOS-RabbitMq.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"running-rabbitmq-2.6-and-2.7-on-mac-osx","tags":[{"name":"macbook","slug":"macbook"},{"name":"rabbitmq","slug":"rabbitmq"}],"recommendations":[{"id":1303,"title":"Ruby - Local Environment Setup Mac","imageUrl":"2291dd7c-d5f1-4733-89b8-d694fdc5b08c-ruby-mac.jpg","dateCreated":"2020-05-11T13:48:58.837Z","dateModified":"2020-05-11T13:49:11.109Z","contributedBy":"AskGif","content":"In this post, we&rsquo;re going to show you how to install Ruby on your Mac. Along the way, we&rsquo;ll learn about the steps involved and various bits of knowledge required to get up and going.\r\nHere are the Mac installation steps.\r\nTo install ruby with rails:\r\n<pre class=\"lang","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/2291dd7c-d5f1-4733-89b8-d694fdc5b08c-ruby-mac.jpg","category":{"name":"tutorials","slug":"tutorials"},"tags":[{"name":"ruby-on-rails","slug":"ruby-on-rails"},{"name":"macbook","slug":"macbook"},{"name":"surbhi-blog","slug":"surbhi-blog"}],"slug":"ruby-local-environment-setup-mac","total":0},{"id":395,"title":"Running RabbitMQ 2.6 and 2.7 on Mac OS/X","imageUrl":"a258218f-3ede-4b12-ad6e-44b308a6a6e4_macOS-RabbitMq.jpg","dateCreated":"2019-06-19T09:33:30.475Z","dateModified":"2019-06-19T10:21:35.315Z","contributedBy":"AskGif","content":"AMQP is an open protocol for Asynchronous message queueing.&nbsp; The number one implementation for AMQP is RabbitMQ.\r\n&nbsp;&nbsp;\r\nI normally run RabbitMQ on my Mac in a Linux/Ubuntu VM&nbsp; but I recently got a new MacBook Air that's limited to 4GB.&nbsp; I wanted to run RabbitM","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a258218f-3ede-4b12-ad6e-44b308a6a6e4_macOS-RabbitMq.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"macbook","slug":"macbook"},{"name":"rabbitmq","slug":"rabbitmq"}],"slug":"running-rabbitmq-2.6-and-2.7-on-mac-osx","total":0},{"id":394,"title":"Accessing the RabbitMQ Console in Cloud Foundry","imageUrl":"362fdc56-8bd4-4e3d-9a4f-f0fa18f39e55_Header_Post_RabbitMQ_EN.jpg","dateCreated":"2019-06-19T06:56:01.352Z","dateModified":"2019-06-19T06:56:11.237Z","contributedBy":"AskGif","content":"Each Cloud Foundry instance is a self-contained environment (cloud) that is generally intended to be used as a black box application container. It is implemented in a virtualized environment that hides the actual virtual/physical topology from the deployer.&nbsp; Service configuration, provisioni","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/362fdc56-8bd4-4e3d-9a4f-f0fa18f39e55_Header_Post_RabbitMQ_EN.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"java","slug":"java"},{"name":"rabbitmq","slug":"rabbitmq"}],"slug":"accessing-the-rabbitmq-console-in-cloud-foundry","total":0}]}