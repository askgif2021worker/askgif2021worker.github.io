{"id":396,"title":"A quick jni4net performance hack","imageUrl":"5316ca0a-2d12-4fb2-b129-ab0285964f2d_JNI4NET.jpg","dateCreated":"2019-06-19T10:21:14.455Z","dateModified":"2019-06-19T10:21:23.731Z","contributedBy":"AskGif","content":"<p>jni4net is a great library that creates Java proxies for Microsoft based C# libraries on the Windows platform. It makes Java JNI easy with good performance.&nbsp; You follow these processes to use jni4net</p>\r\n<p>&nbsp;</p>\r\n<p>Create your C# library</p>\r\n<p>Run proxygen to generate Java native library source code and C# adapter source that shims in between Java and the original library.</p>\r\n<p>Run javac to compile the java code</p>\r\n<p>Create a jar file of the compiled java code</p>\r\n<p>Run the .Net csc.exe that comes with the default .Net installation to compile the C# code</p>\r\n<p>Create a new DLL of the just compiled C# code</p>\r\n<p>Create a Java program that uses the new generated Jar file, the generated C# dll, and the original C# dll.</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>I found a quick hack that improves the performance of the jni4net bridge that involves inserting a line of code in each generates C# method. This hack improves the Java-to-DLL call time only.&nbsp; It does not impact the performance of the Java code on one side or the C# code on the other.&nbsp; It lowers the overhead of highly repetitive method calls by up to 100x for methods with no type marshaling.&nbsp; Each method looks something like this:</p>\r\n<pre class=\"language-csharp\"><code>private static void IncrementBy1(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, int counterKey, long incrementAmount) {\r\n    // (IJ)V\r\n    // (IJ)V\r\n    global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);\r\n    try {\r\n    global::FreemanSoft.PerformanceCounters.WindowsPerformanceFacade.IncrementBy(counterKey, incrementAmount);\r\n    }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}\r\n}</code></pre>\r\n<p>&nbsp;</p>\r\n<p>I add one line of code that makes the method look like this:</p>\r\n<p>&nbsp;</p>\r\n<p>This Powershell script modifies all jni4net generated methods to add the code shown above.&nbsp;</p>\r\n<pre class=\"language-csharp\"><code>echo \"Hacking generated JNI C# files\"\r\n$pathtofiles = \"generated\\clr\"\r\n$oldregex = \"global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap\"\r\n$new = \"// quick hack to get the thread cache correctly set up because the Wrap doesn't do that\r\n   global::net.sf.jni4net.jni.JNIEnv @__ignored = global::net.sf.jni4net.jni.JNIEnv.ThreadEnv;\r\n   global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap\"\r\n Get-Childitem $pathtofiles -recurse -name -Include *.cs | ForEach {\r\n  #echo \":::: $pathtofiles\\$_\"\r\n  $fullpath = \"$pathtofiles\\$_\"\r\n  (Get-Content $fullpath | ForEach {$_ -replace \"global::net.sf.jni4net.jni.JNIEnv \\@__env = global::net.sf.jni4net.jni.JNIEnv.Wrap\", \"$new\"}) | Set-Content $fullpath \r\n}</code></pre>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/5316ca0a-2d12-4fb2-b129-ab0285964f2d_JNI4NET.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"a-quick-jni4net-performance-hack","tags":[{"name":"c-sharp","slug":"c-sharp"}],"recommendations":[{"id":1378,"title":"Pairs of Songs With Total Durations Divisible by 60 - Array - Easy - LeetCode","imageUrl":"2c69191e-b401-4862-9a04-9deee401d358-array.png","dateCreated":"2020-06-20T10:34:18.22Z","dateModified":"2020-06-20T10:34:32.571Z","contributedBy":"AskGif","content":"In a list of songs, the i-th song has a duration of time[i] seconds.&nbsp;\r\nReturn the number of pairs of songs for which their total duration in seconds is divisible by 60.&nbsp; Formally, we want the number of indices i, j such that i &lt; j with (time[i] + time[j]) % 60 == 0.\r\n&n","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/2c69191e-b401-4862-9a04-9deee401d358-array.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"आसान","slug":"easy"},{"name":"algorithm","slug":"algorithm"},{"name":"leetcode","slug":"leetcode"},{"name":"c-sharp","slug":"c-sharp"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"}],"slug":"pairs-of-songs-with-total-durations-divisible-by-60-array-easy-leetcode","total":0},{"id":1369,"title":"Final Prices With a Special Discount in a Shop - Array - Easy - LeetCode","imageUrl":"b772ba9c-b1cd-4b9b-9e88-580b9776e5c2-array.png","dateCreated":"2020-06-17T10:02:54.974Z","dateModified":"2020-06-17T10:03:27.798Z","contributedBy":"AskGif","content":"Given the array prices where prices[i] is the price of the ith item in a shop. There is a special discount for items in the shop, if you buy the ith item, then you will receive a discount equivalent to prices[j] where j is the minimum index such that j &gt; i and prices[j] &lt;= prices[i], otherw","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/b772ba9c-b1cd-4b9b-9e88-580b9776e5c2-array.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"c-sharp","slug":"c-sharp"},{"name":"algorithm","slug":"algorithm"},{"name":"leetcode","slug":"leetcode"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"array","slug":"array"},{"name":"आसान","slug":"easy"}],"slug":"final-prices-with-a-special-discount-in-a-shop-array-easy-leetcode","total":0},{"id":315,"title":"How to Replace child collections in Entity Framework?","imageUrl":"d08846e7-db0b-4aff-8f1c-9980e99d0f0d_ef-delete-child.jpg","dateCreated":"2019-03-23T16:06:31.244Z","dateModified":"2019-03-23T16:06:51.168Z","contributedBy":"AskGif","content":"ORMs are nice. Usually. That is until you hit a mostly unhelpful exception like &ldquo;An object with the same key already exists in the ObjectStateManager&rdquo;. I ran into this problem by trying to do a complete replacement of an entity&rsquo;s child entity collection (i.e. a Products&rsquo;s ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/d08846e7-db0b-4aff-8f1c-9980e99d0f0d_ef-delete-child.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"c-sharp","slug":"c-sharp"},{"name":"entity-framework","slug":"entity-framework"}],"slug":"how-to-replace-child-collections-in-entity-framework","total":0},{"id":35,"title":"Implement Merge Sort Using C-Sharp","imageUrl":"afd5c0fc-11e4-4b0d-b893-9ce977173328_merge_sort.png","dateCreated":"2018-07-19T05:35:20.326Z","dateModified":"2018-07-19T05:35:32.691Z","contributedBy":"AskGif","content":"In computer science, merge sort (also commonly spelled mergesort) is an efficient, general-purpose, comparison-based sorting algorithm. Most implementations produce a stable sort, which means that the implementation preserves the input order of equal elements in the sorted output. Merge sort is a","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/afd5c0fc-11e4-4b0d-b893-9ce977173328_merge_sort.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"c-sharp","slug":"c-sharp"},{"name":"sorting","slug":"sorting"},{"name":"algorithm","slug":"algorithm"},{"name":"interview","slug":"interview"}],"slug":"implement-merge-sort-using-c-sharp","total":0}]}