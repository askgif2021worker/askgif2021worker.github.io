{"id":412,"title":"Start your web tests with Selenium2, Maven, Testng","imageUrl":"c65bd914-66cf-4345-bcdb-736cf283ec69_selenium-maven.jpg","dateCreated":"2019-06-26T07:00:11.515Z","dateModified":"2019-06-26T07:02:44.098Z","contributedBy":"AskGif","content":"<p>Every time you are playing around with web tests you think: why have I waited so long. Doesn&rsquo;t matter, you have done it and that&rsquo;s it what matters.</p>\r\n<p>&nbsp;</p>\r\n<p>The last time I used Selenium 1 which is very often used for web tests. Selenium 1 is great but has a few limitations. It is based around an injected Javascript library &ndash; the Selenium core. It works, but starting the browser with the Selenium core is often a little bit tricky. With every browser update, you hope that it is still running or hope for the update, which needs to be included in the Maven plugin, is pushed to the Maven mirrors, is really working on all systems, &hellip;</p>\r\n<p>&nbsp;</p>\r\n<p>But now there is Selenium 2 with the merge of Webdriver. It is no longer a Javascript core, it is a native browser plugin. And now you are much deeper inside the browser. It feels more stable from the first second and it works really well. With the Webdriver part of Selenium 2, there is a new API. But it isn&rsquo;t very complicated, just different.</p>\r\n<p>&nbsp;</p>\r\n<p>I can give you a damn short example which works really well for me and runs through our entire webpage. The great part: it takes screenshots of the complete page (not just the visible part) and stores them in the target folder.</p>\r\n<p>&nbsp;</p>\r\n<p>First of all, the Maven pom:</p>\r\n<pre class=\"language-markup\"><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\r\n&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;\r\n    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\r\n \r\n    &lt;groupId&gt;de.viaboxx.tests&lt;/groupId&gt;\r\n    &lt;artifactId&gt;integrationtest&lt;/artifactId&gt;\r\n    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;\r\n \r\n    &lt;dependencies&gt;\r\n        &lt;dependency&gt;\r\n            &lt;groupId&gt;org.testng&lt;/groupId&gt;\r\n            &lt;artifactId&gt;testng&lt;/artifactId&gt;\r\n            &lt;version&gt;5.13.1&lt;/version&gt;\r\n            &lt;scope&gt;test&lt;/scope&gt;\r\n        &lt;/dependency&gt;\r\n \r\n        &lt;dependency&gt;\r\n            &lt;groupId&gt;org.seleniumhq.selenium&lt;/groupId&gt;\r\n            &lt;artifactId&gt;selenium&lt;/artifactId&gt;\r\n            &lt;version&gt;2.0a6&lt;/version&gt;\r\n        &lt;/dependency&gt;\r\n \r\n        &lt;dependency&gt;\r\n            &lt;groupId&gt;org.seleniumhq.selenium&lt;/groupId&gt;\r\n            &lt;artifactId&gt;selenium-firefox-driver&lt;/artifactId&gt;\r\n            &lt;version&gt;2.0a6&lt;/version&gt;\r\n        &lt;/dependency&gt;\r\n    &lt;/dependencies&gt;\r\n \r\n    &lt;build&gt;\r\n        &lt;plugins&gt;\r\n            &lt;plugin&gt;\r\n                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\r\n                &lt;artifactId&gt;maven-surefire-plugin&lt;/artifactId&gt;\r\n                &lt;configuration&gt;\r\n                    &lt;skip&gt;true&lt;/skip&gt;\r\n                &lt;/configuration&gt;\r\n                &lt;executions&gt;\r\n                    &lt;execution&gt;\r\n                        &lt;phase&gt;integration-test&lt;/phase&gt;\r\n                        &lt;goals&gt;\r\n                            &lt;goal&gt;test&lt;/goal&gt;\r\n                        &lt;/goals&gt;\r\n                        &lt;configuration&gt;\r\n                            &lt;skip&gt;false&lt;/skip&gt;\r\n                        &lt;/configuration&gt;\r\n                    &lt;/execution&gt;\r\n                &lt;/executions&gt;\r\n            &lt;/plugin&gt;\r\n            &lt;plugin&gt;\r\n                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\r\n                &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;\r\n                &lt;configuration&gt;\r\n                    &lt;source&gt;1.5&lt;/source&gt;\r\n                    &lt;target&gt;1.5&lt;/target&gt;\r\n                &lt;/configuration&gt;\r\n            &lt;/plugin&gt;\r\n        &lt;/plugins&gt;\r\n    &lt;/build&gt;\r\n&lt;/project&gt;</code></pre>\r\n<p>And it follows the whole logic for the test placed under src/test/java/de/viaboxx/tests/SeleniumTest.java:</p>\r\n<pre class=\"language-java\"><code>package de.viaboxx.tests;\r\n \r\nimport org.apache.commons.io.FileUtils;\r\nimport org.openqa.selenium.OutputType;\r\nimport org.openqa.selenium.firefox.FirefoxDriver;\r\nimport org.testng.Assert;\r\nimport org.testng.annotations.Test;\r\n \r\nimport java.io.File;\r\nimport java.io.IOException;\r\n \r\npublic class SeleniumTest {\r\n    private static final String FOLDER_NAME = \"target/screenshots/\";\r\n \r\n    @Test\r\n    public void website() throws IOException, InterruptedException {\r\n        FirefoxDriver driver = new FirefoxDriver();\r\n        driver.get(\"http://www.viaboxxsystems.de\");\r\n        Assert.assertEquals(driver.findElementByXPath(\"//h2\").getText(), \"Innovation\");\r\n        FileUtils.copyFile(driver.getScreenshotAs(OutputType.FILE), new File(FOLDER_NAME + \"startpage.png\"));\r\n \r\n        driver.findElementByLinkText(\"Team\").click();\r\n        Assert.assertEquals(driver.findElementByXPath(\"//h2\").getText(), \"Team\");\r\n        FileUtils.copyFile(driver.getScreenshotAs(OutputType.FILE), new File(FOLDER_NAME + \"team.png\"));\r\n \r\n        driver.findElementByLinkText(\"Blog\").click();\r\n        FileUtils.copyFile(driver.getScreenshotAs(OutputType.FILE), new File(FOLDER_NAME + \"blog.png\"));\r\n \r\n        driver.findElementByLinkText(\"Impressum\").click();\r\n        FileUtils.copyFile(driver.getScreenshotAs(OutputType.FILE), new File(FOLDER_NAME + \"impressum.png\"));\r\n \r\n        driver.close();\r\n    }\r\n \r\n}</code></pre>\r\n<p><span style=\"color: #7e7e7e; font-family: 'PT Sans', sans-serif; font-size: 15px;\">Run it with:</span></p>\r\n<pre class=\"language-markup\"><code>mvn integration-test</code></pre>\r\n<p>Readable isn&rsquo;t it. And that&rsquo;s all &ndash; a complete working infrastructure for your web tests. The example works with Firefox, but you can also run headless with HtmlUnit, or make your tests running in IE or Chrome. The great thing: just put the application in your continuous integration server and run it on your defined build agent.</p>\r\n<p>&nbsp;</p>\r\n<p>After just one evening I fall in love with the new Selenium 2. Why? Because it works much more stable in kind of browser starting and running. I think it is a great way to go.</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/c65bd914-66cf-4345-bcdb-736cf283ec69_selenium-maven.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"start-your-web-tests-with-selenium2-maven-testng","tags":[{"name":"java","slug":"java"},{"name":"testing","slug":"testing"},{"name":"maven","slug":"maven"},{"name":"test","slug":"test"},{"name":"selenium","slug":"selenium"}],"recommendations":[{"id":112,"title":"Search an element in binary tree without recursion.","imageUrl":"b3ea6acf-6279-4e29-b3cd-bb09edbc2784_binary-tree.jpg","dateCreated":"2018-08-16T09:08:38.069Z","dateModified":"2018-08-16T09:09:08.341Z","contributedBy":"AskGif","content":"We can use level order traversal for solving this problem. The only change required in level order traversal is, instead of printing the date we just need to check whether the root data is equal to the element we want to search.\r\nsource:&nbsp;Data Structures and Algorithms Made Easy in Jav","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/b3ea6acf-6279-4e29-b3cd-bb09edbc2784_binary-tree.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"interview","slug":"interview"},{"name":"java","slug":"java"},{"name":"traversal","slug":"traversal"},{"name":"tree","slug":"tree"},{"name":"questions","slug":"questions"},{"name":"binary-tree","slug":"binary-tree"},{"name":"level-order","slug":"level-order"}],"slug":"search-an-element-in-binary-tree-without-recursion","total":0},{"id":59,"title":"How to Solve Coin Change Problem using Dynamic Programming for Minimum number of ways possible?","imageUrl":"450a3f20-633e-4f13-aa8e-dce34b85cf72_make-change.png","dateCreated":"2018-07-31T09:15:15.694Z","dateModified":"2018-07-31T09:15:30.599Z","contributedBy":"AskGif","content":"Coin Change Problem is also known as Making Change Problem.\r\nThe change-making problem, also known as the minimum coin change problem, addresses the question of finding the minimum number of coins (of certain denominations) that add up to a given amount of money. It is a knapsack type prob","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/450a3f20-633e-4f13-aa8e-dce34b85cf72_make-change.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"recursion","slug":"recursion"},{"name":"java","slug":"java"},{"name":"dynamic-programming","slug":"dynamic-programming"},{"name":"questions","slug":"questions"},{"name":"interview","slug":"interview"}],"slug":"how-to-solve-coin-change-problem-using-dynamic-programming-for-minimum-number-of-ways-possible","total":0},{"id":20,"title":"Coin Change Problem Algorithm Solution","imageUrl":"ceddc0d4-c5a2-46bd-b91e-f5413ff64816_Coin-Change-Problem.jpg","dateCreated":"2018-07-12T13:29:09.634Z","dateModified":"2018-07-12T13:29:09.634Z","contributedBy":"AskGif","content":"The change-making problem, also known as minimum coin change problem, addresses the question of finding the minimum number of coins (of certain denominations) that add up to a given amount of money refer coin change problem. It is a knapsack type problem, and has applications wider than just curr","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/ceddc0d4-c5a2-46bd-b91e-f5413ff64816_Coin-Change-Problem.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"dynamic-programming","slug":"dynamic-programming"},{"name":"java","slug":"java"},{"name":"algorithm","slug":"algorithm"},{"name":"interview","slug":"interview"}],"slug":"coin-change-problem-algorithm-solution","total":0},{"id":1,"title":"How to install java on EC2 Ubuntu 16-04","imageUrl":"d11fed6a-e800-4779-8cee-f7f5c8c42ee8_00_lead_image_java_in_ubuntu.png","dateCreated":"2018-06-20T13:02:11.29Z","dateModified":"2018-07-07T15:23:51.439Z","contributedBy":"AskGif","content":"This blog is in continuation to blog&nbsp;<a href=\"../../../../../blog/3/how-to-create-ec2-instance-on-aws-free-tier-plan/?lang=en\" target=\"_blank\" rel=\"noopener\">How to create EC2 instance on AWS Free Tier plan.</a>&nbsp;if you missed please revisit.\r\nFirst we need to get an Ubuntu (16.04","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/d11fed6a-e800-4779-8cee-f7f5c8c42ee8_00_lead_image_java_in_ubuntu.png","category":{"name":"tutorials","slug":"tutorials"},"tags":[{"name":"jre","slug":"jre"},{"name":"jdk","slug":"jdk"},{"name":"java","slug":"java"}],"slug":"how-to-install-java-on-ec2-ubuntu-16-04","total":0}]}