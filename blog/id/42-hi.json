{"id":42,"title":"Calculate all Unique Path count can be taken by Robot.","imageUrl":"16fa179e-eb35-4230-8fbb-ac1d1325a150_robot_maze.png","dateCreated":"2018-07-20T11:03:59.177Z","dateModified":"2018-07-20T11:04:07.11Z","contributedBy":"AskGif","content":"<p>A robot is located at the top-left corner of a m x n grid ( 'Start' ).</p>\r\n<p>The robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid ( 'Finish' ).</p>\r\n<p>How many are possible unique paths there?</p>\r\n<p>We will be using Dynamic Programming to solve this problem</p>\r\n<pre class=\"language-java\"><code>public class UniquePathByRobot {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tint m = 7, n = 3;\r\n\t\tSystem.out.println(CalculateUniquePaths(m,n));\r\n\r\n\t}\r\n\r\n\tprivate static int CalculateUniquePaths(int m, int n) {\r\n\t\tint[][] arr = new int[m][n];\r\n\t\t\r\n\t\tfor(int i=0;i&lt;m;i++)\r\n\t\t\tarr[i][0]=1;\r\n\t\tfor(int i=0;i&lt;n;i++)\r\n\t\t\tarr[0][i]=1;\r\n\t\t\r\n\t\tfor(int i=1;i&lt;m;i++)\r\n\t\t{\r\n\t\t\tfor(int j=1;j&lt;n;j++) {\r\n\t\t\t\t\r\n\t\t\t\t\tarr[i][j] = arr[i-1][j]+arr[i][j-1];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\treturn arr[m-1][n-1];\r\n\t}\r\n\r\n}\r\n</code></pre>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/16fa179e-eb35-4230-8fbb-ac1d1325a150_robot_maze.png","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"calculate-all-unique-path-count-can-be-taken-by-robot","tags":[{"name":"java","slug":"java"},{"name":"dynamic-programming","slug":"dynamic-programming"},{"name":"algorithm","slug":"algorithm"},{"name":"interview","slug":"interview"}],"recommendations":[{"id":1720,"title":"Number Of Rectangles That Can Form The Largest Square - Array - Easy - LeetCode","imageUrl":"icon_a3758d97-0c9c-4e59-860a-b2f31b1f95ab.jpg","dateCreated":"2021-01-18T12:11:37.997Z","dateModified":"2021-01-18T12:11:43.515Z","contributedBy":"sumitc91","content":"You are given an array rectangles where rectangles[i] = [li, wi] represents the ith rectangle of length li and width wi.\nYou can cut the ith rectangle to form a square with a side length of k if both k &lt;= li and k &lt;= wi. For example, if you have a rectangle [4,6], you can cut it to g","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a3758d97-0c9c-4e59-860a-b2f31b1f95ab.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"number-of-rectangles-that-can-form-the-largest-square-array-easy-leetcode","total":0},{"id":1691,"title":"प्रदर्शन बनाम स्थिरता","imageUrl":"icon_007e63be-5ce4-4cc9-a98c-26b5f0af31ae.png","dateCreated":"2020-11-20T07:26:58.824Z","dateModified":"2020-11-20T07:27:09.907Z","contributedBy":"sumitc91","content":"एक सेवा स्केलेबल है यदि यह संसाधनों में आनुपातिक रूप से बढ़े हुए प्रदर्शन के परिणामस्वरूप है। आम तौर पर, प्रदर्शन में वृद्धि का मतलब काम की अधिक इकाइयों की सेवा करना है, लेकिन यह काम की बड़ी इकाइयों को संभालना भी हो सकता है, जैसे कि डेटासेट बढ़ने पर ।1\nप्रदर्शन बनाम स्केलेबिलिटी को देखने क","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/007e63be-5ce4-4cc9-a98c-26b5f0af31ae.png","category":{"name":"शिक्षण","slug":"tutorials"},"tags":[{"name":"interview","slug":"interview"}],"slug":"performance-vs-scalability","total":0},{"id":1652,"title":"Minimum Path Sum - Array - Medium - LeetCode","imageUrl":"icon_d9f5ff7a-791f-41b0-89b0-f12760706d99.jpg","dateCreated":"2020-10-31T09:04:08.041Z","dateModified":"2020-10-31T09:04:16.725Z","contributedBy":"sumitc91","content":"Given a m x n grid filled with non-negative numbers, find a path from top left to bottom right which minimizes the sum of all numbers along its path.\nNote: You can only move either down or right at any point in time.\nExample:\nInput:<br />[<br />&nbsp; [1,3,1],<br />&nbsp; [1,","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/d9f5ff7a-791f-41b0-89b0-f12760706d99.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"मध्यम","slug":"medium"}],"slug":"minimum-path-sum-array-medium-leetcode","total":0},{"id":1609,"title":"Customers Who Never Order - Sql - Easy - LeetCode","imageUrl":"icon_3979029e-3ead-4244-a16d-a1344d80e6ec.jpg","dateCreated":"2020-10-16T07:20:40.745Z","dateModified":"2020-10-16T07:20:46.124Z","contributedBy":"sumitc91","content":"Suppose that a website contains two tables, the Customers table and the Orders table. Write a SQL query to find all customers who never order anything.\nTable: Customers.\n+----+-------+<br />| Id | Name &nbsp;|<br />+----+-------+<br />| 1 &nbsp;| Joe &nbsp; |<br />| 2 &nbsp;| Henry ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/3979029e-3ead-4244-a16d-a1344d80e6ec.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"mysql","slug":"mysql"},{"name":"sql","slug":"sql"}],"slug":"customers-who-never-order-sql-easy-leetcode","total":0}]}