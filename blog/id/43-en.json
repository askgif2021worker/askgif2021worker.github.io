{"id":43,"title":"Find Minimum Path Sum in a given 2D Array.","imageUrl":"21f4c7b9-3c4a-41bc-b7ff-5e7538352285_minimum-path-sum.png","dateCreated":"2018-07-20T11:37:19.143Z","dateModified":"2018-07-20T11:37:29.151Z","contributedBy":"AskGif","content":"<p>Given a m x n grid filled with non-negative numbers, find a path from top left to bottom right which minimizes the sum of all numbers along its path.</p>\r\n<p>Note: You can only move either down or right at any point in time.</p>\r\n<pre class=\"language-markup\"><code>Input:\r\n[\r\n  [1,3,1],\r\n  [1,5,1],\r\n  [4,2,1]\r\n]\r\nOutput: 7\r\nExplanation: Because the path 1&rarr;3&rarr;1&rarr;1&rarr;1 minimizes the sum.</code></pre>\r\n<p>We will Solve this problem using dynamic programming</p>\r\n<pre class=\"language-java\"><code>public class MinimumPathSum {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tint[][] arr = new int[][] {{1,3,1},\r\n\t\t                          {1,5,1},\r\n\t\t                          {4,2,1}};\r\n\t\t                          \r\n\t\tSystem.out.println(CalculateMinimumPathSum(arr));\r\n\r\n\t}\r\n\r\n\tprivate static int CalculateMinimumPathSum(int[][] arr) {\r\n\t\tfor(int i=0;i&lt;3;i++) {\r\n\t\t\tfor(int j=0;j&lt;3;j++) {\r\n\t\t\t\tif(i==0 &amp;&amp; j == 0)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\telse if(i==0)\r\n\t\t\t\t\tarr[i][j] = arr[i][j] + arr[i][j-1];\r\n\t\t\t\telse if(j==0)\r\n\t\t\t\t\tarr[i][j] = arr[i][j] + arr[i-1][j];\r\n\t\t\t\telse\r\n\t\t\t\t\tarr[i][j] = min(arr[i-1][j]+arr[i][j], arr[i][j-1]+arr[i][j]);\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn arr[2][2];\r\n\t}\r\n\r\n\tprivate static int min(int i, int j) {\r\n\t\treturn i&lt;j?i:j;\r\n\t}\r\n\r\n}\r\n</code></pre>\r\n<p>Output :</p>\r\n<pre class=\"language-markup\"><code>7</code></pre>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/21f4c7b9-3c4a-41bc-b7ff-5e7538352285_minimum-path-sum.png","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"find-minimum-path-sum-in-a-given-2d-array","tags":[{"name":"java","slug":"java"},{"name":"algorithm","slug":"algorithm"},{"name":"dynamic-programming","slug":"dynamic-programming"},{"name":"interview","slug":"interview"}],"recommendations":[{"id":1646,"title":"Merge Intervals - Array - Medium - LeetCode","imageUrl":"icon_a1913eb6-6b8f-4cbb-9c4e-096c9e76c6cd.jpg","dateCreated":"2020-10-30T13:34:51.72Z","dateModified":"2020-10-30T13:34:58.66Z","contributedBy":"sumitc91","content":"Given a collection of intervals, merge all overlapping intervals.\nExample 1:\nInput: intervals = [[1,3],[2,6],[8,10],[15,18]]<br />Output: [[1,6],[8,10],[15,18]]<br />Explanation: Since intervals [1,3] and [2,6] overlaps, merge them into [1,6].<br />Example 2:\nInput: intervals","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a1913eb6-6b8f-4cbb-9c4e-096c9e76c6cd.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"merge-intervals-array-medium-leetcode","total":0},{"id":1641,"title":"Combination Sum - Array - Medium - LeetCode","imageUrl":"icon_b42ea67c-de94-42f6-aa57-391837827a47.jpg","dateCreated":"2020-10-25T14:37:09.044Z","dateModified":"2020-10-25T14:37:53.305Z","contributedBy":"sumitc91","content":"Given an array of distinct integers candidates and a target integer target, return a list of all unique combinations of candidates where the chosen numbers sum to target. You may return the combinations in any order.\nThe same number may be chosen from candidates an unlimited number of time","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/b42ea67c-de94-42f6-aa57-391837827a47.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"combination-sum-array-medium-leetcode","total":0},{"id":1640,"title":"Find First and Last Position of Element in Sorted Array - Array - Medium - LeetCode","imageUrl":"icon_4dd548b4-7f64-4384-8000-de99e5e3a765.jpg","dateCreated":"2020-10-25T13:25:33.524Z","dateModified":"2020-10-25T13:25:43.128Z","contributedBy":"sumitc91","content":"Given an array of integers nums sorted in ascending order, find the starting and ending position of a given target value.\nIf the target is not found in the array, return [-1, -1].\nFollow up: Could you write an algorithm with O(log n) runtime complexity?\n&nbsp;\nExample ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/4dd548b4-7f64-4384-8000-de99e5e3a765.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"medium","slug":"medium"}],"slug":"find-first-and-last-position-of-element-in-sorted-array-array-medium-leetcode","total":0},{"id":1609,"title":"Customers Who Never Order - Sql - Easy - LeetCode","imageUrl":"icon_3979029e-3ead-4244-a16d-a1344d80e6ec.jpg","dateCreated":"2020-10-16T07:20:40.745Z","dateModified":"2020-10-16T07:20:46.124Z","contributedBy":"sumitc91","content":"Suppose that a website contains two tables, the Customers table and the Orders table. Write a SQL query to find all customers who never order anything.\nTable: Customers.\n+----+-------+<br />| Id | Name &nbsp;|<br />+----+-------+<br />| 1 &nbsp;| Joe &nbsp; |<br />| 2 &nbsp;| Henry ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/3979029e-3ead-4244-a16d-a1344d80e6ec.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"mysql","slug":"mysql"},{"name":"sql","slug":"sql"}],"slug":"customers-who-never-order-sql-easy-leetcode","total":0}]}