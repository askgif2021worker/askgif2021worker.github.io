{"id":46,"title":"Introduction to Dynamic Programming","imageUrl":"b3b81f05-c0c6-45b2-9704-928b6314e50e_dp.gif","dateCreated":"2018-07-27T08:21:38.763Z","dateModified":"2018-07-27T08:42:26.204Z","contributedBy":"AskGif","content":"<p>Dynamic programming is both a mathematical optimization method and a computer programming method. The method was developed by Richard Bellman in the 1950s and has found applications in numerous fields, from aerospace engineering to economics. In both contexts, it refers to simplifying a complicated problem by breaking it down into simpler sub-problems in a recursive manner. While some decision problems cannot be taken apart this way, decisions that span several points in time do often break apart recursively. Likewise, in computer science, if a problem can be solved optimally by breaking it into sub-problems and then recursively finding the optimal solutions to the sub-problems, then it is said to have optimal substructure.</p>\r\n<p>&nbsp;</p>\r\n<p>If sub-problems can be nested recursively inside larger problems, so that dynamic programming methods are applicable, then there is a relation between the value of the larger problem and the values of the sub-problems. In the optimization literature, this relationship is called the Bellman equation.</p>\r\n<p>&nbsp;</p>\r\n<p><strong>What is Dynamic Programming Strategy?</strong></p>\r\n<p>- Recursion: Solves subproblems recursively</p>\r\n<p>- Memoization: Stores already computed values in a table.</p>\r\n<p>&nbsp;</p>\r\n<p><strong>Properties of Dynamic Programming Strategy:</strong></p>\r\n<p>- Optimal Substructure: an optimal solution to a problem contains optimal solutions to subproblems.</p>\r\n<p>- Overlapping Subproblems: a recursive solution contains a small number of distinct subproblems repeated many times.</p>\r\n<p>&nbsp;</p>\r\n<p><strong>Dynamic Programming Approaches:</strong></p>\r\n<p>- Bottom-up dynamic programming</p>\r\n<p>- Top-down dynamic programming</p>\r\n<p>&nbsp;</p>\r\n<p><strong>Examples of dynamic programming algorithms:</strong></p>\r\n<p>-&nbsp;<a href=\"../../../../../blog/43/find-minimum-path-sum-in-a-given-2d-array/\">Find Minimum Path Sum in a given 2D Array.</a></p>\r\n<p>-&nbsp;<a title=\"Calculate all Unique Path count can be taken by Robot\" href=\"../../../../../blog/42/calculate-all-unique-path-count-can-be-taken-by-robot/\">Calculate all Unique Path count can be taken by Robot</a></p>\r\n<p>-&nbsp;<a title=\"Find Total Number of Set Having given Combination Sum.\" href=\"../../../../../blog/41/find-total-number-of-set-having-given-combination-sum/\">Find Total Number of Set Having given Combination Sum.</a></p>\r\n<p>-&nbsp;<a title=\"Maximize House Robbery Amount that can be made.\" href=\"../../../../../blog/40/maximize-house-robbery-amount-that-can-be-made/\">Maximize House Robbery Amount that can be made.</a></p>\r\n<p>-&nbsp;<a title=\"Find total ways to reach the nth stair using step 1, 2 or 3.\" href=\"../../../../../blog/39/find-total-ways-to-reach-the-nth-stair-using-step-1-2-or-3/\">Find total ways to reach the nth stair using step 1, 2 or 3.</a></p>\r\n<p>-&nbsp;<a title=\"Cutting Rod Problem to get maximum profit\" href=\"../../../../../blog/26/cutting-rod-problem-to-get-maximum-profit/\">Cutting Rod Problem to get maximum profit</a></p>\r\n<p>-&nbsp;<a title=\"Find Longest Increasing Subsequence\" href=\"../../../../../blog/18/find-longest-increasing-subsequence/\">Find Longest Increasing Subsequence</a></p>\r\n<p>-&nbsp;<a title=\"Minimum Coin Count For a Coin Change Sum Problem\" href=\"../../../../../blog/25/minimum-coin-count-for-a-coin-change-sum-problem/\">Minimum Coin Count For a Coin Change Sum Problem</a></p>\r\n<p>-&nbsp;<a title=\"Coin Change Problem Algorithm Solution\" href=\"../../../../../blog/20/coin-change-problem-algorithm-solution/\">Coin Change Problem Algorithm Solution</a></p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/b3b81f05-c0c6-45b2-9704-928b6314e50e_dp.gif","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"introduction-to-dynamic-programming","tags":[{"name":"questions","slug":"questions"},{"name":"algorithm","slug":"algorithm"},{"name":"dynamic-programming","slug":"dynamic-programming"},{"name":"interview","slug":"interview"}],"recommendations":[{"id":1694,"title":"What is Domain name system (DNS)?","imageUrl":"icon_5d73c05a-94c0-45e6-b648-a89025ffe4e8.png","dateCreated":"2020-11-20T07:33:27.184Z","dateModified":"2020-11-20T07:33:33.359Z","contributedBy":"sumitc91","content":"A Domain Name System (DNS) translates a domain name such as www.example.com to an IP address.\nDNS is hierarchical, with a few authoritative servers at the top level. Your router or ISP provides information about which DNS server(s) to contact when doing a lookup. Lower level DNS servers ca","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/5d73c05a-94c0-45e6-b648-a89025ffe4e8.png","category":{"name":"tutorials","slug":"tutorials"},"tags":[{"name":"interview","slug":"interview"}],"slug":"what-is-domain-name-system-dns","total":0},{"id":1684,"title":"How to Design Pastebin.com (or Bit.ly)","imageUrl":"icon_9d14bd09-d9e3-48e7-8309-9e324e9d51de.jpg","dateCreated":"2020-11-20T05:04:08.797Z","dateModified":"2020-11-20T05:04:26.605Z","contributedBy":"sumitc91","content":"Design Bit.ly - is a similar question, except pastebin requires storing the paste contents instead of the original unshortened url.\nStep 1: Outline use cases and constraints<br />Gather requirements and scope the problem. Ask questions to clarify use cases and constraints. Discuss assumpti","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/9d14bd09-d9e3-48e7-8309-9e324e9d51de.jpg","category":{"name":"tutorials","slug":"tutorials"},"tags":[{"name":"design","slug":"design"},{"name":"interview","slug":"interview"},{"name":"system-design","slug":"system-design"}],"slug":"how-to-design-pastebin.com-or-bit.ly","total":0},{"id":1647,"title":"Slowest Key - Array - Easy - LeetCode","imageUrl":"icon_836f29a5-8a43-4160-b64a-fbf8416788bd.jpg","dateCreated":"2020-10-31T03:14:43.566Z","dateModified":"2020-10-31T03:14:48.648Z","contributedBy":"sumitc91","content":"A newly designed keypad was tested, where a tester pressed a sequence of n keys, one at a time.\nYou are given a string keysPressed of length n, where keysPressed[i] was the ith key pressed in the testing sequence, and a sorted list releaseTimes, where releaseTimes[i] was the time the ith k","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/836f29a5-8a43-4160-b64a-fbf8416788bd.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"slowest-key-array-easy-leetcode","total":0},{"id":1609,"title":"Customers Who Never Order - Sql - Easy - LeetCode","imageUrl":"icon_3979029e-3ead-4244-a16d-a1344d80e6ec.jpg","dateCreated":"2020-10-16T07:20:40.745Z","dateModified":"2020-10-16T07:20:46.124Z","contributedBy":"sumitc91","content":"Suppose that a website contains two tables, the Customers table and the Orders table. Write a SQL query to find all customers who never order anything.\nTable: Customers.\n+----+-------+<br />| Id | Name &nbsp;|<br />+----+-------+<br />| 1 &nbsp;| Joe &nbsp; |<br />| 2 &nbsp;| Henry ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/3979029e-3ead-4244-a16d-a1344d80e6ec.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"mysql","slug":"mysql"},{"name":"sql","slug":"sql"}],"slug":"customers-who-never-order-sql-easy-leetcode","total":0}]}