{"id":507,"title":"Implementing Oauth Login for Linkedin, Facebook, Google and Microsoft","imageUrl":"3777aeef-ad18-459b-8370-2306287f22e6_OauthBanner.jpg","dateCreated":"2019-08-29T11:58:16.72Z","dateModified":"2019-08-29T11:58:30.055Z","contributedBy":"AskGif","content":"<p>Introducing the new lightweight OAuth Login commercial edition, an OAuth login system for your website with Facebook, Google, Microsoft and Linkedin. OAuth Login is very quick and powerful, sure this helps you to increase your web project registrations. It's definitely a must-have login system for every PHP based web projects. Hardly it will take 10 mins for installation.</p>\r\n<p>&nbsp;</p>\r\n<p>Database</p>\r\n<p>Users table database design.</p>\r\n<pre class=\"language-javascript\"><code>CREATE TABLE IF NOT EXISTS `users`\r\n(\r\nid INT(11) NOT NULL AUTO_INCREMENT,\r\nemail VARCHAR(200) ,\r\nname VARCHAR(200) ,\r\nfirst_name VARCHAR(200) ,\r\nlast_name VARCHAR(200) ,\r\ngender VARCHAR(10) ,\r\nbirthday VARCHAR(20) ,\r\nlocation VARCHAR(200) ,\r\nhometown VARCHAR(200) ,\r\nbio TEXT,\r\nrelationship VARCHAR(30) ,\r\ntimezone VARCHAR(10) ,\r\nprovider VARCHAR(10) ,\r\nprovider_id INT(30) ,\r\npicture TEXT,\r\nPRIMARY KEY (`id`)\r\n) ENGINE=MyISAM DEFAULT CHARSET=latin1 AUTO_INCREMENT=8 ;</code></pre>\r\n<p>&nbsp;</p>\r\n<p>The script contains three folders called facebook_lib, google_lib, microsoft_lib, linkedin_lib and images with PHP files.</p>\r\n<pre class=\"language-markup\"><code>facebook_lib //Facebook OAUTH library \r\n-- config.php //Facebook app configuration file.\r\ngoogle_lib //Google OAUTH library \r\n-- config.php //Google app configuration file.\r\nmicrosoft_lib //Microsoft OAUTH library \r\n-- config.php //Microsoft app configuration file.\r\nlinkedin_lib //Linkedin OAUTH library \r\n-- config.php //Linkedin app configuration file.\r\nimages\r\ndb.php //Database connection \r\nOauthLogin.php //Class \r\nfacebook_login.php //Facebook Login\r\ngoogle_login.php //Google Login\r\nmicrosoft_login.php //Microsoft Login\r\nlinkedin_login.php //Linkedin Login\r\nindex.php\r\nhome.php\r\nheader.php\r\nredirect.php\r\nlogout.php\r\n</code></pre>\r\n<p>&nbsp;</p>\r\n<p>How to Use</p>\r\n<p>Just call anchor tag with particular service login file.&nbsp;</p>\r\n<pre class=\"language-markup\"><code>&lt;a href='facebook_login.php'&gt;Facebook Login&lt;/a&gt;\r\n&lt;a href='google_login.php'&gt;Google Login&lt;/a&gt;\r\n&lt;a href='microsoft_login.php'&gt;Microsoft Login&lt;/a&gt;\r\n&lt;a href='linkedin_login.php'&gt;Linkedin&lt;/a&gt;</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Installation</p>\r\n<p>In this script just you have to modify three files.</p>\r\n<p>&nbsp;</p>\r\n<p>db.php</p>\r\n<p>Database configuration file, modify MySQL server details.</p>\r\n<pre class=\"language-javascript\"><code>&lt;?php\r\n$mysql_hostname = \"localhost\";\r\n$mysql_user = \"username\";\r\n$mysql_password = \"password\";\r\n$mysql_database = \"databasename\";\r\n$bd = mysql_connect($mysql_hostname, $mysql_user, $mysql_password) or die(\"Could not connect database\");\r\nmysql_select_db($mysql_database, $bd) or die(\"Could not select database\");\r\n$base_url='http://www.yourwebsite.com/';\r\n?&gt;</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Facebook Configuration facebook_lib/config.php</p>\r\n<p>You have to create an application. Facebook will provide you app id and app secret id, just replace in the following code.</p>\r\n<p>fbconfig.php</p>\r\n<pre class=\"language-javascript\"><code>&lt;?php\r\n$facebook_appid='App ID';\r\n$facebook_app_secret='App Secret';\r\n$facebook_scope='email,user_birthday';\r\n$facebook = new Facebook(array(\r\n'appId' =&gt; $facebook_appid,\r\n'secret' =&gt; $facebook_app_secret,\r\n));\r\n?&gt;</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Google Configuration google_lib/config.php</p>\r\n<p>You can find this in google_lib folder, here you have to configure application OAuth keys, Consumer keys, and redirection callback URL.</p>\r\n<pre class=\"language-javascript\"><code>// OAuth2 Settings, you can get these keys at https://code.google.com/apis/console Step 6 keys \r\n'oauth2_client_id' =&gt; 'Client ID',\r\n'oauth2_client_secret' =&gt; 'Client Secret',\r\n'oauth2_redirect_uri' =&gt; 'http://www.yoursite.com/google_login.php',\r\n\r\n// OAuth1 Settings Step 3  keys.\r\n'oauth_consumer_key' =&gt; 'OAuth Consumer Key',\r\n'oauth_consumer_secret' =&gt; 'OAuth Consumer Secret',</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Microsoft Configuration microsoft_lib/config.php</p>\r\n<p>Microsoft will provide you Client_Id and Client_Secret.</p>\r\n<p>fbconfig.php</p>\r\n<pre class=\"language-javascript\"><code>&lt;?php\r\n\r\n//Microsoft Application Settings\r\n$microsoft_client_id='Client ID';\r\n$microsoft_client_secret='Client Secret';\r\n$microsoft_scope='wl.basic wl.emails wl.birthday';\r\n$microsoft_redirect_url=$base_url.'microsoft_login.php';\r\n\r\n));\r\n?&gt;</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Linkedin Configuration linkedin_lib/config.php</p>\r\n<p>provide your App_Key and App_Secret.&nbsp;</p>\r\n<p>fbconfig.php</p>\r\n<pre class=\"language-javascript\"><code>&lt;?php\r\n\r\n//Linkedin Application Settings\r\n$linkedin_appKey='App Key';\r\n$linkedin_appSecret='App Secret';\r\n$linkedin_callbackUrl=$base_url.'linkedin_login.php';\r\n\r\n));\r\n?&gt;</code></pre>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/3777aeef-ad18-459b-8370-2306287f22e6_OauthBanner.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"implementing-oauth-login-for-linkedin-facebook-google-and-microsoft","tags":[{"name":"microsoft","slug":"microsoft"},{"name":"facebook","slug":"facebook"},{"name":"google-plus","slug":"google-plus"},{"name":"linkedin","slug":"linkedin"},{"name":"php","slug":"php"}],"recommendations":[{"id":521,"title":"Implementing Jquery Timeago Using PHP.","imageUrl":"07868385-a195-4a9a-bf2c-3834866242ac_timeago.jpg","dateCreated":"2019-08-30T10:51:54.792Z","dateModified":"2019-09-01T04:57:19.435Z","contributedBy":"AskGif","content":"Nowadays timeago is the most important functionality in social networking sites, it helps to update timestamps automatically. Recent days I received few requests from askgif readers that asked me how to implement timeago plugin with dynamic loading live data using PHP. In this post, I am just pre","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/07868385-a195-4a9a-bf2c-3834866242ac_timeago.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"php","slug":"php"},{"name":"timeago","slug":"timeago"},{"name":"livequery","slug":"livequery"},{"name":"jquery","slug":"jquery"}],"slug":"implementing-jquery-timeago-using-php","total":0},{"id":434,"title":"Implementing Twitter-like Oauth Home Timeline Display Using Jquery and PHP.","imageUrl":"1f48a047-423b-4a8a-9dea-a5ecb1592f03_twitterhome.jpg","dateCreated":"2019-08-21T06:46:23.916Z","dateModified":"2019-08-21T06:46:37.595Z","contributedBy":"AskGif","content":"My previous post Connect Twitter API with OAuth using PHP. In this post, I want to explain how to display Twitter Oauth home timeline with Jquery and PHP.\r\n&nbsp;\r\nTwitter Home Timeline JSON File.&nbsp;\r\n<pre class=\"language-javascript\"><code>{ \"posts\":[\r\n{        \r\n\"favorited\":","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/1f48a047-423b-4a8a-9dea-a5ecb1592f03_twitterhome.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"jquery","slug":"jquery"},{"name":"php","slug":"php"},{"name":"ajax","slug":"ajax"}],"slug":"implementing-twitter-like-oauth-home-timeline-display-using-jquery-and-php","total":0},{"id":433,"title":"Implementing Youtube Like Instant Search Using Jquery and Ajax.","imageUrl":"f722ed93-c291-4e2c-8663-75010a1c60ad_youtube_instant.jpg","dateCreated":"2019-08-20T11:50:55.547Z","dateModified":"2019-08-20T11:51:08.115Z","contributedBy":"AskGif","content":"The instant search feature has massively changed the web in past couple of weeks. I had developed real-time Youtube instant search with Jquery and Ajax. It is very simple like my previous posts, just reading the Youtube API JSON file with Jquery.\r\n&nbsp;\r\nJavascript Code\r\n$(\"","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/f722ed93-c291-4e2c-8663-75010a1c60ad_youtube_instant.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"php","slug":"php"},{"name":"ajax","slug":"ajax"},{"name":"jquery","slug":"jquery"}],"slug":"implementing-youtube-like-instant-search-using-jquery-and-ajax","total":0},{"id":318,"title":"Backing up and restoring MongoDB databases using PHP","imageUrl":"9e841dcb-b8f8-4ceb-8768-55af00c75ada_mongodb.jpg","dateCreated":"2019-03-23T17:47:30.132Z","dateModified":"2019-03-23T17:47:46.726Z","contributedBy":"AskGif","content":"Dumping a MongoDB database is done using the &ldquo;mongodump&rdquo; utility in the command prompt. This dump creates a binary export of the database. This export can be restored using the &ldquo;mongorestore&rdquo; utility.\r\n&nbsp;\r\nA basic dump of a local MongoDB database can be c","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/9e841dcb-b8f8-4ceb-8768-55af00c75ada_mongodb.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"mongodb","slug":"mongodb"},{"name":"php","slug":"php"}],"slug":"backing-up-and-restoring-mongodb-databases-using-php","total":0}]}