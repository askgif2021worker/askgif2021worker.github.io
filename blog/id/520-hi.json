{"id":520,"title":"Implementing Multiple Ajax Image Upload without Refreshing Page using Jquery.","imageUrl":"563104bb-488d-4ac1-90f4-60640a28e896_image-upload.jpg","dateCreated":"2019-08-30T07:00:12.515Z","dateModified":"2019-08-30T07:00:26.077Z","contributedBy":"AskGif","content":"<p>Today I am presenting the most important social networking feature called multiple ajax image upload without refreshing the page using jquery and PHP. We just modified few lines of code in jqery.form.js plugin and renamed that to jquery.wallform.js. This feature is one of the key feature in Wall Script sale, big thanks to Arun Sekar for this code trick.</p>\r\n<p>&nbsp;</p>\r\n<p>Javascript Code</p>\r\n<p>$(\"#photoimg\").on('change',function(){})- photoimg is the ID name of INPUT FILE tag and $('#imageform').ajaxForm() - imageform is the ID name of FORM. While changing INPUT it calls FORM submit without refreshing page using ajaxForm() method. Uploaded images will &lt;i&gt;prepend&lt;/i&gt; inside &lt;i&gt;#preview&lt;/i&gt; tag.</p>\r\n<pre class=\"language-javascript\"><code>&lt;script type=\"text/javascript\" src=\"http://ajax.googleapis.com/\r\najax/libs/jquery/2.1.1/jquery.min.js\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\" src=\"jquery.wallform.js\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;\r\n$(document).ready(function() \r\n{ \r\n\r\n$('#photoimg').on('change', function() \r\n {\r\nvar A=$(\"#imageloadstatus\");\r\nvar B=$(\"#imageloadbutton\");\r\n\r\n$(\"#imageform\").ajaxForm({target: '#preview', \r\nbeforeSubmit:function(){\r\nA.show();\r\nB.hide();\r\n}, \r\nsuccess:function(){\r\nA.hide();\r\nB.show();\r\n}, \r\nerror:function(){\r\nA.hide();\r\nB.show();\r\n} }).submit();\r\n});\r\n\r\n}); \r\n&lt;/script&gt;</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Here hiding and showing #imageloadstatus and #imageloadbutton based on form upload submit status.&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>index.php</p>\r\n<p>Contains simple PHP and HTML code. Here $session_id=1 means user id session value.&nbsp;</p>\r\n<pre class=\"language-markup\"><code>&lt;?php\r\ninclude('db.php');\r\nsession_start();\r\n$session_id='1'; // User login session value\r\n?&gt;\r\n&lt;div id='preview'&gt;\r\n&lt;/div&gt;\r\n&lt;form id=\"imageform\" method=\"post\" enctype=\"multipart/form-data\" action='ajaximage.php'&gt;\r\nUpload image: \r\n&lt;div id='imageloadstatus' style='display:none'&gt;&lt;img src=\"loader.gif\" alt=\"Uploading....\"/&gt;&lt;/div&gt;\r\n&lt;div id='imageloadbutton'&gt;\r\n&lt;input type=\"file\" name=\"photoimg\" id=\"photoimg\" /&gt;\r\n\r\n&lt;/div&gt;\r\n&lt;/form&gt;</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Sample database design for Users.</p>\r\n<p>&nbsp;</p>\r\n<p>Users</p>\r\n<p>Contains user details username, password and email.</p>\r\n<pre class=\"language-javascript\"><code>CREATE TABLE `users` (\r\n`uid` int(11) AUTO_INCREMENT PRIMARY KEY,\r\n`username` varchar(255) UNIQUE KEY,\r\n`password` varchar(100),\r\n`email` varchar(255) UNIQUE KEY\r\n)</code></pre>\r\n<p>&nbsp;</p>\r\n<p>User Uploads</p>\r\n<p>Contains user upload details upload_id, image_name, user_id_fk(foreign key) and timestamp etc.</p>\r\n<pre class=\"language-javascript\"><code>CREATE TABLE  `user_uploads` (\r\n`upload_id` int(11) AUTO_INCREMENT PRIMARY KEY,\r\n`image_name` text,\r\n`user_id_fk` int(11),\r\n`created` int(11)\r\n)</code></pre>\r\n<p>&nbsp;</p>\r\n<p>ajaximage.php</p>\r\n<p>Contains PHP code. This script helps you to upload images into the uploads folder. Image file name renames into timestamp+session_id.extention&nbsp;</p>\r\n<pre class=\"language-php\"><code>&lt;?php\r\ninclude('db.php');\r\nsession_start();\r\n$session_id='1'; // User session id\r\n$path = \"uploads/\";\r\n\r\nfunction getExtension($str)\r\n{\r\n$i = strrpos($str,\".\");\r\nif (!$i)\r\n{\r\nreturn \"\";\r\n}\r\n$l = strlen($str) - $i;\r\n$ext = substr($str,$i+1,$l);\r\nreturn $ext;\r\n}\r\n\r\n$valid_formats = array(\"jpg\", \"png\", \"gif\", \"bmp\",\"jpeg\",\"PNG\",\"JPG\",\"JPEG\",\"GIF\",\"BMP\");\r\nif(isset($_POST) and $_SERVER['REQUEST_METHOD'] == \"POST\")\r\n{\r\n$name = $_FILES['photoimg']['name'];\r\n$size = $_FILES['photoimg']['size'];\r\nif(strlen($name))\r\n{\r\n$ext = getExtension($name);\r\nif(in_array($ext,$valid_formats))\r\n{\r\nif($size&lt;(1024*1024)) // Image size max 1 MB\r\n{\r\n$actual_image_name = time().$session_id.\".\".$ext;\r\n$tmp = $_FILES['photoimg']['tmp_name'];\r\nif(move_uploaded_file($tmp, $path.$actual_image_name))\r\n{\r\n//Insert upload image files names into user_uploads table\r\nmysqli_query($db,\"INSERT INTO user_uploads(image_name,user_id_fk,created) VALUES('$image_name','$session_id','$time')\");\r\necho \"&lt;img src='uploads/\".$actual_image_name.\"' class='preview'&gt;\";\r\n}\r\nelse\r\necho \"failed\";\r\n}\r\nelse\r\necho \"Image file size max 1 MB\"; \r\n}\r\nelse\r\necho \"Invalid file format..\"; \r\n}\r\nelse\r\necho \"Please select image..!\";\r\nexit;\r\n}\r\n?&gt;\r\n</code></pre>\r\n<p>&nbsp;</p>\r\n<p>db.php</p>\r\n<p>Database configuration file, modify username, password and database values.</p>\r\n<pre class=\"language-php\"><code>&lt;?php\r\ndefine('DB_SERVER', 'localhost');\r\ndefine('DB_USERNAME', 'username');\r\ndefine('DB_PASSWORD', 'password');\r\ndefine('DB_DATABASE', 'database');\r\n$db = mysqli_connect(DB_SERVER,DB_USERNAME,DB_PASSWORD,DB_DATABASE);\r\n?&gt;</code></pre>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/563104bb-488d-4ac1-90f4-60640a28e896_image-upload.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"implementing-multiple-ajax-image-upload-without-refreshing-page-using-jquery","tags":[{"name":"php","slug":"php"},{"name":"ajax","slug":"ajax"}],"recommendations":[{"id":520,"title":"Implementing Multiple Ajax Image Upload without Refreshing Page using Jquery.","imageUrl":"563104bb-488d-4ac1-90f4-60640a28e896_image-upload.jpg","dateCreated":"2019-08-30T07:00:12.515Z","dateModified":"2019-08-30T07:00:26.077Z","contributedBy":"AskGif","content":"Today I am presenting the most important social networking feature called multiple ajax image upload without refreshing the page using jquery and PHP. We just modified few lines of code in jqery.form.js plugin and renamed that to jquery.wallform.js. This feature is one of the key feature in Wall ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/563104bb-488d-4ac1-90f4-60640a28e896_image-upload.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"php","slug":"php"},{"name":"ajax","slug":"ajax"}],"slug":"implementing-multiple-ajax-image-upload-without-refreshing-page-using-jquery","total":0},{"id":422,"title":"Adding Facebook Like Profile Edit using Jquery","imageUrl":"d498d535-cde4-4f36-8f9e-2f4f51bbf4a4_facebookprofile.jpg","dateCreated":"2019-08-16T09:51:32.537Z","dateModified":"2019-08-16T09:52:08.908Z","contributedBy":"AskGif","content":"This post is very special Facebook-like profile edit with jquery, ajax and PHP. Why special before I was thinking this is a little difficult but I had developed in just 5 minutes using jquery and PHP. Use this and enrich your web applications.\r\n&nbsp;\r\nDatabase Design\r\nuser t","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/d498d535-cde4-4f36-8f9e-2f4f51bbf4a4_facebookprofile.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"jquery","slug":"jquery"},{"name":"php","slug":"php"}],"slug":"adding-facebook-like-profile-edit-using-jquery","total":0},{"id":419,"title":"Efficient Loading of Banner Advertisements with Jquery","imageUrl":"786806dd-86d7-4ea8-b0ff-953717fbf94b_browserloading.jpg","dateCreated":"2019-08-14T10:01:13.815Z","dateModified":"2019-08-14T10:01:26.822Z","contributedBy":"AskGif","content":"Banner advertisements eating your web page loading time? Take a look at this post. how to display advertisiment blocks after loading the main content block with jquery. It is very simple ajax implementation with jquery. Use it increase your web project loading speed.\r\nContent block loading","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/786806dd-86d7-4ea8-b0ff-953717fbf94b_browserloading.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"php","slug":"php"},{"name":"jquery","slug":"jquery"}],"slug":"efficient-loading-of-banner-advertisements-with-jquery","total":0},{"id":318,"title":"Backing up and restoring MongoDB databases using PHP","imageUrl":"9e841dcb-b8f8-4ceb-8768-55af00c75ada_mongodb.jpg","dateCreated":"2019-03-23T17:47:30.132Z","dateModified":"2019-03-23T17:47:46.726Z","contributedBy":"AskGif","content":"Dumping a MongoDB database is done using the &ldquo;mongodump&rdquo; utility in the command prompt. This dump creates a binary export of the database. This export can be restored using the &ldquo;mongorestore&rdquo; utility.\r\n&nbsp;\r\nA basic dump of a local MongoDB database can be c","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/9e841dcb-b8f8-4ceb-8768-55af00c75ada_mongodb.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"mongodb","slug":"mongodb"},{"name":"php","slug":"php"}],"slug":"backing-up-and-restoring-mongodb-databases-using-php","total":0}]}