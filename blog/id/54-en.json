{"id":54,"title":"How to find Nth Number in Catalan Numbers?","imageUrl":"2ed2105f-3361-4721-9bdc-473619371a14_catalan-numbers.jpg","dateCreated":"2018-07-30T10:37:06.172Z","dateModified":"2018-07-30T10:38:35.824Z","contributedBy":"AskGif","content":"<p>In combinatorial mathematics, the Catalan numbers form a sequence of natural numbers that occur in various counting problems, often involving recursively-defined objects. They are named after the Belgian mathematician Eug&egrave;ne Charles Catalan (1814&ndash;1894).</p>\r\n<p>The first Catalan numbers for n = 0, 1, 2, 3, &hellip; are</p>\r\n<p>1, 1, 2, 5, 14, 42, 132, 429, 1430, 4862, 16796, 58786, 208012, 742900, 2674440, 9694845, 35357670, 129644790, 477638700, 1767263190, 6564120420, 24466267020, 91482563640, 343059613650, 1289904147324, 4861946401452, &hellip; (sequence A000108 in the OEIS).</p>\r\n<p>&nbsp;</p>\r\n<p>Recursive Approach:</p>\r\n<pre class=\"language-java\"><code>package dp;\r\n\r\npublic class CatalanNumbers {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tint n = 10;\r\n\t\t\r\n\t\tlong startTime = System.nanoTime();\r\n\t\t\r\n\t\tSystem.out.println(FindCatalanNumber(n));\r\n\r\n\t\tlong endTime   = System.nanoTime();\r\n\t\tlong totalTime = endTime - startTime;\r\n\t\tSystem.out.println(\"Total Time (nanoseconds) : \" + (totalTime));\r\n\t}\r\n\r\n\tprivate static int FindCatalanNumber(int n) {\r\n\t\tif(n==0)\r\n\t\t\treturn 1;\r\n\t\tint sum = 0;\r\n\t\tfor(int i=1;i&lt;=n;i++)\r\n\t\t\tsum += FindCatalanNumber(i-1) * FindCatalanNumber(n-i);\r\n\t\t\r\n\t\treturn sum;\r\n\t}\r\n\r\n}\r\n</code></pre>\r\n<pre class=\"language-markup\"><code>output:\r\n\r\n16796\r\nTotal Time (nanoseconds) : 758183\r\n</code></pre>\r\n<p>&nbsp;</p>\r\n<p>The time complexity of the above solution is O(4^n).</p>\r\n<p>&nbsp;</p>\r\n<p>Can we do it more efficiently?</p>\r\n<p>Yes, By using Dynamic programming.</p>\r\n<pre class=\"language-java\"><code>package dp;\r\n\r\npublic class CatalanNumbers {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tint n = 10;\r\n\t\t\r\n\t\tlong startTime = System.nanoTime();\r\n\t\t\r\n\t\tSystem.out.println(FindCatalanNumber(n));\r\n\r\n\t\tlong endTime   = System.nanoTime();\r\n\t\tlong totalTime = endTime - startTime;\r\n\t\tSystem.out.println(\"Total Time (nanoseconds) : \" + (totalTime));\r\n\t}\r\n\r\n\tstatic int[] dp = new int[15]; //currently expecting only 15 result items. \r\n\t\t\t\t\t\t\t//increase the size if more is required.\r\n\tprivate static int FindCatalanNumber(int n) {\r\n\t\tif(n==0) {\r\n\t\t\tdp[0] = 1;\r\n\t\t\treturn dp[0];\r\n\t\t}\r\n\t\t\t\r\n\t\tif(dp[n] != 0)\r\n\t\t\treturn dp[n];\r\n\t\t\r\n\t\tint sum = 0;\r\n\t\tfor(int i=1;i&lt;=n;i++)\r\n\t\t\tsum += FindCatalanNumber(i-1) * FindCatalanNumber(n-i);\r\n\t\t\r\n\t\tdp[n] = sum;\r\n\t\treturn dp[n];\r\n\t}\r\n\r\n}\r\n</code></pre>\r\n<pre class=\"language-markup\"><code>16796\r\nTotal Time (nanoseconds) : 267705\r\n</code></pre>\r\n<p>The time complexity of this implementation is O(n^2) because to compute CatalanNumber(n), we need to compute all of the CatalanNumber(i) values between ) and n-1, and each one will be computed exactly once, in linear time.</p>\r\n<p>&nbsp;</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/2ed2105f-3361-4721-9bdc-473619371a14_catalan-numbers.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"how-to-find-nth-number-in-catalan-numbers","tags":[{"name":"recursion","slug":"recursion"},{"name":"java","slug":"java"},{"name":"questions","slug":"questions"},{"name":"interview","slug":"interview"},{"name":"dynamic-programming","slug":"dynamic-programming"}],"recommendations":[{"id":1700,"title":"Asynchronism Tutorial","imageUrl":"icon_0b59af20-c986-4d3f-b12b-304dc3797df3.png","dateCreated":"2020-11-20T07:45:02.912Z","dateModified":"2020-11-20T07:45:07.976Z","contributedBy":"sumitc91","content":"Asynchronous workflows help reduce request times for expensive operations that would otherwise be performed in-line. They can also help by doing time-consuming work in advance, such as periodic aggregation of data.\nMessage queues<br />Message queues receive, hold, and deliver messages. If ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/0b59af20-c986-4d3f-b12b-304dc3797df3.png","category":{"name":"tutorials","slug":"tutorials"},"tags":[{"name":"interview","slug":"interview"}],"slug":"asynchronism-tutorial","total":0},{"id":1685,"title":"How to Design the Twitter timeline and search","imageUrl":"icon_4cffb0b1-c317-4027-9ff2-188ac3240e74.jpg","dateCreated":"2020-11-20T06:38:46.064Z","dateModified":"2020-11-20T06:39:08.542Z","contributedBy":"sumitc91","content":"Design the Facebook feed and Design Facebook search are similar questions.\nStep 1: Outline use cases and constraints<br />Gather requirements and scope the problem. Ask questions to clarify use cases and constraints. Discuss assumptions.\nWithout an interviewer to address clarifying ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/4cffb0b1-c317-4027-9ff2-188ac3240e74.jpg","category":{"name":"tutorials","slug":"tutorials"},"tags":[{"name":"design","slug":"design"},{"name":"interview","slug":"interview"},{"name":"system-design","slug":"system-design"},{"name":"twitter","slug":"twitter"}],"slug":"how-to-design-the-twitter-timeline-and-search","total":0},{"id":98,"title":"What is a Stack?","imageUrl":"9e1a11b2-69e8-4626-ac63-8599d6c4f440_Lifo_stack.png","dateCreated":"2018-08-08T09:36:21.356Z","dateModified":"2018-08-08T09:36:29.634Z","contributedBy":"AskGif","content":"A stack is a simple data structure used for storing data (similar to Linked Lists). In stack the order in which the data arrives is important. The pile of plates of a cafeteria is a good example of a stack. The plates are added to the stack as they are cleaned. They are placed on the top. When a ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/9e1a11b2-69e8-4626-ac63-8599d6c4f440_Lifo_stack.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"interview","slug":"interview"},{"name":"stack","slug":"stack"},{"name":"questions","slug":"questions"}],"slug":"what-is-a-stack","total":0},{"id":1,"title":"How to install java on EC2 Ubuntu 16-04","imageUrl":"d11fed6a-e800-4779-8cee-f7f5c8c42ee8_00_lead_image_java_in_ubuntu.png","dateCreated":"2018-06-20T13:02:11.29Z","dateModified":"2018-07-07T15:23:51.439Z","contributedBy":"AskGif","content":"This blog is in continuation to blog&nbsp;<a href=\"../../../../../blog/3/how-to-create-ec2-instance-on-aws-free-tier-plan/?lang=en\" target=\"_blank\" rel=\"noopener\">How to create EC2 instance on AWS Free Tier plan.</a>&nbsp;if you missed please revisit.\r\nFirst we need to get an Ubuntu (16.04","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/d11fed6a-e800-4779-8cee-f7f5c8c42ee8_00_lead_image_java_in_ubuntu.png","category":{"name":"tutorials","slug":"tutorials"},"tags":[{"name":"jre","slug":"jre"},{"name":"jdk","slug":"jdk"},{"name":"java","slug":"java"}],"slug":"how-to-install-java-on-ec2-ubuntu-16-04","total":0}]}