{"id":68,"title":"फैक्टरी पैटर्न क्या है?","imageUrl":"e2172f61-aced-4a65-a785-9978cd5ffdb7_factory-pattern.jpg","dateCreated":"2018-08-01T12:47:00.64Z","dateModified":"2018-08-01T17:19:17.793Z","contributedBy":"AskGif","content":"<p>In class-based programming, the factory method pattern is a creational pattern that uses factory methods to deal with the problem of creating objects without having to specify the exact class of the object that will be created. This is done by creating objects by calling a factory method&mdash;either specified in an interface and implemented by child classes, or implemented in a base class and optionally overridden by derived classes&mdash;rather than by calling a constructor.</p>\r\n<p>&nbsp;</p>\r\n<p>The Factory Method design pattern is one of the twenty-three well-known \"Gang of Four\" design patterns that describe how to solve recurring design problems to design flexible and reusable object-oriented software, that is, objects that are easier to implement, change, test, and reuse.</p>\r\n<p>&nbsp;</p>\r\n<p>The Factory Method design pattern solves problems like:</p>\r\n<p>&nbsp;</p>\r\n<p>How can an object be created so that subclasses can redefine which class to instantiate?</p>\r\n<p>How can a class defer instantiation to subclasses?</p>\r\n<p>Creating an object directly within the class that requires (uses) the object is inflexible because it commits the class to a particular object and makes it impossible to change the instantiation independently from (without having to change) the class.</p>\r\n<p>&nbsp;</p>\r\n<p>The Factory Method design pattern describes how to solve such problems:</p>\r\n<p>&nbsp;</p>\r\n<p>Define a separate operation (factory method) for creating an object.</p>\r\n<p>Create an object by calling a factory method.</p>\r\n<p>This enables writing of subclasses to change the way an object is created (to redefine which class to instantiate).</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/e2172f61-aced-4a65-a785-9978cd5ffdb7_factory-pattern.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"what-is-factory-pattern","tags":[{"name":"creational-pattern","slug":"creational-pattern"},{"name":"design-patterns","slug":"design-patterns"},{"name":"प्रशन","slug":"questions"},{"name":"interview","slug":"interview"}],"recommendations":[{"id":1688,"title":"सामाजिक नेटवर्क के लिए डेटा संरचनाओं को कैसे डिज़ाइन करें","imageUrl":"icon_031621dc-30c0-4e0d-ba31-1f20a3884f5c.jpg","dateCreated":"2020-11-20T06:57:07.127Z","dateModified":"2020-11-20T06:57:27.446Z","contributedBy":"sumitc91","content":"चरण 1: मामलों और बाधाओं का उपयोग करें<br />आवश्यकताओं को इकट्ठा करें और समस्या को हल करें। उपयोग के मामलों और बाधाओं को स्पष्ट करने के लिए प्रश्न पूछें। मान्यताओं पर चर्चा करें।\nसाक्षात्कारकर्ता के बिना स्पष्ट प्रश्नों को संबोधित करने के लिए, हम कुछ उपयोग मामलों और बाधाओं को परिभाषित करेंग","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/031621dc-30c0-4e0d-ba31-1f20a3884f5c.jpg","category":{"name":"शिक्षण","slug":"tutorials"},"tags":[{"name":"डिज़ाइन","slug":"design"},{"name":"interview","slug":"interview"},{"name":"प्रणाली-की-रूपरेखा","slug":"system-design"}],"slug":"how-to-design-the-data-structures-for-a-social-network","total":0},{"id":76,"title":"प्रॉक्सी पैटर्न क्या है?","imageUrl":"aaeafdf4-c3d7-4245-809f-7be5d5a4ac59_Proxy_Pattern.jpg","dateCreated":"2018-08-01T16:04:57.813Z","dateModified":"2018-08-01T17:22:28.188Z","contributedBy":"AskGif","content":"In computer programming, the proxy pattern is a software design pattern.\r\n&nbsp;\r\nA proxy, in its most general form, is a class functioning as an interface to something else. The proxy could interface to anything: a network connection, a large object in memory, a file, or some other","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/aaeafdf4-c3d7-4245-809f-7be5d5a4ac59_Proxy_Pattern.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"प्रशन","slug":"questions"},{"name":"design-patterns","slug":"design-patterns"},{"name":"structural-pattern","slug":"structural-pattern"},{"name":"interview","slug":"interview"}],"slug":"what-is-proxy-pattern","total":0},{"id":59,"title":"How to Solve Coin Change Problem using Dynamic Programming for Minimum number of ways possible?","imageUrl":"450a3f20-633e-4f13-aa8e-dce34b85cf72_make-change.png","dateCreated":"2018-07-31T09:15:15.694Z","dateModified":"2018-07-31T09:15:30.599Z","contributedBy":"AskGif","content":"Coin Change Problem is also known as Making Change Problem.\r\nThe change-making problem, also known as the minimum coin change problem, addresses the question of finding the minimum number of coins (of certain denominations) that add up to a given amount of money. It is a knapsack type prob","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/450a3f20-633e-4f13-aa8e-dce34b85cf72_make-change.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"recursion","slug":"recursion"},{"name":"java","slug":"java"},{"name":"dynamic-programming","slug":"dynamic-programming"},{"name":"प्रशन","slug":"questions"},{"name":"interview","slug":"interview"}],"slug":"how-to-solve-coin-change-problem-using-dynamic-programming-for-minimum-number-of-ways-possible","total":0},{"id":17,"title":"Write a Simple Hello World Program in JAVA.","imageUrl":"f91c0323-afd7-4b3e-aa1f-71c79e9913f2_hello-world-java.png","dateCreated":"2018-07-12T06:44:09.184Z","dateModified":"2018-07-12T06:44:59.673Z","contributedBy":"AskGif","content":"Writing a simple hello world programm in java.&nbsp;Java is a general-purpose computer-programming language that is concurrent, class-based, object-oriented, and specifically designed to have as few implementation dependencies as possible. It is intended to let application developers \"write once,","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/f91c0323-afd7-4b3e-aa1f-71c79e9913f2_hello-world-java.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"interview","slug":"interview"},{"name":"java","slug":"java"}],"slug":"write-a-simple-hello-world-program-in-java","total":0}]}