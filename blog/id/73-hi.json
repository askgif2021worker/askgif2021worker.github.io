{"id":73,"title":"टेम्पलेट पैटर्न क्या है?","imageUrl":"1573c83b-c91b-4944-be45-b6b2f866e450_Template_Method.png","dateCreated":"2018-08-01T15:41:25.221Z","dateModified":"2018-08-02T10:59:06.373Z","contributedBy":"AskGif","content":"<p>In software engineering, the template method pattern is a behavioural design pattern that defines the program skeleton of an algorithm in an operation, deferring some steps to subclasses. It lets one redefine certain steps of an algorithm without changing the algorithm's structure. The template method is one of the twenty-three well-known patterns described in the \"Gang of Four\" book Design Patterns.</p>\r\n<p>&nbsp;</p>\r\n<p>This pattern has two main parts, and typically uses object-oriented programming:</p>\r\n<p>&nbsp;</p>\r\n<p>The \"template method\", generally implemented as a base class (possibly an abstract class), which contains shared code and parts of the overall algorithm which is invariant. The template ensures that the overarching algorithm is always followed. In this class, \"variant\" portions are given a default implementation or none at all.</p>\r\n<p>Concrete implementations of the abstract class, which fill in the empty or \"variant\" parts of the \"template\" with specific algorithms that vary from implementation to implementation.</p>\r\n<p>At run-time, a concrete class is instantiated. The main method inherited from the base class is called, which they may call other methods defined by both the base class and subclasses. This performs the overall algorithm in the same steps every time, but the details of some steps depend on which subclass was instantiated.</p>\r\n<p>&nbsp;</p>\r\n<p>This pattern is an example of inversion of control because the high-level code no longer determines what algorithms to run; a lower-level algorithm is instead selected at run-time.</p>\r\n<p>&nbsp;</p>\r\n<p>The template method pattern thus manages the larger picture of task semantics and more refined implementation details of selection and sequence of methods. This larger picture calls abstract and non-abstract methods for the task at hand. The non-abstract methods are completely controlled by the template method, but the abstract methods, implemented in subclasses, provide the pattern's expressive power and degree of freedom. Template method's abstract class may also define hook methods that may be overridden by subclasses. These have a no-op implementation in the abstract class but provide a \"hook\" on which to \"hang\" implementations.</p>\r\n<p>&nbsp;</p>\r\n<p>The template method pattern occurs frequently, at least in its simplest case, where a method calls only one abstract method when using object-oriented languages. If a software writer uses a polymorphic method at all, this design pattern may be a rather natural consequence. This is because a method of calling an abstract or polymorphic function is simply the reason for being of the abstract or polymorphic method. The template method pattern may be used to add immediate present value to the software or with a vision for enhancements in the future.</p>\r\n<p>source: wiki</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/1573c83b-c91b-4944-be45-b6b2f866e450_Template_Method.png","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"what-is-template-pattern","tags":[{"name":"प्रशन","slug":"questions"},{"name":"behavioral-patterns","slug":"behavioral-patterns"},{"name":"interview","slug":"interview"},{"name":"design-patterns","slug":"design-patterns"}],"recommendations":[{"id":1694,"title":"डोमेन नाम प्रणाली (DNS) क्या है?","imageUrl":"icon_5d73c05a-94c0-45e6-b648-a89025ffe4e8.png","dateCreated":"2020-11-20T07:33:27.184Z","dateModified":"2020-11-20T07:33:33.359Z","contributedBy":"sumitc91","content":"एक डोमेन नेम सिस्टम (डीएनएस) एक डोमेन नाम जैसे कि www.example.com से एक आईपी पते पर अनुवाद करता है।\nडीएनएस पदानुक्रमित है, शीर्ष स्तर पर कुछ आधिकारिक सर्वरों के साथ। आपका राउटर या ISP जानकारी देता है कि लुकअप करते समय कौन से DNS सर्वर से संपर्क करें। निचले स्तर के DNS सर्वर कैश मैपिंग, जो ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/5d73c05a-94c0-45e6-b648-a89025ffe4e8.png","category":{"name":"शिक्षण","slug":"tutorials"},"tags":[{"name":"interview","slug":"interview"}],"slug":"what-is-domain-name-system-dns","total":0},{"id":76,"title":"प्रॉक्सी पैटर्न क्या है?","imageUrl":"aaeafdf4-c3d7-4245-809f-7be5d5a4ac59_Proxy_Pattern.jpg","dateCreated":"2018-08-01T16:04:57.813Z","dateModified":"2018-08-01T17:22:28.188Z","contributedBy":"AskGif","content":"In computer programming, the proxy pattern is a software design pattern.\r\n&nbsp;\r\nA proxy, in its most general form, is a class functioning as an interface to something else. The proxy could interface to anything: a network connection, a large object in memory, a file, or some other","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/aaeafdf4-c3d7-4245-809f-7be5d5a4ac59_Proxy_Pattern.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"प्रशन","slug":"questions"},{"name":"design-patterns","slug":"design-patterns"},{"name":"structural-pattern","slug":"structural-pattern"},{"name":"interview","slug":"interview"}],"slug":"what-is-proxy-pattern","total":0},{"id":20,"title":"Coin Change Problem Algorithm Solution","imageUrl":"ceddc0d4-c5a2-46bd-b91e-f5413ff64816_Coin-Change-Problem.jpg","dateCreated":"2018-07-12T13:29:09.634Z","dateModified":"2018-07-12T13:29:09.634Z","contributedBy":"AskGif","content":"The change-making problem, also known as minimum coin change problem, addresses the question of finding the minimum number of coins (of certain denominations) that add up to a given amount of money refer coin change problem. It is a knapsack type problem, and has applications wider than just curr","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/ceddc0d4-c5a2-46bd-b91e-f5413ff64816_Coin-Change-Problem.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"dynamic-programming","slug":"dynamic-programming"},{"name":"java","slug":"java"},{"name":"algorithm","slug":"algorithm"},{"name":"interview","slug":"interview"}],"slug":"coin-change-problem-algorithm-solution","total":0},{"id":17,"title":"Write a Simple Hello World Program in JAVA.","imageUrl":"f91c0323-afd7-4b3e-aa1f-71c79e9913f2_hello-world-java.png","dateCreated":"2018-07-12T06:44:09.184Z","dateModified":"2018-07-12T06:44:59.673Z","contributedBy":"AskGif","content":"Writing a simple hello world programm in java.&nbsp;Java is a general-purpose computer-programming language that is concurrent, class-based, object-oriented, and specifically designed to have as few implementation dependencies as possible. It is intended to let application developers \"write once,","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/f91c0323-afd7-4b3e-aa1f-71c79e9913f2_hello-world-java.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"interview","slug":"interview"},{"name":"java","slug":"java"}],"slug":"write-a-simple-hello-world-program-in-java","total":0}]}