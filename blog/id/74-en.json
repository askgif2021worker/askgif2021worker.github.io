{"id":74,"title":"What is Iterator pattern?","imageUrl":"2ae1cc9a-b9ca-4dd5-8faf-ae38f2bdd6c3_Iterator-pattern.png","dateCreated":"2018-08-01T15:49:45.656Z","dateModified":"2018-08-01T17:23:52.861Z","contributedBy":"AskGif","content":"<p>In object-oriented programming, the iterator pattern is a design pattern in which an iterator is used to traverse a container and access the container's elements. The iterator pattern decouples algorithms from containers; in some cases, algorithms are necessarily container-specific and thus cannot be decoupled.</p>\r\n<p>&nbsp;</p>\r\n<p>For example, the hypothetical algorithm SearchForElement can be implemented generally using a specified type of iterator rather than implementing it as a container-specific algorithm. This allows SearchForElement to be used on any container that supports the required type of iterator.</p>\r\n<p>&nbsp;</p>\r\n<p>The Iterator design pattern is one of the twenty-three well-known GoF design patterns that describe how to solve recurring design problems to design flexible and reusable object-oriented software, that is, objects that are easier to implement, change, test, and reuse.</p>\r\n<p>&nbsp;</p>\r\n<p>What problems can the Iterator design pattern solve?</p>\r\n<p>&nbsp;</p>\r\n<p>The elements of an aggregate object should be accessed and traversed without exposing its representation (data structures).</p>\r\n<p>New traversal operations should be defined for an aggregate object without changing its interface.</p>\r\n<p>Defining access and traversal operations in the aggregate interface is inflexible because it commits the aggregate to particular access and traversal operations and makes it impossible to add new operations later without having to change the aggregate interface.</p>\r\n<p>&nbsp;</p>\r\n<p>What solution does the Iterator design pattern describe?</p>\r\n<p>&nbsp;</p>\r\n<p>Define a separate (iterator) object that encapsulates accessing and traversing an aggregate object.</p>\r\n<p>Clients use an iterator to access and traverse an aggregate without knowing its representation (data structures).</p>\r\n<p>Different iterators can be used to access and traverse an aggregate in different ways.&nbsp;</p>\r\n<p>New access and traversal operations can be defined independently by defining new iterators.</p>\r\n<p>source: wiki</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/2ae1cc9a-b9ca-4dd5-8faf-ae38f2bdd6c3_Iterator-pattern.png","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"what-is-iterator-pattern","tags":[{"name":"questions","slug":"questions"},{"name":"design-patterns","slug":"design-patterns"},{"name":"behavioral-patterns","slug":"behavioral-patterns"},{"name":"interview","slug":"interview"}],"recommendations":[{"id":98,"title":"What is a Stack?","imageUrl":"9e1a11b2-69e8-4626-ac63-8599d6c4f440_Lifo_stack.png","dateCreated":"2018-08-08T09:36:21.356Z","dateModified":"2018-08-08T09:36:29.634Z","contributedBy":"AskGif","content":"A stack is a simple data structure used for storing data (similar to Linked Lists). In stack the order in which the data arrives is important. The pile of plates of a cafeteria is a good example of a stack. The plates are added to the stack as they are cleaned. They are placed on the top. When a ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/9e1a11b2-69e8-4626-ac63-8599d6c4f440_Lifo_stack.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"interview","slug":"interview"},{"name":"stack","slug":"stack"},{"name":"questions","slug":"questions"}],"slug":"what-is-a-stack","total":0},{"id":90,"title":"How to detect and print the start of a Loop in a circular Linked List?","imageUrl":"af132682-62fb-4cb4-b899-5527cc0e05d0_circular-loop.jpg","dateCreated":"2018-08-07T11:48:46.585Z","dateModified":"2018-08-07T11:48:59.874Z","contributedBy":"AskGif","content":"So the question given is to check if the Given Linked list is having a cycle or Not, and if there is a cycle then we need to print the start of the Loop in a cyclic linked list.\r\nWe will be using Floyd Cycle to find the solution of the given problem.\r\nIt uses 2 pointers moving at di","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/af132682-62fb-4cb4-b899-5527cc0e05d0_circular-loop.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"interview","slug":"interview"},{"name":"questions","slug":"questions"},{"name":"java","slug":"java"},{"name":"linked-list","slug":"linked-list"}],"slug":"how-to-detect-and-print-the-start-of-a-loop-in-a-circular-linked-list","total":0},{"id":39,"title":"Find total ways to reach the nth stair using step 1, 2 or 3.","imageUrl":"c6232f16-4b85-4461-b18d-31e1c54de4a6_frog.jpg","dateCreated":"2018-07-20T09:06:49.744Z","dateModified":"2018-07-20T09:07:07.17Z","contributedBy":"AskGif","content":"A frog is jumping up a staircase with n steps and can hop either 1 step, 2 steps, or 3 steps at a time.\r\nImplement a method to count how many possible ways the frog can run up the stairs.\r\nWe will be using recursive approach first to solve this problem\r\n<pre class=\"language-java","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/c6232f16-4b85-4461-b18d-31e1c54de4a6_frog.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"dynamic-programming","slug":"dynamic-programming"},{"name":"recursion","slug":"recursion"},{"name":"algorithm","slug":"algorithm"},{"name":"java","slug":"java"},{"name":"interview","slug":"interview"}],"slug":"find-total-ways-to-reach-the-nth-stair-using-step-1-2-or-3","total":0},{"id":17,"title":"Write a Simple Hello World Program in JAVA.","imageUrl":"f91c0323-afd7-4b3e-aa1f-71c79e9913f2_hello-world-java.png","dateCreated":"2018-07-12T06:44:09.184Z","dateModified":"2018-07-12T06:44:59.673Z","contributedBy":"AskGif","content":"Writing a simple hello world programm in java.&nbsp;Java is a general-purpose computer-programming language that is concurrent, class-based, object-oriented, and specifically designed to have as few implementation dependencies as possible. It is intended to let application developers \"write once,","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/f91c0323-afd7-4b3e-aa1f-71c79e9913f2_hello-world-java.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"interview","slug":"interview"},{"name":"java","slug":"java"}],"slug":"write-a-simple-hello-world-program-in-java","total":0}]}