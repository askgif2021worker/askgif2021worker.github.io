{"id":85,"title":"Discuss Towers of Hanoi Puzzle.","imageUrl":"c0163425-be46-4869-b182-865969bc6dee_tower-of-hanoi.gif","dateCreated":"2018-08-06T08:19:23.128Z","dateModified":"2018-08-06T08:19:38.491Z","contributedBy":"AskGif","content":"<p>The Tower of Hanoi is a mathematical puzzle.&nbsp; It consists of three rods and a number of disks of different sizes which can slide onto any rod. The puzzle starts with the disks on one rod in ascending order of size the smallest at the top, thus making a conical shape. The objective of the puzzle is to move the entire stack to another rod, satisfying the following rules:</p>\r\n<p>- Only one disk may be moved at a time.</p>\r\n<p>- Each move consists of taking the upper disk from one of the rods and sliding it onto another rod, on top of the other disks that may already be present on that rod.</p>\r\n<p>- No disk may be placed on top of a smaller disk.</p>\r\n<p>&nbsp;</p>\r\n<p>Algorithm</p>\r\n<p>- move the top n-1 disks from Source to Auxiliary tower,</p>\r\n<p>- Move the nth disk from Source to Destination tower,</p>\r\n<p>- Move the (n-1)th disks from Auxiliary tower to Destination tower.</p>\r\n<p>- Transferring the top (n-1) disks from Source to Auxiliary tower can again be thought of as a fresh problem and can be solved in the same manner. Once we solve Tower&nbsp;of Hanoi with three disks, we can solve it with any number of disks with the above algorithm.</p>\r\n<pre class=\"language-java\"><code>void TowersOfHanoi(int n, char frompeg, char topeg, char auxpeg){\r\n    \t// If only 1 disk then move and return\r\n    \tif(n == 1) {\r\n    \t\tSystem.out.println(\"Move disk 1 from peg \"+ frompeg+\" to peg \"+ topeg);\r\n    \t\treturn;\r\n    \t}\r\n    \t// Move top (n-1) disks from A to B, using C as Auxiliary\r\n    \tTowersOfHanoi(n-1, frompeg, auxpeg, topeg);\r\n    \t\r\n    \t//Move remaining disks from A to C\r\n    \tSystem.out.println(\"Move disk from peg \"+frompeg+\" to peg \"+ topeg);\r\n    \t\r\n    \t// Move (n-1) disks from B to C using A as Auxiliary\r\n    \tTowersOfHanoi(n-1, auxpeg, topeg, frompeg);\r\n    }</code></pre>\r\n<p>source: Data Structures and Algorithms Made Easy in Java ( By Narasimha Karumanchi )</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/c0163425-be46-4869-b182-865969bc6dee_tower-of-hanoi.gif","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"discuss-towers-of-hanoi-puzzle","tags":[{"name":"interview","slug":"interview"},{"name":"recursion","slug":"recursion"},{"name":"java","slug":"java"},{"name":"questions","slug":"questions"}],"recommendations":[{"id":104,"title":"How to implement InOrder Traversal in Binary Tree?","imageUrl":"bf7ea477-0b3a-4e79-9923-feb2fab2a727_inorder_traversal in Java.jpg","dateCreated":"2018-08-09T14:17:47.233Z","dateModified":"2018-08-09T14:28:44.293Z","contributedBy":"AskGif","content":"The Technique for traversal in an Inorder is slightly different from what we were doing in PreOrder Traversal. Here we go through left node, then data and then the right node.\r\nIn an InOrder traversal, the root is visited between the subtrees. InOrder traversal is defined as follows:\r\n","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/bf7ea477-0b3a-4e79-9923-feb2fab2a727_inorder_traversal in Java.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"traversal","slug":"traversal"},{"name":"interview","slug":"interview"},{"name":"questions","slug":"questions"},{"name":"recursion","slug":"recursion"},{"name":"inorder","slug":"inorder"},{"name":"java","slug":"java"},{"name":"tree","slug":"tree"}],"slug":"how-to-implement-inorder-traversal-in-binary-tree","total":0},{"id":94,"title":"Check whether the given Linked List length is even or odd?","imageUrl":"c9526b27-eb8a-4d38-a1f2-66e2e9198224_Odd-Even-Linked-List.jpg","dateCreated":"2018-08-07T15:40:27.371Z","dateModified":"2018-08-07T15:40:35.099Z","contributedBy":"AskGif","content":"The question is to find if the given linked list length is even or odd in optimum time. We will use a&nbsp;fast pointer, i.e 2x pointer. the fast pointer moves two nodes at a time. In the end, we will either be having the node as Null or the Node will be the last node in the Linked list. if the n","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/c9526b27-eb8a-4d38-a1f2-66e2e9198224_Odd-Even-Linked-List.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"questions","slug":"questions"},{"name":"interview","slug":"interview"},{"name":"linked-list","slug":"linked-list"},{"name":"java","slug":"java"}],"slug":"check-whether-the-given-linked-list-length-is-even-or-odd","total":0},{"id":42,"title":"Calculate all Unique Path count can be taken by Robot.","imageUrl":"16fa179e-eb35-4230-8fbb-ac1d1325a150_robot_maze.png","dateCreated":"2018-07-20T11:03:59.177Z","dateModified":"2018-07-20T11:04:07.11Z","contributedBy":"AskGif","content":"A robot is located at the top-left corner of a m x n grid ( 'Start' ).\r\nThe robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid ( 'Finish' ).\r\nHow many are possible unique paths there?\r\nWe will be usi","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/16fa179e-eb35-4230-8fbb-ac1d1325a150_robot_maze.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"java","slug":"java"},{"name":"dynamic-programming","slug":"dynamic-programming"},{"name":"algorithm","slug":"algorithm"},{"name":"interview","slug":"interview"}],"slug":"calculate-all-unique-path-count-can-be-taken-by-robot","total":0},{"id":1,"title":"How to install java on EC2 Ubuntu 16-04","imageUrl":"d11fed6a-e800-4779-8cee-f7f5c8c42ee8_00_lead_image_java_in_ubuntu.png","dateCreated":"2018-06-20T13:02:11.29Z","dateModified":"2018-07-07T15:23:51.439Z","contributedBy":"AskGif","content":"This blog is in continuation to blog&nbsp;<a href=\"../../../../../blog/3/how-to-create-ec2-instance-on-aws-free-tier-plan/?lang=en\" target=\"_blank\" rel=\"noopener\">How to create EC2 instance on AWS Free Tier plan.</a>&nbsp;if you missed please revisit.\r\nFirst we need to get an Ubuntu (16.04","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/d11fed6a-e800-4779-8cee-f7f5c8c42ee8_00_lead_image_java_in_ubuntu.png","category":{"name":"tutorials","slug":"tutorials"},"tags":[{"name":"jre","slug":"jre"},{"name":"jdk","slug":"jdk"},{"name":"java","slug":"java"}],"slug":"how-to-install-java-on-ec2-ubuntu-16-04","total":0}]}