{"id":87,"title":"How to find Nth node from the end of a Linked List?","imageUrl":"d56c6c6f-abf1-425a-8c3b-d14b4068d305_find-nth-node.png","dateCreated":"2018-08-06T12:38:40.227Z","dateModified":"2018-08-06T12:38:49.993Z","contributedBy":"AskGif","content":"<p>Given a linked list, remove the nth node from the end of the list and return its head.</p>\r\n<p>For example,</p>\r\n<p>Given linked list: 1-&gt;2-&gt;3-&gt;4-&gt;5, and n = 2.</p>\r\n<p>After removing the second node from the end, the linked list becomes 1-&gt;2-&gt;3-&gt;5.</p>\r\n<p>Given n will always be valid.</p>\r\n<p>Try to do this in one pass.</p>\r\n<pre class=\"language-java\"><code>package askgif.linkedlist;\r\n\r\nclass ListNode{\r\n    public int data;\r\n    public ListNode next;\r\n};\r\n\r\npublic class NNodeFromLast {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\t\r\n        ListNode node1 = new ListNode();\r\n        ListNode node2 = new ListNode();\r\n        ListNode node3 = new ListNode();\r\n        ListNode node4 = new ListNode();\r\n        node1.data = 1;\r\n        node2.data = 2;\r\n        node3.data = 3;\r\n        node4.data = 4;\r\n        node1.next = node2;\r\n        node2.next = node3;\r\n        node3.next = node4;\r\n        node4.next = null;\r\n\t\t\r\n\t\tint n = 2;\r\n\t\tSystem.out.println(FindNNodeFromLast(node1,n));\r\n\t\t\r\n\r\n\t}\r\n\r\n\tprivate static int FindNNodeFromLast(ListNode ll, int num) {\r\n\t\t\r\n\t\tListNode temp = ll;\r\n\t\tint i = 0;\r\n\t\t\r\n\t\twhile(true){\r\n\t\t\tif(temp == null)\r\n\t\t\t\treturn 0;\r\n            if(i == num){\r\n            \tbreak;\r\n            }\r\n            ++i;\r\n            temp = temp.next; \r\n        }\r\n\t\twhile(true) {\r\n\t\t\tif(temp == null)\r\n\t\t\t\treturn ll.data;\r\n\t\t\ttemp = temp.next;\r\n\t\t\tll = ll.next;\r\n\t\t}\r\n\t}\r\n\r\n}\r\n</code></pre>\r\n<p>&nbsp;</p>\r\n<p>The time complexity of the above solution is O(n) as we are iterating through the linked list only once.</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/d56c6c6f-abf1-425a-8c3b-d14b4068d305_find-nth-node.png","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"how-to-find-nth-node-from-the-end-of-a-linked-list","tags":[{"name":"linked-list","slug":"linked-list"},{"name":"interview","slug":"interview"},{"name":"java","slug":"java"},{"name":"प्रशन","slug":"questions"}],"recommendations":[{"id":1483,"title":"Convert Binary Number in a Linked List to Integer - Linked List - Easy - LeetCode","imageUrl":"icon_f18ab3bf-13c9-4043-bee7-f4e1f8b0bc65.jpg","dateCreated":"2020-09-30T10:48:03.445Z","dateModified":"2020-09-30T10:48:19.512Z","contributedBy":"sumitc91","content":"Given head which is a reference node to a singly-linked list. The value of each node in the linked list is either 0 or 1. The linked list holds the binary representation of a number.\nReturn the decimal value of the number in the linked list.\n&nbsp;\nExample 1:\n<br />Inp","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/f18ab3bf-13c9-4043-bee7-f4e1f8b0bc65.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"linked-list","slug":"linked-list"}],"slug":"convert-binary-number-in-a-linked-list-to-integer-linked-list-easy-leetcode","total":0},{"id":161,"title":"How can I break out of nesting of loops in Java?","imageUrl":"dc2525c6-08ba-43b2-af49-7d03ef0f4b58_nested-loop.png","dateCreated":"2018-11-29T06:12:56.437Z","dateModified":"2019-03-21T19:13:25.096Z","contributedBy":"AskGif","content":"Am using two for loops but am stuck and I don't know how can I break out of both loops. I've looked at similar questions, but none concerns Java specifically. I couldn't apply these solutions because most used gotos.\r\nI don't want to put the inner loop in a different method.\r\nUpdate","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/dc2525c6-08ba-43b2-af49-7d03ef0f4b58_nested-loop.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"loop","slug":"loop"},{"name":"java","slug":"java"},{"name":"nested-loop","slug":"nested-loop"}],"slug":"how-can-i-break-out-of-nesting-of-loops-in-java","total":0},{"id":98,"title":"What is a Stack?","imageUrl":"9e1a11b2-69e8-4626-ac63-8599d6c4f440_Lifo_stack.png","dateCreated":"2018-08-08T09:36:21.356Z","dateModified":"2018-08-08T09:36:29.634Z","contributedBy":"AskGif","content":"A stack is a simple data structure used for storing data (similar to Linked Lists). In stack the order in which the data arrives is important. The pile of plates of a cafeteria is a good example of a stack. The plates are added to the stack as they are cleaned. They are placed on the top. When a ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/9e1a11b2-69e8-4626-ac63-8599d6c4f440_Lifo_stack.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"interview","slug":"interview"},{"name":"stack","slug":"stack"},{"name":"प्रशन","slug":"questions"}],"slug":"what-is-a-stack","total":0},{"id":1,"title":"EC2 उबंटू 16-04 पर जावा कैसे स्थापित करें","imageUrl":"d11fed6a-e800-4779-8cee-f7f5c8c42ee8_00_lead_image_java_in_ubuntu.png","dateCreated":"2018-06-20T13:02:11.29Z","dateModified":"2018-07-07T15:23:51.439Z","contributedBy":"AskGif","content":"यह ब्लॉग ब्लॉग के निरंतरता में है एडब्ल्यूएस फ्री टियर योजना पर ईसी 2 उदाहरण कैसे बनाएं। यदि आप चूक गए तो कृपया पुनरीक्षण करें। सबसे पहले हमें उबंटू (16.04) उदाहरण प्राप्त करने की आवश्यकता है। इसके लिए हम एडब्ल्यूएस कंसोल का उपयोग कर सकते हैं। एक बार ubuntu मशीन ऊपर है और चल रहा है निम्नलिखित दृष","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/d11fed6a-e800-4779-8cee-f7f5c8c42ee8_00_lead_image_java_in_ubuntu.png","category":{"name":"शिक्षण","slug":"tutorials"},"tags":[{"name":"jre","slug":"jre"},{"name":"jdk","slug":"jdk"},{"name":"java","slug":"java"}],"slug":"how-to-install-java-on-ec2-ubuntu-16-04","total":0}]}