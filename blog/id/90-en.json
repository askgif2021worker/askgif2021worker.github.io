{"id":90,"title":"How to detect and print the start of a Loop in a circular Linked List?","imageUrl":"af132682-62fb-4cb4-b899-5527cc0e05d0_circular-loop.jpg","dateCreated":"2018-08-07T11:48:46.585Z","dateModified":"2018-08-07T11:48:59.874Z","contributedBy":"AskGif","content":"<p>So the question given is to check if the Given Linked list is having a cycle or Not, and if there is a cycle then we need to print the start of the Loop in a cyclic linked list.</p>\r\n<p>We will be using Floyd Cycle to find the solution of the given problem.</p>\r\n<p>It uses 2 pointers moving at different speeds to walking the linked list. Once they enter the loop they are expected to meet, which denotes that there is a loop. This works because the only way a faster moving pointer would point to the same location as a slower moving pointer is if somehow the entire list or a part of it is circular.</p>\r\n<p>once we find the meeting point of slow and fast pointer we will point the slow pointer to head and will again run the loop, this time we will traverse both slow and fast pointer only one step at once.</p>\r\n<p>Java Solution of the above problem is given below:</p>\r\n<pre class=\"language-java\"><code>package askgif.linkedlist;\r\n\r\nclass ListNode{\r\n    public int data;\r\n    public ListNode next;\r\n};\r\n\r\npublic class CircularNodeExist {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\t\r\n        ListNode node1 = new ListNode();\r\n        ListNode node2 = new ListNode();\r\n        ListNode node3 = new ListNode();\r\n        ListNode node4 = new ListNode();\r\n        ListNode node5 = new ListNode();\r\n        ListNode node6 = new ListNode();\r\n        node1.data = 1;\r\n        node2.data = 2;\r\n        node3.data = 3;\r\n        node4.data = 4;\r\n        node5.data = 5;\r\n        node6.data = 6;\r\n        node1.next = node2;\r\n        node2.next = node3;\r\n        node3.next = node4;\r\n        node4.next = node5;\r\n        node5.next = node6;\r\n        node6.next = node3;\r\n\t\t\r\n\t\tSystem.out.println(GetMeetingNode(node1));\r\n\t\t\r\n\r\n\t}\r\n\r\n\tprivate static int GetMeetingNode(ListNode ll) {\r\n\t\t\r\n\t\tListNode slowPtr = ll;\r\n\t\tListNode fastPtr = ll;\r\n\t\t\r\n\t\twhile(true){\r\n\t\t\tif(fastPtr == null || fastPtr.next == null)\r\n\t\t\t\treturn -1;\r\n            slowPtr = slowPtr.next;\r\n            fastPtr = fastPtr.next.next;\r\n            if(slowPtr == fastPtr)\r\n            \tbreak;\r\n            \r\n        }\r\n\t\t\r\n\t\tslowPtr = ll;\r\n\t\twhile(true) {\r\n\t\t\tslowPtr = slowPtr.next;\r\n\t\t\tfastPtr = fastPtr.next;\r\n\t\t\tif(slowPtr == fastPtr)\r\n\t\t\t\treturn slowPtr.data;\r\n\t\t}\r\n\t}\r\n\r\n}\r\n</code></pre>\r\n<pre class=\"language-markup\"><code>output:\r\n\r\n3</code></pre>\r\n<p>The time complexity of the above solution is O(n) and Space complexity is O(1)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/af132682-62fb-4cb4-b899-5527cc0e05d0_circular-loop.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"how-to-detect-and-print-the-start-of-a-loop-in-a-circular-linked-list","tags":[{"name":"interview","slug":"interview"},{"name":"questions","slug":"questions"},{"name":"java","slug":"java"},{"name":"linked-list","slug":"linked-list"}],"recommendations":[{"id":394,"title":"Accessing the RabbitMQ Console in Cloud Foundry","imageUrl":"362fdc56-8bd4-4e3d-9a4f-f0fa18f39e55_Header_Post_RabbitMQ_EN.jpg","dateCreated":"2019-06-19T06:56:01.352Z","dateModified":"2019-06-19T06:56:11.237Z","contributedBy":"AskGif","content":"Each Cloud Foundry instance is a self-contained environment (cloud) that is generally intended to be used as a black box application container. It is implemented in a virtualized environment that hides the actual virtual/physical topology from the deployer.&nbsp; Service configuration, provisioni","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/362fdc56-8bd4-4e3d-9a4f-f0fa18f39e55_Header_Post_RabbitMQ_EN.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"java","slug":"java"},{"name":"rabbitmq","slug":"rabbitmq"}],"slug":"accessing-the-rabbitmq-console-in-cloud-foundry","total":0},{"id":77,"title":"What is Composite pattern?","imageUrl":"7ce89db3-2021-4218-9d92-d15805039607_Composite_Pattern.jpg","dateCreated":"2018-08-01T16:08:32.863Z","dateModified":"2018-08-01T17:21:15.513Z","contributedBy":"AskGif","content":"In software engineering, the composite pattern is a partitioning design pattern. The composite pattern describes a group of objects that are treated the same way as a single instance of the same type of object. The intent of a composite is to \"compose\" objects into tree structures to represent pa","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/7ce89db3-2021-4218-9d92-d15805039607_Composite_Pattern.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"design-patterns","slug":"design-patterns"},{"name":"interview","slug":"interview"},{"name":"structural-pattern","slug":"structural-pattern"},{"name":"questions","slug":"questions"}],"slug":"what-is-composite-pattern","total":0},{"id":23,"title":"Triplet counts with sum smaller than given Number","imageUrl":"4c7d7208-0252-4847-bc90-7c1c8c384b07_13triplet02.jpg","dateCreated":"2018-07-13T07:00:55.804Z","dateModified":"2018-07-13T08:44:54.769Z","contributedBy":"AskGif","content":"<span style=\"font-family: 'Open Sans', Helvetica, Arial, Verdana, sans-serif; font-size: 15px; text-align: justify;\">We are given an array of distinct integers and along with it a sum value. We have to find count of triplets with sum that is smaller than the sum value. First we will solve in N^3 ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/4c7d7208-0252-4847-bc90-7c1c8c384b07_13triplet02.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"interview","slug":"interview"},{"name":"string","slug":"string"},{"name":"java","slug":"java"},{"name":"array","slug":"array"},{"name":"algorithm","slug":"algorithm"}],"slug":"triplet-counts-with-sum-smaller-than-given-number","total":0},{"id":1,"title":"How to install java on EC2 Ubuntu 16-04","imageUrl":"d11fed6a-e800-4779-8cee-f7f5c8c42ee8_00_lead_image_java_in_ubuntu.png","dateCreated":"2018-06-20T13:02:11.29Z","dateModified":"2018-07-07T15:23:51.439Z","contributedBy":"AskGif","content":"This blog is in continuation to blog&nbsp;<a href=\"../../../../../blog/3/how-to-create-ec2-instance-on-aws-free-tier-plan/?lang=en\" target=\"_blank\" rel=\"noopener\">How to create EC2 instance on AWS Free Tier plan.</a>&nbsp;if you missed please revisit.\r\nFirst we need to get an Ubuntu (16.04","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/d11fed6a-e800-4779-8cee-f7f5c8c42ee8_00_lead_image_java_in_ubuntu.png","category":{"name":"tutorials","slug":"tutorials"},"tags":[{"name":"jre","slug":"jre"},{"name":"jdk","slug":"jdk"},{"name":"java","slug":"java"}],"slug":"how-to-install-java-on-ec2-ubuntu-16-04","total":0}]}