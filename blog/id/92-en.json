{"id":92,"title":"How will you find the middle of the Linked List?","imageUrl":"12b10340-a78f-4996-82b0-fc004964bbed_middle-element-linkedlist.png","dateCreated":"2018-08-07T15:12:05.744Z","dateModified":"2018-08-07T15:22:17.513Z","contributedBy":"AskGif","content":"<p>To find the middle of a linked list we can use many approaches. let's discuss our first approach having O(n) time complexity with 2 passes.</p>\r\n<p>We will be calculating the length n of the linked list in the first iteration and in second iteration we will be traversing to n/2 length to get the middle of the linked list.</p>\r\n<p>Can we do it in just 1 iteration?</p>\r\n<p>Yes, we can use two pointers, 1 slow pointer and 1 fast pointer. we will be moving fast pointer two steps per iteration while slow pointer will move only one step per iteration. So when the fast pointer will reach the end of the linked list then the slow pointer will be at the middle of the linked list.</p>\r\n<p>Java implementation of the above solution is as below:</p>\r\n<pre class=\"language-java\"><code>package askgif.linkedlist;\r\n\r\nimport java.util.Stack;\r\n\r\nclass ListNode{\r\n    public int data;\r\n    public ListNode next;\r\n    ListNode(int data){\r\n    \tthis.data = data;\r\n    }\r\n};\r\n\r\npublic class LinkedListNode {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\t\r\n        ListNode node1 = new ListNode(1);\r\n        ListNode node2 = new ListNode(2);\r\n        ListNode node3 = new ListNode(3);\r\n        ListNode node4 = new ListNode(4);\r\n        ListNode node5 = new ListNode(5);\r\n        ListNode node6 = new ListNode(6);\r\n        ListNode node7 = new ListNode(7);\r\n        ListNode node8 = new ListNode(8);\r\n        ListNode node9 = new ListNode(9);\r\n        ListNode node10 = new ListNode(10);\r\n        ListNode node11 = new ListNode(11);\r\n        \r\n        node1.next = node2;\r\n        node2.next = node3;\r\n        node3.next = node4;\r\n        node4.next = node5;\r\n        node5.next = node6;\r\n        node6.next = node7;\r\n        node7.next = node8;\r\n        node8.next = node9;\r\n        node9.next = node10;\r\n        node10.next = node11;\r\n        node11.next = null;\r\n        \r\n\t\tSystem.out.println(GetMiddleElement( node1));\r\n\t\t\r\n\r\n\t}\r\n\r\n\tprivate static int GetMiddleElement(ListNode node1) {\r\n\t\t\r\n\t\tListNode slowPtr = node1;\r\n\t\tListNode fastPtr = node1;\r\n\t\t\r\n\t\twhile(fastPtr != null &amp;&amp; fastPtr.next != null) {\r\n\t\t\tslowPtr = slowPtr.next;\r\n\t\t\tfastPtr = fastPtr.next.next;\r\n\t\t}\r\n\t\t\r\n\t\treturn slowPtr.data;\r\n\t}\r\n\r\n}\r\n</code></pre>\r\n<pre class=\"language-markup\"><code>output:\r\n\r\n6</code></pre>\r\n<p>The time complexity of the above solution is O(n) and the space complexity is also O(n).</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/12b10340-a78f-4996-82b0-fc004964bbed_middle-element-linkedlist.png","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"how-will-you-find-the-middle-of-the-linked-list","tags":[{"name":"interview","slug":"interview"},{"name":"linked-list","slug":"linked-list"},{"name":"java","slug":"java"},{"name":"questions","slug":"questions"}],"recommendations":[{"id":1477,"title":"Linked List Cycle - Linked List - Easy - LeetCode","imageUrl":"icon_fa3b30fb-61c7-4b4a-b410-6d9ab29ea43a.jpg","dateCreated":"2020-09-30T09:23:02.954Z","dateModified":"2020-09-30T09:23:12.143Z","contributedBy":"sumitc91","content":"Given head, the head of a linked list, determine if the linked list has a cycle in it.\nThere is a cycle in a linked list if there is some node in the list that can be reached again by continuously following the next pointer. Internally, pos is used to denote the index of the node that tail","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/fa3b30fb-61c7-4b4a-b410-6d9ab29ea43a.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"linked-list","slug":"linked-list"}],"slug":"linked-list-cycle-linked-list-easy-leetcode","total":0},{"id":32,"title":"Generate all possible strings of n bits.","imageUrl":"e00afba1-4221-4b3d-b9af-3a69ac35f84d_bits-bytes.jpg","dateCreated":"2018-07-16T07:58:27.46Z","dateModified":"2018-07-16T07:58:35.342Z","contributedBy":"AskGif","content":"You have been given an integer n that corresponds to the number of bits in an array. the task is to print all the possible strings using those n bits. the array can consist only boolean values (i.e either 0 or 1)\r\nWe will be solving this problem using recursion.\r\n<pre class=\"language-j","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/e00afba1-4221-4b3d-b9af-3a69ac35f84d_bits-bytes.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"interview","slug":"interview"},{"name":"recursion","slug":"recursion"},{"name":"algorithm","slug":"algorithm"},{"name":"backtracking","slug":"backtracking"}],"slug":"generate-all-possible-strings-of-n-bits","total":0},{"id":27,"title":"Convert an Array into Zig-Zag Fashion","imageUrl":"6f66c008-05c5-4b5c-9d26-c0e57e301991_Zigzag-Array.png","dateCreated":"2018-07-13T17:10:52.741Z","dateModified":"2018-07-31T05:20:13.559Z","contributedBy":"AskGif","content":"<span style=\"font-family: 'Open Sans', Helvetica, Arial, Verdana, sans-serif; font-size: 15px; text-align: justify;\">You are given an array of some distinct elements, you have to rearrange those elements of the array in a zig-zag fashion. The resultant array should be in format&nbsp; a &lt; b &gt","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/6f66c008-05c5-4b5c-9d26-c0e57e301991_Zigzag-Array.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"interview","slug":"interview"},{"name":"java","slug":"java"},{"name":"array","slug":"array"}],"slug":"convert-an-array-into-zig-zag-fashion","total":0},{"id":1,"title":"How to install java on EC2 Ubuntu 16-04","imageUrl":"d11fed6a-e800-4779-8cee-f7f5c8c42ee8_00_lead_image_java_in_ubuntu.png","dateCreated":"2018-06-20T13:02:11.29Z","dateModified":"2018-07-07T15:23:51.439Z","contributedBy":"AskGif","content":"This blog is in continuation to blog&nbsp;<a href=\"../../../../../blog/3/how-to-create-ec2-instance-on-aws-free-tier-plan/?lang=en\" target=\"_blank\" rel=\"noopener\">How to create EC2 instance on AWS Free Tier plan.</a>&nbsp;if you missed please revisit.\r\nFirst we need to get an Ubuntu (16.04","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/d11fed6a-e800-4779-8cee-f7f5c8c42ee8_00_lead_image_java_in_ubuntu.png","category":{"name":"tutorials","slug":"tutorials"},"tags":[{"name":"jre","slug":"jre"},{"name":"jdk","slug":"jdk"},{"name":"java","slug":"java"}],"slug":"how-to-install-java-on-ec2-ubuntu-16-04","total":0}]}