{"id":94,"title":"Check whether the given Linked List length is even or odd?","imageUrl":"c9526b27-eb8a-4d38-a1f2-66e2e9198224_Odd-Even-Linked-List.jpg","dateCreated":"2018-08-07T15:40:27.371Z","dateModified":"2018-08-07T15:40:35.099Z","contributedBy":"AskGif","content":"<p>The question is to find if the given linked list length is even or odd in optimum time. We will use a&nbsp;fast pointer, i.e 2x pointer. the fast pointer moves two nodes at a time. In the end, we will either be having the node as Null or the Node will be the last node in the Linked list. if the node is Null means the length of the list is Even otherwise Odd.</p>\r\n<p>Java code for the above problem is :</p>\r\n<pre class=\"language-java\"><code>package askgif.linkedlist;\r\n\r\nimport java.util.Stack;\r\n\r\nclass ListNode{\r\n    public int data;\r\n    public ListNode next;\r\n    ListNode(int data){\r\n    \tthis.data = data;\r\n    }\r\n};\r\n\r\npublic class LinkedListNode {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\t\r\n        ListNode node1 = new ListNode(1);\r\n        ListNode node2 = new ListNode(2);\r\n        ListNode node3 = new ListNode(3);\r\n        ListNode node4 = new ListNode(4);\r\n        ListNode node5 = new ListNode(5);\r\n        ListNode node6 = new ListNode(6);\r\n        ListNode node7 = new ListNode(7);\r\n        ListNode node8 = new ListNode(8);\r\n        ListNode node9 = new ListNode(9);\r\n        ListNode node10 = new ListNode(10);\r\n        ListNode node11 = new ListNode(11);\r\n        \r\n        node1.next = node2;\r\n        node2.next = node3;\r\n        node3.next = node4;\r\n        node4.next = node5;\r\n        node5.next = node6;\r\n        node6.next = node7;\r\n        node7.next = node8;\r\n        node8.next = node9;\r\n        node9.next = node10;\r\n        node10.next = node11;\r\n        node11.next = null;\r\n        \r\n        System.out.println(IfLinkedListIsEven(node1));\r\n\t\t\r\n\t}\r\n\r\n\tprivate static Boolean IfLinkedListIsEven(ListNode node1) {\r\n\t\t\r\n\t\tif(node1 == null)\r\n\t\t\treturn true;\r\n\t\twhile(node1 != null &amp;&amp; node1.next != null)\r\n\t\t\tnode1 = node1.next.next;\r\n\t\t\r\n\t\treturn node1 == null;\r\n\t}\r\n\r\n}\r\n</code></pre>\r\n<pre class=\"language-markup\"><code>output:\r\n\r\nfalse</code></pre>\r\n<p>Time Complexity: O(n)</p>\r\n<p>Space Complexity: O(1)</p>","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/c9526b27-eb8a-4d38-a1f2-66e2e9198224_Odd-Even-Linked-List.jpg","subContents":[],"category":{"name":"coding","slug":"coding"},"slug":"check-whether-the-given-linked-list-length-is-even-or-odd","tags":[{"name":"questions","slug":"questions"},{"name":"interview","slug":"interview"},{"name":"linked-list","slug":"linked-list"},{"name":"java","slug":"java"}],"recommendations":[{"id":104,"title":"How to implement InOrder Traversal in Binary Tree?","imageUrl":"bf7ea477-0b3a-4e79-9923-feb2fab2a727_inorder_traversal in Java.jpg","dateCreated":"2018-08-09T14:17:47.233Z","dateModified":"2018-08-09T14:28:44.293Z","contributedBy":"AskGif","content":"The Technique for traversal in an Inorder is slightly different from what we were doing in PreOrder Traversal. Here we go through left node, then data and then the right node.\r\nIn an InOrder traversal, the root is visited between the subtrees. InOrder traversal is defined as follows:\r\n","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/bf7ea477-0b3a-4e79-9923-feb2fab2a727_inorder_traversal in Java.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"traversal","slug":"traversal"},{"name":"interview","slug":"interview"},{"name":"questions","slug":"questions"},{"name":"recursion","slug":"recursion"},{"name":"inorder","slug":"inorder"},{"name":"java","slug":"java"},{"name":"tree","slug":"tree"}],"slug":"how-to-implement-inorder-traversal-in-binary-tree","total":0},{"id":92,"title":"How will you find the middle of the Linked List?","imageUrl":"12b10340-a78f-4996-82b0-fc004964bbed_middle-element-linkedlist.png","dateCreated":"2018-08-07T15:12:05.744Z","dateModified":"2018-08-07T15:22:17.513Z","contributedBy":"AskGif","content":"To find the middle of a linked list we can use many approaches. let's discuss our first approach having O(n) time complexity with 2 passes.\r\nWe will be calculating the length n of the linked list in the first iteration and in second iteration we will be traversing to n/2 length to get the ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/12b10340-a78f-4996-82b0-fc004964bbed_middle-element-linkedlist.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"interview","slug":"interview"},{"name":"linked-list","slug":"linked-list"},{"name":"java","slug":"java"},{"name":"questions","slug":"questions"}],"slug":"how-will-you-find-the-middle-of-the-linked-list","total":0},{"id":21,"title":"Reverse an array items without affecting any special characters position","imageUrl":"50ee19a8-22d3-4257-9c98-b8b5642c0cce_reverse.jpg","dateCreated":"2018-07-12T15:41:10.624Z","dateModified":"2018-08-09T15:42:54.086Z","contributedBy":"AskGif","content":"<span style=\"font-family: 'Open Sans', Helvetica, Arial, Verdana, sans-serif; font-size: 15px; text-align: justify;\">In a given string, which also contains special character along with alphabets (&lsquo;a&rsquo; to &lsquo;z&rsquo; and &lsquo;A&rsquo; to &lsquo;Z&rsquo;), reverse the string items ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/50ee19a8-22d3-4257-9c98-b8b5642c0cce_reverse.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"java","slug":"java"},{"name":"array","slug":"array"},{"name":"interview","slug":"interview"},{"name":"string","slug":"string"}],"slug":"reverse-an-array-items-without-affecting-any-special-characters-position","total":0},{"id":1,"title":"How to install java on EC2 Ubuntu 16-04","imageUrl":"d11fed6a-e800-4779-8cee-f7f5c8c42ee8_00_lead_image_java_in_ubuntu.png","dateCreated":"2018-06-20T13:02:11.29Z","dateModified":"2018-07-07T15:23:51.439Z","contributedBy":"AskGif","content":"This blog is in continuation to blog&nbsp;<a href=\"../../../../../blog/3/how-to-create-ec2-instance-on-aws-free-tier-plan/?lang=en\" target=\"_blank\" rel=\"noopener\">How to create EC2 instance on AWS Free Tier plan.</a>&nbsp;if you missed please revisit.\r\nFirst we need to get an Ubuntu (16.04","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/d11fed6a-e800-4779-8cee-f7f5c8c42ee8_00_lead_image_java_in_ubuntu.png","category":{"name":"tutorials","slug":"tutorials"},"tags":[{"name":"jre","slug":"jre"},{"name":"jdk","slug":"jdk"},{"name":"java","slug":"java"}],"slug":"how-to-install-java-on-ec2-ubuntu-16-04","total":0}]}