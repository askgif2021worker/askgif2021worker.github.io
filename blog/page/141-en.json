[{"id":1688,"title":"How to Design the data structures for a social network","imageUrl":"icon_031621dc-30c0-4e0d-ba31-1f20a3884f5c.jpg","dateCreated":"2020-11-20T06:57:07.127Z","dateModified":"2020-11-20T06:57:27.446Z","contributedBy":"sumitc91","content":"Step 1: Outline use cases and constraints<br />Gather requirements and scope the problem. Ask questions to clarify use cases and constraints. Discuss assumptions.\nWithout an interviewer to address clarifying questions, we'll define some use cases and constraints.\nUse cases<br />We'l","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/031621dc-30c0-4e0d-ba31-1f20a3884f5c.jpg","category":{"name":"tutorials","slug":"tutorials"},"tags":[{"name":"design","slug":"design"},{"name":"interview","slug":"interview"},{"name":"system-design","slug":"system-design"}],"slug":"how-to-design-the-data-structures-for-a-social-network"},{"id":1712,"title":"How to Design a key-value cache to save the results of the most recent web server queries","imageUrl":"icon_0e55c5af-9a54-497f-a246-ff16a71e6bbf.png","dateCreated":"2020-11-20T06:59:50.28Z","dateModified":"2020-11-20T06:59:59.352Z","contributedBy":"sumitc91","content":"Step 1: Outline use cases and constraints<br />Gather requirements and scope the problem. Ask questions to clarify use cases and constraints. Discuss assumptions.\nWithout an interviewer to address clarifying questions, we'll define some use cases and constraints.\nUse cases<br />We'l","ampImage":null,"category":{"name":"tutorials","slug":"tutorials"},"tags":[{"name":"design","slug":"design"},{"name":"interview","slug":"interview"},{"name":"system-design","slug":"system-design"}],"slug":"how-to-design-a-key-value-cache-to-save-the-results-of-the-most-recent-web-server-queries"},{"id":1689,"title":"How to Design Amazon's sales rank by category feature","imageUrl":"icon_6a724e39-5b07-478b-a4ae-af8ecae9210e.jpg","dateCreated":"2020-11-20T07:01:40.544Z","dateModified":"2020-11-20T07:01:53.823Z","contributedBy":"sumitc91","content":"Step 1: Outline use cases and constraints<br />Gather requirements and scope the problem. Ask questions to clarify use cases and constraints. Discuss assumptions.\nWithout an interviewer to address clarifying questions, we'll define some use cases and constraints.\nUse cases<br />We'l","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/6a724e39-5b07-478b-a4ae-af8ecae9210e.jpg","category":{"name":"tutorials","slug":"tutorials"},"tags":[{"name":"design","slug":"design"},{"name":"interview","slug":"interview"},{"name":"system-design","slug":"system-design"}],"slug":"how-to-design-amazons-sales-rank-by-category-feature"},{"id":1690,"title":"How to Design a system that scales to millions of users on AWS","imageUrl":"icon_c4c206e1-63c2-46f8-a9b3-076b94e481a7.png","dateCreated":"2020-11-20T07:07:56.332Z","dateModified":"2020-11-20T07:08:06.04Z","contributedBy":"sumitc91","content":"Step 1: Outline use cases and constraints<br />Gather requirements and scope the problem. Ask questions to clarify use cases and constraints. Discuss assumptions.\nWithout an interviewer to address clarifying questions, we'll define some use cases and constraints.\nUse cases<br />Solv","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/c4c206e1-63c2-46f8-a9b3-076b94e481a7.png","category":{"name":"tutorials","slug":"tutorials"},"tags":[{"name":"design","slug":"design"},{"name":"interview","slug":"interview"},{"name":"system-design","slug":"system-design"}],"slug":"how-to-design-a-system-that-scales-to-millions-of-users-on-aws"},{"id":1691,"title":"Performance vs scalability","imageUrl":"icon_007e63be-5ce4-4cc9-a98c-26b5f0af31ae.png","dateCreated":"2020-11-20T07:26:58.824Z","dateModified":"2020-11-20T07:27:09.907Z","contributedBy":"sumitc91","content":"A service is scalable if it results in increased performance in a manner proportional to resources added. Generally, increasing performance means serving more units of work, but it can also be to handle larger units of work, such as when datasets grow.1\nAnother way to look at performance v","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/007e63be-5ce4-4cc9-a98c-26b5f0af31ae.png","category":{"name":"tutorials","slug":"tutorials"},"tags":[{"name":"interview","slug":"interview"}],"slug":"performance-vs-scalability"},{"id":1692,"title":"Latency vs throughput","imageUrl":"icon_9e97e6f4-fec4-4e60-8bb0-618e048a04a5.jpg","dateCreated":"2020-11-20T07:28:07.813Z","dateModified":"2020-11-20T07:28:15.212Z","contributedBy":"sumitc91","content":"Latency is the time to perform some action or to produce some result.\nThroughput is the number of such actions or results per unit of time.\nGenerally, you should aim for maximal throughput with acceptable latency.","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/9e97e6f4-fec4-4e60-8bb0-618e048a04a5.jpg","category":{"name":"tutorials","slug":"tutorials"},"tags":[{"name":"interview","slug":"interview"}],"slug":"latency-vs-throughput"},{"id":1693,"title":"Availability vs consistency","imageUrl":"icon_a22695c8-b2d8-4ca6-8546-265c07e566d7.png","dateCreated":"2020-11-20T07:30:12.189Z","dateModified":"2020-11-20T07:30:26.472Z","contributedBy":"sumitc91","content":"CAP theorem\nIn a distributed computer system, you can only support two of the following guarantees:\nConsistency - Every read receives the most recent write or an error<br />Availability - Every request receives a response, without guarantee that it contains the most recent version o","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a22695c8-b2d8-4ca6-8546-265c07e566d7.png","category":{"name":"tutorials","slug":"tutorials"},"tags":[{"name":"interview","slug":"interview"}],"slug":"availability-vs-consistency"},{"id":1694,"title":"What is Domain name system (DNS)?","imageUrl":"icon_5d73c05a-94c0-45e6-b648-a89025ffe4e8.png","dateCreated":"2020-11-20T07:33:27.184Z","dateModified":"2020-11-20T07:33:33.359Z","contributedBy":"sumitc91","content":"A Domain Name System (DNS) translates a domain name such as www.example.com to an IP address.\nDNS is hierarchical, with a few authoritative servers at the top level. Your router or ISP provides information about which DNS server(s) to contact when doing a lookup. Lower level DNS servers ca","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/5d73c05a-94c0-45e6-b648-a89025ffe4e8.png","category":{"name":"tutorials","slug":"tutorials"},"tags":[{"name":"interview","slug":"interview"}],"slug":"what-is-domain-name-system-dns"},{"id":1695,"title":"Content delivery network (CDN)","imageUrl":"icon_57adef3f-d788-4753-bda7-a12a6bc0d462.jpg","dateCreated":"2020-11-20T07:35:23.915Z","dateModified":"2020-11-20T07:35:35.322Z","contributedBy":"sumitc91","content":"A content delivery network (CDN) is a globally distributed network of proxy servers, serving content from locations closer to the user. Generally, static files such as HTML/CSS/JS, photos, and videos are served from CDN, although some CDNs such as Amazon's CloudFront support dynamic content. The ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/57adef3f-d788-4753-bda7-a12a6bc0d462.jpg","category":{"name":"tutorials","slug":"tutorials"},"tags":[{"name":"interview","slug":"interview"}],"slug":"content-delivery-network-cdn"},{"id":1696,"title":"What is Load balancer?","imageUrl":"icon_bf29fc63-378c-41be-832e-77c965333bfb.png","dateCreated":"2020-11-20T07:37:09.771Z","dateModified":"2020-11-20T07:37:16.113Z","contributedBy":"sumitc91","content":"Load balancers distribute incoming client requests to computing resources such as application servers and databases. In each case, the load balancer returns the response from the computing resource to the appropriate client. Load balancers are effective at:\nPreventing requests from going t","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/bf29fc63-378c-41be-832e-77c965333bfb.png","category":{"name":"tutorials","slug":"tutorials"},"tags":[{"name":"interview","slug":"interview"}],"slug":"what-is-load-balancer"},{"id":1697,"title":"What is Reverse proxy (web server)","imageUrl":"icon_c9b9941f-ccf0-43b6-8c8d-af837fe0b02d.jpg","dateCreated":"2020-11-20T07:38:40.516Z","dateModified":"2020-11-20T07:38:45.525Z","contributedBy":"sumitc91","content":"A reverse proxy is a web server that centralizes internal services and provides unified interfaces to the public. Requests from clients are forwarded to a server that can fulfill it before the reverse proxy returns the server's response to the client.\nAdditional benefits include:\nIn","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/c9b9941f-ccf0-43b6-8c8d-af837fe0b02d.jpg","category":{"name":"tutorials","slug":"tutorials"},"tags":[{"name":"interview","slug":"interview"}],"slug":"what-is-reverse-proxy-web-server"},{"id":1698,"title":"What is Application layer?","imageUrl":"icon_6faa8ad3-f4c7-411a-a351-f5721537582b.jpg","dateCreated":"2020-11-20T07:40:00.435Z","dateModified":"2020-11-20T07:40:05.453Z","contributedBy":"sumitc91","content":"Separating out the web layer from the application layer (also known as platform layer) allows you to scale and configure both layers independently. Adding a new API results in adding application servers without necessarily adding additional web servers. The single responsibility principle advocat","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/6faa8ad3-f4c7-411a-a351-f5721537582b.jpg","category":{"name":"tutorials","slug":"tutorials"},"tags":[{"name":"interview","slug":"interview"}],"slug":"what-is-application-layer"}]