[{"id":63,"title":"Chance to be part of Indian Army for engineering graduates, Rs 51,600â€‹ to be paid as stipend","imageUrl":"c36837ff-b5ad-4713-a113-f54288a53e76_indian-army.jpg","dateCreated":"2018-07-31T17:04:43.75Z","dateModified":"2018-07-31T17:05:03.614Z","contributedBy":"AskGif","content":"The Indian Army has invited applications from unmarried men and women engineering graduates and also from widows of defence personnel for grant of Short Service Commission (SSC) in all arms/services. The course will commence in April 2019 at Officers Training Academy in Chennai.&nbsp;\r\n&nb","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/c36837ff-b5ad-4713-a113-f54288a53e76_indian-army.jpg","category":{"name":"news","slug":"news"},"tags":[{"name":"indian-army","slug":"indian-army"},{"name":"recruitment","slug":"recruitment"}],"slug":"chance-to-be-part-of-indian-army-for-engineering-graduates-rs-51600-to-be-paid-as-stipend"},{"id":64,"title":"Best places to visit in Jamalpur, Munger, Bihar","imageUrl":"5c90169e-6305-4427-963a-77bd981ac94e_jamalpur.jpg","dateCreated":"2018-08-01T05:59:10.123Z","dateModified":"2018-08-01T06:43:42.554Z","contributedBy":"AskGif","content":"Jamalpur is a town in the Indian state of Bihar. It is situated 8 km from Munger city centre. Jamalpur is a part of Munger-Jamalpur twin cities.\r\nThe name Jamalpur literally means Jamal (beautiful) pur (town). Jamalpur is best known for the Jamalpur Locomotive Workshop, which employs over ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/5c90169e-6305-4427-963a-77bd981ac94e_jamalpur.jpg","category":{"name":"travel","slug":"travel"},"tags":[{"name":"bihar","slug":"bihar"},{"name":"munger","slug":"munger"},{"name":"jamalpur","slug":"jamalpur"},{"name":"solo-travel","slug":"solo-travel"},{"name":"top-sites","slug":"top-sites"},{"name":"visit-with-family","slug":"visit-with-family"}],"slug":"best-places-to-visit-in-jamalpur-munger-bihar"},{"id":65,"title":"What is Strategy pattern?","imageUrl":"ffa5f7f6-cc72-474b-8dd9-afcf149959f1_strategy_pattern.jpg","dateCreated":"2018-08-01T12:05:22.176Z","dateModified":"2018-08-01T17:24:43.716Z","contributedBy":"AskGif","content":"In computer programming, the strategy pattern (also known as the policy pattern) is a behavioural software design pattern that enables selecting an algorithm at runtime. Instead of implementing a single algorithm directly, code receives run-time instructions as to which is a family of algorithms ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/ffa5f7f6-cc72-474b-8dd9-afcf149959f1_strategy_pattern.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"design-patterns","slug":"design-patterns"},{"name":"behavioral-patterns","slug":"behavioral-patterns"},{"name":"questions","slug":"questions"},{"name":"interview","slug":"interview"}],"slug":"what-is-strategy-pattern"},{"id":66,"title":"What is Observer pattern ?","imageUrl":"e69dad7f-de9e-4693-9048-db8d81419863_Observer-pattern.png","dateCreated":"2018-08-01T12:21:30.92Z","dateModified":"2018-08-01T17:24:10.49Z","contributedBy":"AskGif","content":"The observer pattern is a software design pattern in which an object, called the subject, maintains a list of its dependents, called observers, and notifies them automatically of any state changes, usually by calling one of their methods.\r\n&nbsp;\r\nIt is mainly used to implement dist","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/e69dad7f-de9e-4693-9048-db8d81419863_Observer-pattern.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"behavioral-patterns","slug":"behavioral-patterns"},{"name":"questions","slug":"questions"},{"name":"interview","slug":"interview"},{"name":"design-patterns","slug":"design-patterns"}],"slug":"what-is-observer-pattern-"},{"id":67,"title":"What is Decorator pattern?","imageUrl":"c2eb4ba8-15a8-4f6f-9ad5-6788bdecbe58_decorator-pattern.jpg","dateCreated":"2018-08-01T12:35:29.821Z","dateModified":"2018-08-01T17:21:52.547Z","contributedBy":"AskGif","content":"In object-oriented programming, the decorator pattern is a design pattern that allows the behaviour to be added to an individual object, either statically or dynamically, without affecting the behaviour of other objects from the same class. The decorator pattern is often useful for adhering to th","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/c2eb4ba8-15a8-4f6f-9ad5-6788bdecbe58_decorator-pattern.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"questions","slug":"questions"},{"name":"interview","slug":"interview"},{"name":"design-patterns","slug":"design-patterns"},{"name":"structural-pattern","slug":"structural-pattern"}],"slug":"what-is-decorator-pattern"},{"id":68,"title":"What is Factory pattern?","imageUrl":"e2172f61-aced-4a65-a785-9978cd5ffdb7_factory-pattern.jpg","dateCreated":"2018-08-01T12:47:00.64Z","dateModified":"2018-08-01T17:19:17.793Z","contributedBy":"AskGif","content":"In class-based programming, the factory method pattern is a creational pattern that uses factory methods to deal with the problem of creating objects without having to specify the exact class of the object that will be created. This is done by creating objects by calling a factory method&mdash;ei","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/e2172f61-aced-4a65-a785-9978cd5ffdb7_factory-pattern.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"creational-pattern","slug":"creational-pattern"},{"name":"design-patterns","slug":"design-patterns"},{"name":"questions","slug":"questions"},{"name":"interview","slug":"interview"}],"slug":"what-is-factory-pattern"},{"id":69,"title":"What is Adapter pattern?","imageUrl":"d3a5fc87-6928-4196-b3ae-d8e4ed5b9811_adapter-pattern.jpg","dateCreated":"2018-08-01T13:09:38.32Z","dateModified":"2018-08-01T17:20:54.998Z","contributedBy":"AskGif","content":"In software engineering, the adapter pattern is a software design pattern (also known as Wrapper, an alternative naming shared with the Decorator pattern) that allows the interface of an existing class to be used as another interface. It is often used to make existing classes work with others wit","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/d3a5fc87-6928-4196-b3ae-d8e4ed5b9811_adapter-pattern.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"questions","slug":"questions"},{"name":"design-patterns","slug":"design-patterns"},{"name":"structural-pattern","slug":"structural-pattern"},{"name":"interview","slug":"interview"}],"slug":"what-is-adapter-pattern"},{"id":70,"title":"What is Singleton pattern?","imageUrl":"cd3b4cdf-875c-4382-8f39-8e7c74356b19_singleton-pattern.png","dateCreated":"2018-08-01T13:32:33.457Z","dateModified":"2018-08-01T17:19:42.254Z","contributedBy":"AskGif","content":"In software engineering, the singleton pattern is a software design pattern that restricts the instantiation of a class to one object. This is useful when exactly one object is needed to coordinate actions across the system. The concept is sometimes generalized to systems that operate more effici","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/cd3b4cdf-875c-4382-8f39-8e7c74356b19_singleton-pattern.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"interview","slug":"interview"},{"name":"questions","slug":"questions"},{"name":"design-patterns","slug":"design-patterns"},{"name":"creational-pattern","slug":"creational-pattern"}],"slug":"what-is-singleton-pattern"},{"id":71,"title":"What is Command pattern?","imageUrl":"c126c75e-3ad2-4e51-816a-33df0c655224_Command_pattern.png","dateCreated":"2018-08-01T15:15:51.573Z","dateModified":"2018-08-01T17:23:38.001Z","contributedBy":"AskGif","content":"In object-oriented programming, the command pattern is a behavioural design pattern in which an object is used to encapsulate all information needed to perform an action or trigger an event at a later time. This information includes the method name, the object that owns the method and values for ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/c126c75e-3ad2-4e51-816a-33df0c655224_Command_pattern.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"interview","slug":"interview"},{"name":"questions","slug":"questions"},{"name":"behavioral-patterns","slug":"behavioral-patterns"},{"name":"design-patterns","slug":"design-patterns"}],"slug":"what-is-command-pattern"},{"id":72,"title":"What is Facade pattern?","imageUrl":"509c3ba4-0943-4aba-aa8e-7bbf8cdad079_Facade_design_pattern.png","dateCreated":"2018-08-01T15:23:05.846Z","dateModified":"2018-08-01T17:22:14.215Z","contributedBy":"AskGif","content":"The facade pattern (also spelt fa&ccedil;ade) is a software-design pattern commonly used with object-oriented programming. Analogous to a facade in architecture, a facade is an object that serves as a front-facing interface masking more complex underlying or structural code. A facade can:\r\n<p","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/509c3ba4-0943-4aba-aa8e-7bbf8cdad079_Facade_design_pattern.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"structural-pattern","slug":"structural-pattern"},{"name":"interview","slug":"interview"},{"name":"questions","slug":"questions"},{"name":"design-patterns","slug":"design-patterns"}],"slug":"what-is-facade-pattern"},{"id":73,"title":"What is Template pattern?","imageUrl":"1573c83b-c91b-4944-be45-b6b2f866e450_Template_Method.png","dateCreated":"2018-08-01T15:41:25.221Z","dateModified":"2018-08-02T10:59:06.373Z","contributedBy":"AskGif","content":"In software engineering, the template method pattern is a behavioural design pattern that defines the program skeleton of an algorithm in an operation, deferring some steps to subclasses. It lets one redefine certain steps of an algorithm without changing the algorithm's structure. The template m","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/1573c83b-c91b-4944-be45-b6b2f866e450_Template_Method.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"questions","slug":"questions"},{"name":"behavioral-patterns","slug":"behavioral-patterns"},{"name":"interview","slug":"interview"},{"name":"design-patterns","slug":"design-patterns"}],"slug":"what-is-template-pattern"},{"id":74,"title":"What is Iterator pattern?","imageUrl":"2ae1cc9a-b9ca-4dd5-8faf-ae38f2bdd6c3_Iterator-pattern.png","dateCreated":"2018-08-01T15:49:45.656Z","dateModified":"2018-08-01T17:23:52.861Z","contributedBy":"AskGif","content":"In object-oriented programming, the iterator pattern is a design pattern in which an iterator is used to traverse a container and access the container's elements. The iterator pattern decouples algorithms from containers; in some cases, algorithms are necessarily container-specific and thus canno","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/2ae1cc9a-b9ca-4dd5-8faf-ae38f2bdd6c3_Iterator-pattern.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"questions","slug":"questions"},{"name":"design-patterns","slug":"design-patterns"},{"name":"behavioral-patterns","slug":"behavioral-patterns"},{"name":"interview","slug":"interview"}],"slug":"what-is-iterator-pattern"}]