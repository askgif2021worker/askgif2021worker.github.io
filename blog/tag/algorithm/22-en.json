[{"id":1455,"title":"Island Perimeter - Hash Table - Easy - LeetCode","imageUrl":"icon_46207587-0bd2-495e-92cd-74c25be2d3b2.jpg","dateCreated":"2020-09-28T11:32:21.454Z","dateModified":"2020-09-28T11:32:40.791Z","contributedBy":"sumitc91","content":"ou are given row x col grid representing a map where grid[i][j] = 1 represents land and grid[i][j] = 0 represents water.\nGrid cells are connected horizontally/vertically (not diagonally). The grid is completely surrounded by water, and there is exactly one island (i.e., one or more connect","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/46207587-0bd2-495e-92cd-74c25be2d3b2.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"hash-table","slug":"hash-table"},{"name":"leetcode","slug":"leetcode"}],"slug":"island-perimeter-hash-table-easy-leetcode"},{"id":1454,"title":"Number of Boomerangs - Hash Table - Easy - LeetCode","imageUrl":"icon_0bfaa627-058c-4deb-8cd9-80d4d46eab4f.jpg","dateCreated":"2020-09-28T10:19:55.076Z","dateModified":"2020-09-28T10:20:09.52Z","contributedBy":"sumitc91","content":"Given n points in the plane that are all pairwise distinct, a \"boomerang\" is a tuple of points (i, j, k) such that the distance between i and j equals the distance between i and k (the order of the tuple matters).\nFind the number of boomerangs. You may assume that n will be at most 500 and","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/0bfaa627-058c-4deb-8cd9-80d4d46eab4f.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"hash-table","slug":"hash-table"},{"name":"leetcode","slug":"leetcode"}],"slug":"number-of-boomerangs-hash-table-easy-leetcode"},{"id":1452,"title":"Longest Palindrome - Hash Table - Easy - LeetCode","imageUrl":"icon_c10f17d8-6c31-4f32-bca0-399d748571a3.jpg","dateCreated":"2020-09-28T06:10:56.728Z","dateModified":"2020-09-28T06:11:05.238Z","contributedBy":"sumitc91","content":"Given a string s which consists of lowercase or uppercase letters, return the length of the longest palindrome that can be built with those letters.\nLetters are case sensitive, for example, \"Aa\" is not considered a palindrome here.\n&nbsp;\nExample 1:\nInput: s = \"abccccd","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/c10f17d8-6c31-4f32-bca0-399d748571a3.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"hash-table","slug":"hash-table"},{"name":"leetcode","slug":"leetcode"}],"slug":"longest-palindrome-hash-table-easy-leetcode"},{"id":1451,"title":"Find the Difference - Hash Table - Easy - LeetCode","imageUrl":"icon_0be92be0-c25e-4e63-af97-19c0f08ad376.jpg","dateCreated":"2020-09-28T05:13:07.735Z","dateModified":"2020-09-28T05:13:36.041Z","contributedBy":"sumitc91","content":"Given two strings s and t which consist of only lowercase letters.\nString t is generated by random shuffling string s and then add one more letter at a random position.\nFind the letter that was added in t.\nExample:\nInput:<br />s = \"abcd\"<br />t = \"abcde\"\nOutput:","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/0be92be0-c25e-4e63-af97-19c0f08ad376.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"hash-table","slug":"hash-table"},{"name":"leetcode","slug":"leetcode"}],"slug":"find-the-difference-hash-table-easy-leetcode"},{"id":1450,"title":"Intersection of Two Arrays II - Hash Table - Easy - LeetCode","imageUrl":"icon_8cba914a-6340-473d-909a-903de35a2e83.jpg","dateCreated":"2020-09-28T05:00:38.527Z","dateModified":"2020-09-28T05:01:10.966Z","contributedBy":"sumitc91","content":"Given two arrays, write a function to compute their intersection.\nExample 1:\nInput: nums1 = [1,2,2,1], nums2 = [2,2]<br />Output: [2,2]<br />Example 2:\nInput: nums1 = [4,9,5], nums2 = [9,4,9,8,4]<br />Output: [4,9]<br />Note:\nEach element in the result should appear as","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/8cba914a-6340-473d-909a-903de35a2e83.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"hash-table","slug":"hash-table"},{"name":"leetcode","slug":"leetcode"}],"slug":"intersection-of-two-arrays-ii-hash-table-easy-leetcode"},{"id":1449,"title":"Word Pattern - Hash Table - Easy - LeetCode","imageUrl":"icon_c487c656-5a97-4d57-a758-23d8bedd4230.jpg","dateCreated":"2020-09-28T04:43:15.64Z","dateModified":"2020-09-28T04:43:30.427Z","contributedBy":"sumitc91","content":"Given a pattern and a string s, find if s follows the same pattern.\nHere follow means a full match, such that there is a bijection between a letter in pattern and a non-empty word in s.\n&nbsp;\nExample 1:\nInput: pattern = \"abba\", s = \"dog cat cat dog\"<br />Output: true<","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/c487c656-5a97-4d57-a758-23d8bedd4230.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"hash-table","slug":"hash-table"},{"name":"leetcode","slug":"leetcode"}],"slug":"word-pattern-hash-table-easy-leetcode"},{"id":1448,"title":"Valid Anagram - Hash Table - Easy - LeetCode","imageUrl":"icon_91fab41d-4058-4af9-a039-58567ffe7937.jpg","dateCreated":"2020-09-28T04:04:40.16Z","dateModified":"2020-09-28T04:04:52.785Z","contributedBy":"sumitc91","content":"Given two strings s and t , write a function to determine if t is an anagram of s.\nExample 1:\nInput: s = \"anagram\", t = \"nagaram\"<br />Output: true<br />Example 2:\nInput: s = \"rat\", t = \"car\"<br />Output: false<br />Note:<br />You may assume the string contains only lowercase","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/91fab41d-4058-4af9-a039-58567ffe7937.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"hash-table","slug":"hash-table"},{"name":"leetcode","slug":"leetcode"}],"slug":"valid-anagram-hash-table-easy-leetcode"},{"id":1447,"title":"Isomorphic Strings - Hash Table - Easy - LeetCode","imageUrl":"icon_366529a8-12f2-4712-9046-c0f4e106bc58.jpg","dateCreated":"2020-09-27T14:40:32.348Z","dateModified":"2020-09-27T14:40:51.991Z","contributedBy":"sumitc91","content":"Given two strings s and t, determine if they are isomorphic.\nTwo strings are isomorphic if the characters in s can be replaced to get t.\nAll occurrences of a character must be replaced with another character while preserving the order of characters. No two characters may map to the ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/366529a8-12f2-4712-9046-c0f4e106bc58.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"hash-table","slug":"hash-table"},{"name":"leetcode","slug":"leetcode"}],"slug":"isomorphic-strings-hash-table-easy-leetcode"},{"id":1446,"title":"Count Primes - Hash Table - Easy - LeetCode","imageUrl":"icon_e9b75f4c-a552-42bd-8174-69c9a40b1b05.jpg","dateCreated":"2020-09-27T14:24:49.924Z","dateModified":"2020-09-27T14:25:04.925Z","contributedBy":"sumitc91","content":"Count the number of prime numbers less than a non-negative number, n.\n&nbsp;\nExample 1:\nInput: n = 10<br />Output: 4<br />Explanation: There are 4 prime numbers less than 10, they are 2, 3, 5, 7.<br />Example 2:\nInput: n = 0<br />Output: 0<br />Example 3:\nInput:","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/e9b75f4c-a552-42bd-8174-69c9a40b1b05.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"hash-table","slug":"hash-table"},{"name":"leetcode","slug":"leetcode"}],"slug":"count-primes-hash-table-easy-leetcode"},{"id":1445,"title":"Happy Number - Hash Table - Easy - LeetCode","imageUrl":"icon_58f42877-4541-466b-9a8e-2b283b064c09.jpg","dateCreated":"2020-09-27T14:03:02.745Z","dateModified":"2020-09-27T14:03:14.961Z","contributedBy":"sumitc91","content":"Write an algorithm to determine if a number n is \"happy\".\nA happy number is a number defined by the following process: Starting with any positive integer, replace the number by the sum of the squares of its digits, and repeat the process until the number equals 1 (where it will stay), or i","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/58f42877-4541-466b-9a8e-2b283b064c09.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"hash-table","slug":"hash-table"},{"name":"leetcode","slug":"leetcode"}],"slug":"happy-number-hash-table-easy-leetcode"},{"id":1444,"title":"Sum of All Odd Length Subarrays - Array - Easy - LeetCode","imageUrl":"icon_04628ff7-990c-4a59-aec3-6d7de8683fb2.jpg","dateCreated":"2020-09-27T13:45:22.315Z","dateModified":"2020-09-27T13:45:38.843Z","contributedBy":"sumitc91","content":"Given an array of positive integers arr, calculate the sum of all possible odd-length subarrays.\nA subarray is a contiguous subsequence of the array.\nReturn the sum of all odd-length subarrays of arr.\n&nbsp;\nExample 1:\nInput: arr = [1,4,2,5,3]<br />Output: 58<br","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/04628ff7-990c-4a59-aec3-6d7de8683fb2.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"sum-of-all-odd-length-subarrays-array-easy-leetcode"},{"id":1443,"title":"Special Positions in a Binary Matrix - Array - Easy - LeetCode","imageUrl":"icon_323844a0-3f00-4ac5-a1f4-97c37ba7e74f.jpg","dateCreated":"2020-09-27T13:24:16.856Z","dateModified":"2020-09-27T13:24:31.525Z","contributedBy":"sumitc91","content":"Given a rows x cols matrix mat, where mat[i][j] is either 0 or 1, return the number of special positions in mat.\nA position (i,j) is called special if mat[i][j] == 1 and all other elements in row i and column j are 0 (rows and columns are 0-indexed).\n&nbsp;\nExample 1:\n","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/323844a0-3f00-4ac5-a1f4-97c37ba7e74f.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"array","slug":"array"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"}],"slug":"special-positions-in-a-binary-matrix-array-easy-leetcode"}]