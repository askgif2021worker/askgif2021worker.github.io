[{"id":67,"title":"What is Decorator pattern?","imageUrl":"c2eb4ba8-15a8-4f6f-9ad5-6788bdecbe58_decorator-pattern.jpg","dateCreated":"2018-08-01T12:35:29.821Z","dateModified":"2018-08-01T17:21:52.547Z","contributedBy":"AskGif","content":"In object-oriented programming, the decorator pattern is a design pattern that allows the behaviour to be added to an individual object, either statically or dynamically, without affecting the behaviour of other objects from the same class. The decorator pattern is often useful for adhering to th","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/c2eb4ba8-15a8-4f6f-9ad5-6788bdecbe58_decorator-pattern.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"questions","slug":"questions"},{"name":"interview","slug":"interview"},{"name":"design-patterns","slug":"design-patterns"},{"name":"structural-pattern","slug":"structural-pattern"}],"slug":"what-is-decorator-pattern"},{"id":66,"title":"What is Observer pattern ?","imageUrl":"e69dad7f-de9e-4693-9048-db8d81419863_Observer-pattern.png","dateCreated":"2018-08-01T12:21:30.92Z","dateModified":"2018-08-01T17:24:10.49Z","contributedBy":"AskGif","content":"The observer pattern is a software design pattern in which an object, called the subject, maintains a list of its dependents, called observers, and notifies them automatically of any state changes, usually by calling one of their methods.\r\n&nbsp;\r\nIt is mainly used to implement dist","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/e69dad7f-de9e-4693-9048-db8d81419863_Observer-pattern.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"behavioral-patterns","slug":"behavioral-patterns"},{"name":"questions","slug":"questions"},{"name":"interview","slug":"interview"},{"name":"design-patterns","slug":"design-patterns"}],"slug":"what-is-observer-pattern-"},{"id":65,"title":"What is Strategy pattern?","imageUrl":"ffa5f7f6-cc72-474b-8dd9-afcf149959f1_strategy_pattern.jpg","dateCreated":"2018-08-01T12:05:22.176Z","dateModified":"2018-08-01T17:24:43.716Z","contributedBy":"AskGif","content":"In computer programming, the strategy pattern (also known as the policy pattern) is a behavioural software design pattern that enables selecting an algorithm at runtime. Instead of implementing a single algorithm directly, code receives run-time instructions as to which is a family of algorithms ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/ffa5f7f6-cc72-474b-8dd9-afcf149959f1_strategy_pattern.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"design-patterns","slug":"design-patterns"},{"name":"behavioral-patterns","slug":"behavioral-patterns"},{"name":"questions","slug":"questions"},{"name":"interview","slug":"interview"}],"slug":"what-is-strategy-pattern"}]