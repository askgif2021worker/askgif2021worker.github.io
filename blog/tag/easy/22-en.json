[{"id":1398,"title":"Rotate Array - Array - Easy - LeetCode","imageUrl":"icon_954a0a96-04e9-4c14-a376-646dcbee787d.jpg","dateCreated":"2020-09-25T15:50:12.607Z","dateModified":"0001-01-01T00:00:00","contributedBy":null,"content":"Given an array, rotate the array to the right by k steps, where k is non-negative.\nFollow up:\nTry to come up with as many solutions as you can, there are at least 3 different ways to solve this problem.<br />Could you do it in-place with O(1) extra space?<br />&nbsp;\nExample ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/954a0a96-04e9-4c14-a376-646dcbee787d.jpg","category":{"name":null,"slug":null},"tags":[],"slug":"rotate-array-array-easy-leetcode"},{"id":1397,"title":"Majority Element - Array - Easy - LeetCode","imageUrl":"icon_ea1dcf00-d2bf-4324-a38e-4a76cb4e17e0.jpg","dateCreated":"2020-09-25T15:36:25.346Z","dateModified":"0001-01-01T00:00:00","contributedBy":null,"content":"Given an array of size n, find the majority element. The majority element is the element that appears more than &lfloor; n/2 &rfloor; times.\nYou may assume that the array is non-empty and the majority element always exist in the array.\nExample 1:\nInput: [3,2,3]<br />Output: 3","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/ea1dcf00-d2bf-4324-a38e-4a76cb4e17e0.jpg","category":{"name":null,"slug":null},"tags":[],"slug":"majority-element-array-easy-leetcode"},{"id":1396,"title":"Best Time to Buy and Sell Stock II - Array - Easy - LeetCode","imageUrl":"icon_718215a8-daae-4a85-ad74-b5a53eb37ac9.jpg","dateCreated":"2020-09-25T15:26:22.47Z","dateModified":"0001-01-01T00:00:00","contributedBy":null,"content":"Say you have an array prices for which the ith element is the price of a given stock on day i.\nDesign an algorithm to find the maximum profit. You may complete as many transactions as you like (i.e., buy one and sell one share of the stock multiple times).\nNote: You may not engage i","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/718215a8-daae-4a85-ad74-b5a53eb37ac9.jpg","category":{"name":null,"slug":null},"tags":[],"slug":"best-time-to-buy-and-sell-stock-ii-array-easy-leetcode"},{"id":1395,"title":"Pascal's Triangle II - Array - Easy - LeetCode","imageUrl":"icon_4fa51d72-5a1a-46ef-95e0-5a24ed8e6fa5.jpg","dateCreated":"2020-09-25T10:02:57.93Z","dateModified":"0001-01-01T00:00:00","contributedBy":null,"content":"Given an integer rowIndex, return the rowIndexth row of Pascal's triangle.\nNotice that the row index starts from 0.\n<br />In Pascal's triangle, each number is the sum of the two numbers directly above it.\nFollow up:\nCould you optimize your algorithm to use only O(k) ex","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/4fa51d72-5a1a-46ef-95e0-5a24ed8e6fa5.jpg","category":{"name":null,"slug":null},"tags":[],"slug":"pascals-triangle-ii-array-easy-leetcode"},{"id":1394,"title":"Pascal's Triangle - Array - Easy - LeetCode","imageUrl":"icon_c3c29c5c-8b25-4372-bfcd-abed88f6f7e1.jpg","dateCreated":"2020-09-25T09:40:21.349Z","dateModified":"0001-01-01T00:00:00","contributedBy":null,"content":"Given a non-negative integer numRows, generate the first numRows of Pascal's triangle.\n<br />In Pascal's triangle, each number is the sum of the two numbers directly above it.\nExample:\nInput: 5<br />Output:<br />[<br />&nbsp; &nbsp; &nbsp;[1],<br />&nbsp; &nbsp; [1,1],<br />&","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/c3c29c5c-8b25-4372-bfcd-abed88f6f7e1.jpg","category":{"name":null,"slug":null},"tags":[],"slug":"pascals-triangle-array-easy-leetcode"},{"id":1393,"title":"Merge Sorted Array - Array - Easy - LeetCode","imageUrl":"icon_02b32bbd-c015-490d-8e8b-a74ef98ec2b0.png","dateCreated":"2020-09-25T08:32:32.823Z","dateModified":"0001-01-01T00:00:00","contributedBy":null,"content":"<pre class=\"language-csharp\"><code>public class Solution {\n    public void Merge(int[] nums1, int m, int[] nums2, int n) {\n        int i=m-1;\n        int j=n-1;\n        for(int x=m+n-1;x&gt;=0;x--){\n            if(i &gt;= 0 &amp;&amp; j &gt;= 0){\n                if(nums1[i]&gt;nums2[j]){\n           ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/02b32bbd-c015-490d-8e8b-a74ef98ec2b0.png","category":{"name":null,"slug":null},"tags":[],"slug":"merge-sorted-array-array-easy-leetcode"},{"id":1392,"title":"Search Insert Position - Array - Easy - LeetCode","imageUrl":"icon_a1b25637-a4f0-4f29-9a04-99ddfeead7b1.jpg","dateCreated":"2020-09-25T07:23:24.121Z","dateModified":"0001-01-01T00:00:00","contributedBy":null,"content":"Given a sorted array and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.\nYou may assume no duplicates in the array.\nExample 1:\nInput: [1,3,5,6], 5<br />Output: 2<br />Example 2:\nInput: [1","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a1b25637-a4f0-4f29-9a04-99ddfeead7b1.jpg","category":{"name":null,"slug":null},"tags":[],"slug":"search-insert-position-array-easy-leetcode"},{"id":1391,"title":"Remove Element - Array - Easy - LeetCode","imageUrl":"icon_92cdc541-41a9-498b-8b3c-29fbf26c4513.jpg","dateCreated":"2020-09-25T06:40:40.48Z","dateModified":"0001-01-01T00:00:00","contributedBy":null,"content":"Given an array nums and a value val, remove all instances of that value in-place and return the new length.\nDo not allocate extra space for another array, you must do this by modifying the input array in-place with O(1) extra memory.\nThe order of elements can be changed. It doesn't ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/92cdc541-41a9-498b-8b3c-29fbf26c4513.jpg","category":{"name":null,"slug":null},"tags":[],"slug":"remove-element-array-easy-leetcode"},{"id":1389,"title":"Remove Duplicates from Sorted Array - Array - Easy - LeetCode","imageUrl":"icon_3c7b6123-b164-4725-9479-59fbc7616095.png","dateCreated":"2020-09-24T12:49:58.076Z","dateModified":"0001-01-01T00:00:00","contributedBy":null,"content":"Given a sorted array nums, remove the duplicates in-place such that each element appear only once and return the new length.\nDo not allocate extra space for another array, you must do this by modifying the input array in-place with O(1) extra memory.\nExample 1:\nGiven nums = [","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/3c7b6123-b164-4725-9479-59fbc7616095.png","category":{"name":null,"slug":null},"tags":[],"slug":"remove-duplicates-from-sorted-array-array-easy-leetcode"},{"id":1387,"title":"Sum of Even Numbers After Queries - Array - Easy - LeetCode","imageUrl":"fff8b364-2d42-4ce1-a8ff-c1ff0a972594-array.png","dateCreated":"2020-06-22T14:12:25.249Z","dateModified":"0001-01-01T00:00:00","contributedBy":null,"content":"We have an array A of integers, and an array queries of queries.\r\nFor the i-th query val = queries[i][0], index = queries[i][1], we add val to A[index].&nbsp; Then, the answer to the i-th query is the sum of the even values of A.\r\n(Here, the given index = queries[i][1] is a 0-based ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/fff8b364-2d42-4ce1-a8ff-c1ff0a972594-array.png","category":{"name":null,"slug":null},"tags":[],"slug":"sum-of-even-numbers-after-queries-array-easy-leetcode"},{"id":1386,"title":"Add to Array-Form of Integer - Easy - LeetCode","imageUrl":"b1f31204-fff3-4b3b-bdbf-ed63f1f0a11d-array.png","dateCreated":"2020-06-21T15:25:19.108Z","dateModified":"0001-01-01T00:00:00","contributedBy":null,"content":"For a non-negative integer X, the array-form of X is an array of its digits in left to right order.&nbsp; For example, if X = 1231, then the array form is [1,2,3,1].\r\nGiven the array-form A of a non-negative integer X, return the array-form of the integer X+K.\r\n&nbsp;\r\nExampl","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/b1f31204-fff3-4b3b-bdbf-ed63f1f0a11d-array.png","category":{"name":null,"slug":null},"tags":[],"slug":"add-to-array-form-of-integer-easy-leetcode"},{"id":1384,"title":"Available Captures for Rook - Array - Easy - LeetCode","imageUrl":"3761725f-f78c-44a3-a182-f7ba8b012060-array.png","dateCreated":"2020-06-21T06:56:52.353Z","dateModified":"0001-01-01T00:00:00","contributedBy":null,"content":"On an 8 x 8 chessboard, there is one white rook.&nbsp; There also may be empty squares, white bishops, and black pawns.&nbsp; These are given as characters 'R', '.', 'B', and 'p' respectively. Uppercase characters represent white pieces, and lowercase characters represent black pieces.\r\nTh","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/3761725f-f78c-44a3-a182-f7ba8b012060-array.png","category":{"name":null,"slug":null},"tags":[],"slug":"available-captures-for-rook-array-easy-leetcode"}]