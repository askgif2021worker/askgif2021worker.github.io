[{"id":1712,"title":"How to Design a key-value cache to save the results of the most recent web server queries","imageUrl":"icon_0e55c5af-9a54-497f-a246-ff16a71e6bbf.png","dateCreated":"2020-11-20T06:59:50.28Z","dateModified":"2020-11-20T06:59:59.352Z","contributedBy":"sumitc91","content":"Step 1: Outline use cases and constraints<br />Gather requirements and scope the problem. Ask questions to clarify use cases and constraints. Discuss assumptions.\nWithout an interviewer to address clarifying questions, we'll define some use cases and constraints.\nUse cases<br />We'l","ampImage":null,"category":{"name":"tutorials","slug":"tutorials"},"tags":[{"name":"design","slug":"design"},{"name":"interview","slug":"interview"},{"name":"system-design","slug":"system-design"}],"slug":"how-to-design-a-key-value-cache-to-save-the-results-of-the-most-recent-web-server-queries"},{"id":1688,"title":"How to Design the data structures for a social network","imageUrl":"icon_031621dc-30c0-4e0d-ba31-1f20a3884f5c.jpg","dateCreated":"2020-11-20T06:57:07.127Z","dateModified":"2020-11-20T06:57:27.446Z","contributedBy":"sumitc91","content":"Step 1: Outline use cases and constraints<br />Gather requirements and scope the problem. Ask questions to clarify use cases and constraints. Discuss assumptions.\nWithout an interviewer to address clarifying questions, we'll define some use cases and constraints.\nUse cases<br />We'l","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/031621dc-30c0-4e0d-ba31-1f20a3884f5c.jpg","category":{"name":"tutorials","slug":"tutorials"},"tags":[{"name":"design","slug":"design"},{"name":"interview","slug":"interview"},{"name":"system-design","slug":"system-design"}],"slug":"how-to-design-the-data-structures-for-a-social-network"},{"id":1687,"title":"How to Design Mint.com","imageUrl":"icon_2709cf5f-1f6f-435b-bf00-9cf152142df5.png","dateCreated":"2020-11-20T06:53:27.643Z","dateModified":"2020-11-20T06:53:36.94Z","contributedBy":"sumitc91","content":"Step 1: Outline use cases and constraints<br />Gather requirements and scope the problem. Ask questions to clarify use cases and constraints. Discuss assumptions.\nWithout an interviewer to address clarifying questions, we'll define some use cases and constraints.\nUse cases<br />We'l","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/2709cf5f-1f6f-435b-bf00-9cf152142df5.png","category":{"name":"tutorials","slug":"tutorials"},"tags":[{"name":"design","slug":"design"},{"name":"interview","slug":"interview"},{"name":"system-design","slug":"system-design"}],"slug":"how-to-design-mint.com"},{"id":1686,"title":"How to Design a web crawler","imageUrl":"icon_f983d8a0-6ee2-4024-8702-47973c582627.png","dateCreated":"2020-11-20T06:47:56.023Z","dateModified":"2020-11-20T06:48:08.443Z","contributedBy":"sumitc91","content":"Step 1: Outline use cases and constraints<br />Gather requirements and scope the problem. Ask questions to clarify use cases and constraints. Discuss assumptions.\nWithout an interviewer to address clarifying questions, we'll define some use cases and constraints.\nUse cases<br />We'l","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/f983d8a0-6ee2-4024-8702-47973c582627.png","category":{"name":"tutorials","slug":"tutorials"},"tags":[{"name":"design","slug":"design"},{"name":"interview","slug":"interview"},{"name":"system-design","slug":"system-design"}],"slug":"how-to-design-a-web-crawler"},{"id":1685,"title":"How to Design the Twitter timeline and search","imageUrl":"icon_4cffb0b1-c317-4027-9ff2-188ac3240e74.jpg","dateCreated":"2020-11-20T06:38:46.064Z","dateModified":"2020-11-20T06:39:08.542Z","contributedBy":"sumitc91","content":"Design the Facebook feed and Design Facebook search are similar questions.\nStep 1: Outline use cases and constraints<br />Gather requirements and scope the problem. Ask questions to clarify use cases and constraints. Discuss assumptions.\nWithout an interviewer to address clarifying ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/4cffb0b1-c317-4027-9ff2-188ac3240e74.jpg","category":{"name":"tutorials","slug":"tutorials"},"tags":[{"name":"design","slug":"design"},{"name":"interview","slug":"interview"},{"name":"system-design","slug":"system-design"},{"name":"twitter","slug":"twitter"}],"slug":"how-to-design-the-twitter-timeline-and-search"},{"id":1684,"title":"How to Design Pastebin.com (or Bit.ly)","imageUrl":"icon_9d14bd09-d9e3-48e7-8309-9e324e9d51de.jpg","dateCreated":"2020-11-20T05:04:08.797Z","dateModified":"2020-11-20T05:04:26.605Z","contributedBy":"sumitc91","content":"Design Bit.ly - is a similar question, except pastebin requires storing the paste contents instead of the original unshortened url.\nStep 1: Outline use cases and constraints<br />Gather requirements and scope the problem. Ask questions to clarify use cases and constraints. Discuss assumpti","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/9d14bd09-d9e3-48e7-8309-9e324e9d51de.jpg","category":{"name":"tutorials","slug":"tutorials"},"tags":[{"name":"design","slug":"design"},{"name":"interview","slug":"interview"},{"name":"system-design","slug":"system-design"}],"slug":"how-to-design-pastebin.com-or-bit.ly"},{"id":1683,"title":"How to approach a system design interview question?","imageUrl":"icon_fbaef721-6795-45be-bd0a-7e132d4a2788.jpg","dateCreated":"2020-11-20T04:35:47.854Z","dateModified":"2020-11-20T04:36:13.542Z","contributedBy":"sumitc91","content":"The system design interview is an open-ended conversation. You are expected to lead it.\nYou can use the following steps to guide the discussion. To help solidify this process, work through the System design interview questions with the solutions section using the following steps.\nSt","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/fbaef721-6795-45be-bd0a-7e132d4a2788.jpg","category":{"name":"tutorials","slug":"tutorials"},"tags":[{"name":"design","slug":"design"},{"name":"interview","slug":"interview"},{"name":"system-design","slug":"system-design"}],"slug":"how-to-approach-a-system-design-interview-question"},{"id":130,"title":"How to find the longest border of a string?","imageUrl":"6ceece0b-804d-4456-95dc-5a9ca6c24cda_string-algorithm.png","dateCreated":"2018-09-01T08:01:12.733Z","dateModified":"2018-11-09T11:59:09.702Z","contributedBy":"AskGif","content":"The border of a string is a substring which is both a proper prefix and proper suffix of the string &mdash; \"proper\" meaning that the whole string does not count as a substring. The longest border of x is \"ab\". The longest border of y is \"abab\" (the prefix and suffix can overlap).\r\nMore de","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/6ceece0b-804d-4456-95dc-5a9ca6c24cda_string-algorithm.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"c-plus-plus","slug":"c-plus-plus"},{"name":"amazon","slug":"amazon"},{"name":"string","slug":"string"},{"name":"interview","slug":"interview"},{"name":"questions","slug":"questions"},{"name":"algorithm","slug":"algorithm"},{"name":"border-string","slug":"border-string"}],"slug":"how-to-find-the-longest-border-of-a-string"},{"id":112,"title":"Search an element in binary tree without recursion.","imageUrl":"b3ea6acf-6279-4e29-b3cd-bb09edbc2784_binary-tree.jpg","dateCreated":"2018-08-16T09:08:38.069Z","dateModified":"2018-08-16T09:09:08.341Z","contributedBy":"AskGif","content":"We can use level order traversal for solving this problem. The only change required in level order traversal is, instead of printing the date we just need to check whether the root data is equal to the element we want to search.\r\nsource:&nbsp;Data Structures and Algorithms Made Easy in Jav","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/b3ea6acf-6279-4e29-b3cd-bb09edbc2784_binary-tree.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"interview","slug":"interview"},{"name":"java","slug":"java"},{"name":"traversal","slug":"traversal"},{"name":"tree","slug":"tree"},{"name":"questions","slug":"questions"},{"name":"binary-tree","slug":"binary-tree"},{"name":"level-order","slug":"level-order"}],"slug":"search-an-element-in-binary-tree-without-recursion"},{"id":111,"title":"Find maximum element in binary tree without recursion.","imageUrl":"852f8357-9b87-4af3-9054-484bbc13f1fd_BST_Example.jpg","dateCreated":"2018-08-16T08:35:11.21Z","dateModified":"2018-08-16T08:36:54.976Z","contributedBy":"AskGif","content":"We could have used either PreOrder, InOrder or PostOrder traversal to find the maximum in a Tree but as it is mentioned that we need to find the maximum without using Recursion.\r\nUsing Level Order Traversal we can find the Maximum element. We just need to observe the elements data while de","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/852f8357-9b87-4af3-9054-484bbc13f1fd_BST_Example.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"level-order","slug":"level-order"},{"name":"tree","slug":"tree"},{"name":"questions","slug":"questions"},{"name":"binary-tree","slug":"binary-tree"},{"name":"algorithm","slug":"algorithm"},{"name":"interview","slug":"interview"},{"name":"traversal","slug":"traversal"}],"slug":"find-maximum-element-in-binary-tree-without-recursion"},{"id":108,"title":"How to implement Level Order Traversal in Binary Tree?","imageUrl":"7833549b-eb6c-47f7-a6b0-1364f1434f70_binary_tree_breadth-first_traversal.png","dateCreated":"2018-08-14T14:06:33.296Z","dateModified":"2018-08-14T14:06:56.625Z","contributedBy":"AskGif","content":"Trees can also be traversed in level-order, where we visit every node on a level before going to a lower level. This search is referred to as a breadth-first search (BFS), as the search tree is broadened as much as possible on each depth before going to the next depth.\r\nJava implementation","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/7833549b-eb6c-47f7-a6b0-1364f1434f70_binary_tree_breadth-first_traversal.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"java","slug":"java"},{"name":"tree","slug":"tree"},{"name":"interview","slug":"interview"},{"name":"questions","slug":"questions"},{"name":"level-order","slug":"level-order"},{"name":"traversal","slug":"traversal"}],"slug":"how-to-implement-level-order-traversal-in-binary-tree"},{"id":105,"title":"How to implement PostOrder Traversal in Binary Tree?","imageUrl":"d82cf369-0894-48fd-ba39-de927c3291d9_post-order-traversal.png","dateCreated":"2018-08-09T14:28:23.665Z","dateModified":"2018-08-09T14:29:04.831Z","contributedBy":"AskGif","content":"PostOrder Traversal is different from InOrder Traversal and PreOrder Traversal. In this Traversal approach we first traverse through left and then right and at the end, we traverse to the node data.\r\nIn PostOrder traversal, the root is visited after both subtrees. PostOrder traversal is de","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/d82cf369-0894-48fd-ba39-de927c3291d9_post-order-traversal.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"tree","slug":"tree"},{"name":"traversal","slug":"traversal"},{"name":"java","slug":"java"},{"name":"recursion","slug":"recursion"},{"name":"questions","slug":"questions"},{"name":"postorder","slug":"postorder"},{"name":"interview","slug":"interview"}],"slug":"how-to-implement-postorder-traversal-in-binary-tree"}]