[{"id":1598,"title":"Find the Town Judge - Tree - Easy - LeetCode","imageUrl":"icon_2f8d0898-e59c-49cd-b25f-5234ed605d94.jpg","dateCreated":"2020-10-14T09:05:56.984Z","dateModified":"2020-10-14T09:06:09.069Z","contributedBy":"sumitc91","content":"In a town, there are N people labelled from 1 to N. &nbsp;There is a rumor that one of these people is secretly the town judge.\nIf the town judge exists, then:\nThe town judge trusts nobody.<br />Everybody (except for the town judge) trusts the town judge.<br />There is exactly one p","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/2f8d0898-e59c-49cd-b25f-5234ed605d94.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"graph","slug":"graph"},{"name":"leetcode","slug":"leetcode"}],"slug":"find-the-town-judge-tree-easy-leetcode"},{"id":1597,"title":"Flood Fill - Tree - Easy - LeetCode","imageUrl":"icon_0e3c9311-ee03-4845-8887-471eb8b67c05.jpg","dateCreated":"2020-10-09T13:26:25.345Z","dateModified":"2020-10-09T13:26:36.925Z","contributedBy":"sumitc91","content":"An image is represented by a 2-D array of integers, each integer representing the pixel value of the image (from 0 to 65535).\nGiven a coordinate (sr, sc) representing the starting pixel (row and column) of the flood fill, and a pixel value newColor, \"flood fill\" the image.\nTo perfor","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/0e3c9311-ee03-4845-8887-471eb8b67c05.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"flood-fill-tree-easy-leetcode"},{"id":1596,"title":"Sum of Root To Leaf Binary Numbers - Tree - Easy - LeetCode","imageUrl":"icon_41e87329-1dad-4856-9c47-60b67b520656.jpg","dateCreated":"2020-10-09T09:37:18.648Z","dateModified":"2020-10-09T09:37:29.591Z","contributedBy":"sumitc91","content":"You are given the root of a binary tree where each node has a value 0 or 1. &nbsp;Each root-to-leaf path represents a binary number starting with the most significant bit. &nbsp;For example, if the path is 0 -&gt; 1 -&gt; 1 -&gt; 0 -&gt; 1, then this could represent 01101 in binary, which is 13.<","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/41e87329-1dad-4856-9c47-60b67b520656.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"sum-of-root-to-leaf-binary-numbers-tree-easy-leetcode"},{"id":1595,"title":"Cousins in Binary Tree - Tree - Easy - LeetCode","imageUrl":"icon_249b4ce9-a2e8-4b2a-a369-264d0c802503.jpg","dateCreated":"2020-10-09T09:24:10.362Z","dateModified":"2020-10-09T09:24:23.315Z","contributedBy":"sumitc91","content":"In a binary tree, the root node is at depth 0, and children of each depth k node are at depth k+1.\nTwo nodes of a binary tree are cousins if they have the same depth, but have different parents.\nWe are given the root of a binary tree with unique values, and the values x and y of two","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/249b4ce9-a2e8-4b2a-a369-264d0c802503.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"cousins-in-binary-tree-tree-easy-leetcode"},{"id":1594,"title":"Univalued Binary Tree - Tree - Easy - LeetCode","imageUrl":"icon_932c5fe4-9686-4df3-9d52-28ee24f22cf5.jpg","dateCreated":"2020-10-09T08:57:56.154Z","dateModified":"2020-10-09T08:58:09.124Z","contributedBy":"sumitc91","content":"A binary tree is univalued if every node in the tree has the same value.\nReturn true if and only if the given tree is univalued.\n&nbsp;\nExample 1:\n<br />Input: [1,1,1,1,1,null,1]<br />Output: true<br />Example 2:\n<br />Input: [2,2,2,5,2]<br />Output: false<br />","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/932c5fe4-9686-4df3-9d52-28ee24f22cf5.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"univalued-binary-tree-tree-easy-leetcode"},{"id":1593,"title":"Range Sum of BST - Tree - Easy - LeetCode","imageUrl":"icon_2d446765-9ada-4072-93c3-eedfb56f7794.jpg","dateCreated":"2020-10-09T08:49:41.585Z","dateModified":"2020-10-09T08:49:55.954Z","contributedBy":"sumitc91","content":"Given the root node of a binary search tree, return the sum of values of all nodes with value between L and R (inclusive).\nThe binary search tree is guaranteed to have unique values.\n&nbsp;\nExample 1:\nInput: root = [10,5,15,3,7,null,18], L = 7, R = 15<br />Output: 32<b","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/2d446765-9ada-4072-93c3-eedfb56f7794.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"range-sum-of-bst-tree-easy-leetcode"},{"id":1592,"title":"Increasing Order Search Tree - Tree - Easy - LeetCode","imageUrl":"icon_32836fb6-9705-48a7-be70-4bd66b1c621e.jpg","dateCreated":"2020-10-09T07:45:00.338Z","dateModified":"2020-10-09T07:45:33.127Z","contributedBy":"sumitc91","content":"Given a binary search tree, rearrange the tree in in-order so that the leftmost node in the tree is now the root of the tree, and every node has no left child and only 1 right child.\nExample 1:<br />Input: [5,3,6,2,4,null,8,1,null,null,null,7,9]\n&nbsp; &nbsp; &nbsp; &nbsp;5<br />&nb","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/32836fb6-9705-48a7-be70-4bd66b1c621e.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"increasing-order-search-tree-tree-easy-leetcode"},{"id":1591,"title":"Leaf-Similar Trees - Tree - Easy - LeetCode","imageUrl":"icon_db0b4415-6ae2-4e32-b111-ad26e1d99874.jpg","dateCreated":"2020-10-09T05:05:38.157Z","dateModified":"2020-10-09T05:05:50.02Z","contributedBy":"sumitc91","content":"Consider all the leaves of a binary tree, from left to right order, the values of those leaves form a leaf value sequence.\nFor example, in the given tree above, the leaf value sequence is (6, 7, 4, 9, 8).\nTwo binary trees are considered leaf-similar if their leaf value sequence is t","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/db0b4415-6ae2-4e32-b111-ad26e1d99874.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"leaf-similar-trees-tree-easy-leetcode"},{"id":1590,"title":"Minimum Distance Between BST Nodes - Tree - Easy - LeetCode","imageUrl":"icon_a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","dateCreated":"2020-10-09T04:46:13.287Z","dateModified":"2020-10-09T04:46:30.726Z","contributedBy":"sumitc91","content":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\nExample :\nInput: root = [4,2,6,1,3,null,null]<br />Output: 1<br />Explanation:<br />Note that root is a TreeNode object, not an array.</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/a016ac3e-361e-465e-ae63-03484dbf5a66.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"minimum-distance-between-bst-nodes-tree-easy-leetcode"},{"id":1589,"title":"Search in a Binary Search Tree - Tree - Easy - LeetCode","imageUrl":"icon_862ff4cf-5f64-4e7f-92ee-63a4017cae63.jpg","dateCreated":"2020-10-09T04:19:45.942Z","dateModified":"2020-10-09T04:19:56.582Z","contributedBy":"sumitc91","content":"Given the root node of a binary search tree (BST) and a value. You need to find the node in the BST that the node's value equals the given value. Return the subtree rooted with that node. If such node doesn't exist, you should return NULL.\nFor example,&nbsp;\nGiven the tree:<br />&nb","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/862ff4cf-5f64-4e7f-92ee-63a4017cae63.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"search-in-a-binary-search-tree-tree-easy-leetcode"},{"id":1588,"title":"Longest Univalue Path - Tree - Easy - LeetCode","imageUrl":"icon_767bd537-2951-47b6-8d05-b9ca6b615826.jpg","dateCreated":"2020-10-08T12:25:34.461Z","dateModified":"2020-10-08T12:25:45.238Z","contributedBy":"sumitc91","content":"Given a binary tree, find the length of the longest path where each node in the path has the same value. This path may or may not pass through the root.\nThe length of path between two nodes is represented by the number of edges between them.\n&nbsp;\nExample 1:\nInput:</p","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/767bd537-2951-47b6-8d05-b9ca6b615826.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"longest-univalue-path-tree-easy-leetcode"},{"id":1587,"title":"Second Minimum Node In a Binary Tree - Tree - Easy - LeetCode","imageUrl":"icon_6562b9e9-1f6e-4026-adfb-418518d45b25.jpg","dateCreated":"2020-10-08T05:47:45.661Z","dateModified":"2020-10-08T05:48:05.054Z","contributedBy":"sumitc91","content":"Given a non-empty special binary tree consisting of nodes with the non-negative value, where each node in this tree has exactly two or zero sub-node. If the node has two sub-nodes, then this node's value is the smaller value among its two sub-nodes. More formally, the property root.val = min(root","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/6562b9e9-1f6e-4026-adfb-418518d45b25.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"binary-tree","slug":"binary-tree"},{"name":"डेटा-संरचना","slug":"data-structure"},{"name":"आसान","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"tree","slug":"tree"}],"slug":"second-minimum-node-in-a-binary-tree-tree-easy-leetcode"}]