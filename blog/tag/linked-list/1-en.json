[{"id":1483,"title":"Convert Binary Number in a Linked List to Integer - Linked List - Easy - LeetCode","imageUrl":"icon_f18ab3bf-13c9-4043-bee7-f4e1f8b0bc65.jpg","dateCreated":"2020-09-30T10:48:03.445Z","dateModified":"2020-09-30T10:48:19.512Z","contributedBy":"sumitc91","content":"Given head which is a reference node to a singly-linked list. The value of each node in the linked list is either 0 or 1. The linked list holds the binary representation of a number.\nReturn the decimal value of the number in the linked list.\n&nbsp;\nExample 1:\n<br />Inp","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/f18ab3bf-13c9-4043-bee7-f4e1f8b0bc65.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"linked-list","slug":"linked-list"}],"slug":"convert-binary-number-in-a-linked-list-to-integer-linked-list-easy-leetcode","total":18},{"id":1482,"title":"Middle of the Linked List - Linked List - Easy - LeetCode","imageUrl":"icon_ba3ddd2b-2bea-48c7-a498-3694471f2dac.jpg","dateCreated":"2020-09-30T10:35:56.618Z","dateModified":"2020-09-30T10:36:09.37Z","contributedBy":"sumitc91","content":"Given a non-empty, singly linked list with head node head, return a middle node of linked list.\nIf there are two middle nodes, return the second middle node.\n&nbsp;\nExample 1:\nInput: [1,2,3,4,5]<br />Output: Node 3 from this list (Serialization: [3,4,5])<br />The retur","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/ba3ddd2b-2bea-48c7-a498-3694471f2dac.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"linked-list","slug":"linked-list"}],"slug":"middle-of-the-linked-list-linked-list-easy-leetcode","total":18},{"id":1481,"title":"Delete Node in a Linked List - Linked List - Easy - LeetCode","imageUrl":"icon_62375622-c40b-4a40-a61f-7cce7e5b39ec.jpg","dateCreated":"2020-09-30T10:20:09.755Z","dateModified":"2020-09-30T10:20:20.742Z","contributedBy":"sumitc91","content":"Write a function to delete a node in a singly-linked list. You will not be given access to the head of the list, instead you will be given access to the node to be deleted directly.\nIt is guaranteed that the node to be deleted is not a tail node in the list.\n&nbsp;\nExample 1:","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/62375622-c40b-4a40-a61f-7cce7e5b39ec.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"linked-list","slug":"linked-list"}],"slug":"delete-node-in-a-linked-list-linked-list-easy-leetcode","total":18},{"id":1480,"title":"Palindrome Linked List - Linked List - Easy - LeetCode","imageUrl":"icon_27fe1716-6853-4551-bc24-ce6a639d5a8c.jpg","dateCreated":"2020-09-30T10:05:59.602Z","dateModified":"2020-09-30T10:06:16.532Z","contributedBy":"sumitc91","content":"Given a singly linked list, determine if it is a palindrome.\nExample 1:\nInput: 1-&gt;2<br />Output: false<br />Example 2:\nInput: 1-&gt;2-&gt;2-&gt;1<br />Output: true<br />Follow up:<br />Could you do it in O(n) time and O(1) space?\n<pre class=\"language-csharp\"><code>/**\n","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/27fe1716-6853-4551-bc24-ce6a639d5a8c.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"linked-list","slug":"linked-list"}],"slug":"palindrome-linked-list-linked-list-easy-leetcode","total":18},{"id":1479,"title":"Remove Linked List Elements - Linked List - Easy - LeetCode","imageUrl":"icon_c6b1c875-5da7-4e6c-b495-f37e7c3329c7.jpg","dateCreated":"2020-09-30T09:47:39.357Z","dateModified":"2020-09-30T09:47:50.848Z","contributedBy":"sumitc91","content":"Remove all elements from a linked list of integers that have value val.\nExample:\nInput: &nbsp;1-&gt;2-&gt;6-&gt;3-&gt;4-&gt;5-&gt;6, val = 6<br />Output: 1-&gt;2-&gt;3-&gt;4-&gt;5\n<pre class=\"language-csharp\"><code>/**\n * Definition for singly-linked list.\n * public class ListNo","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/c6b1c875-5da7-4e6c-b495-f37e7c3329c7.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"linked-list","slug":"linked-list"}],"slug":"remove-linked-list-elements-linked-list-easy-leetcode","total":18},{"id":1478,"title":"Intersection of Two Linked Lists - Linked List - Easy - LeetCode","imageUrl":"icon_e4d0c0a5-e8f9-4a5f-a205-2fa6fa4c5c30.png","dateCreated":"2020-09-30T09:34:07.693Z","dateModified":"2020-09-30T09:34:54.659Z","contributedBy":"sumitc91","content":"Write a program to find the node at which the intersection of two singly linked lists begins.\nFor example, the following two linked lists:\n<br />begin to intersect at node c1.\n&nbsp;\nExample 1:\n<br />Input: intersectVal = 8, listA = [4,1,8,4,5], listB = [5,6,1,8","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/e4d0c0a5-e8f9-4a5f-a205-2fa6fa4c5c30.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"linked-list","slug":"linked-list"}],"slug":"intersection-of-two-linked-lists-linked-list-easy-leetcode","total":18},{"id":1477,"title":"Linked List Cycle - Linked List - Easy - LeetCode","imageUrl":"icon_fa3b30fb-61c7-4b4a-b410-6d9ab29ea43a.jpg","dateCreated":"2020-09-30T09:23:02.954Z","dateModified":"2020-09-30T09:23:12.143Z","contributedBy":"sumitc91","content":"Given head, the head of a linked list, determine if the linked list has a cycle in it.\nThere is a cycle in a linked list if there is some node in the list that can be reached again by continuously following the next pointer. Internally, pos is used to denote the index of the node that tail","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/fa3b30fb-61c7-4b4a-b410-6d9ab29ea43a.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"linked-list","slug":"linked-list"}],"slug":"linked-list-cycle-linked-list-easy-leetcode","total":18},{"id":1476,"title":"Remove Duplicates from Sorted List - Linked List - Easy - LeetCode","imageUrl":"icon_da1df592-f616-4075-99ea-4ca009e5a2a7.jpg","dateCreated":"2020-09-30T09:14:36.131Z","dateModified":"2020-09-30T09:14:51.293Z","contributedBy":"sumitc91","content":"Given a sorted linked list, delete all duplicates such that each element appear only once.\nExample 1:\nInput: 1-&gt;1-&gt;2<br />Output: 1-&gt;2<br />Example 2:\nInput: 1-&gt;1-&gt;2-&gt;3-&gt;3<br />Output: 1-&gt;2-&gt;3\n<pre class=\"language-csharp\"><code>/**\n * Definition","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/da1df592-f616-4075-99ea-4ca009e5a2a7.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"linked-list","slug":"linked-list"}],"slug":"remove-duplicates-from-sorted-list-linked-list-easy-leetcode","total":18},{"id":1475,"title":"Merge Two Sorted Lists - Linked List - Easy - LeetCode","imageUrl":"icon_f88fd821-3cfc-43d6-b6bc-185e77d40f35.jpg","dateCreated":"2020-09-30T09:05:26.277Z","dateModified":"2020-09-30T09:05:39.983Z","contributedBy":"sumitc91","content":"Merge two sorted linked lists and return it as a new sorted list. The new list should be made by splicing together the nodes of the first two lists.\nExample:\nInput: 1-&gt;2-&gt;4, 1-&gt;3-&gt;4<br />Output: 1-&gt;1-&gt;2-&gt;3-&gt;4-&gt;4\n<pre class=\"language-csharp\"><code>/**\n ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/f88fd821-3cfc-43d6-b6bc-185e77d40f35.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"linked-list","slug":"linked-list"}],"slug":"merge-two-sorted-lists-linked-list-easy-leetcode","total":18},{"id":97,"title":"What is a Linked List?","imageUrl":"92f2fc67-2e99-4054-b96b-936fd01ebeb0_linked-list-with-label.png","dateCreated":"2018-08-08T09:14:37.7Z","dateModified":"2018-08-08T09:16:54.109Z","contributedBy":"AskGif","content":"A linked list is a data structure used for storing collections of data. A linked list has the following properties.\r\n- Successive elements are connected by pointers\r\n- The last element points to NULL\r\n- Can grow or shrink in size during execution of a program\r\n- Can be","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/92f2fc67-2e99-4054-b96b-936fd01ebeb0_linked-list-with-label.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"questions","slug":"questions"},{"name":"interview","slug":"interview"},{"name":"linked-list","slug":"linked-list"}],"slug":"what-is-a-linked-list","total":18},{"id":95,"title":"Given two sorted Linked Lists, we need to merge them into the third list in sorted order.","imageUrl":"9f2fba57-f42f-47d6-a5dd-a7f6708ecd38_merge-sorted-linked-list.png","dateCreated":"2018-08-07T16:21:56.506Z","dateModified":"2018-08-07T16:22:04.996Z","contributedBy":"AskGif","content":"We are Given two Linked Lists which are already sorted. We need to create a new linked list using these two linked lists and it is required to be in sorted order. One way we can do is to append second string in the first one and then will apply quick sort which will be having a time complexity of","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/9f2fba57-f42f-47d6-a5dd-a7f6708ecd38_merge-sorted-linked-list.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"interview","slug":"interview"},{"name":"questions","slug":"questions"},{"name":"java","slug":"java"},{"name":"linked-list","slug":"linked-list"}],"slug":"given-two-sorted-linked-lists-we-need-to-merge-them-into-the-third-list-in-sorted-order","total":18},{"id":94,"title":"Check whether the given Linked List length is even or odd?","imageUrl":"c9526b27-eb8a-4d38-a1f2-66e2e9198224_Odd-Even-Linked-List.jpg","dateCreated":"2018-08-07T15:40:27.371Z","dateModified":"2018-08-07T15:40:35.099Z","contributedBy":"AskGif","content":"The question is to find if the given linked list length is even or odd in optimum time. We will use a&nbsp;fast pointer, i.e 2x pointer. the fast pointer moves two nodes at a time. In the end, we will either be having the node as Null or the Node will be the last node in the Linked list. if the n","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/c9526b27-eb8a-4d38-a1f2-66e2e9198224_Odd-Even-Linked-List.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"questions","slug":"questions"},{"name":"interview","slug":"interview"},{"name":"linked-list","slug":"linked-list"},{"name":"java","slug":"java"}],"slug":"check-whether-the-given-linked-list-length-is-even-or-odd","total":18}]