[{"id":1555,"title":"Shuffle String - Sort - Easy - LeetCode","imageUrl":"icon_e9e475ea-ec0e-48be-b9e3-0d0788304ef0.jpg","dateCreated":"2020-10-05T11:06:09.93Z","dateModified":"2020-10-05T11:06:22.728Z","contributedBy":"sumitc91","content":"Given a string s and an integer array indices of the same length.\nThe string s will be shuffled such that the character at the ith position moves to indices[i] in the shuffled string.\nReturn the shuffled string.\n&nbsp;\nExample 1:\n<br />Input: s = \"codeleet\", ind","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/e9e475ea-ec0e-48be-b9e3-0d0788304ef0.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"sorting","slug":"sorting"}],"slug":"shuffle-string-sort-easy-leetcode","total":5},{"id":1554,"title":"Sort Integers by The Number of 1 Bits - Sort - Easy - LeetCode","imageUrl":"icon_7007c4d9-2958-4b6a-8a5e-379076ab7b5f.jpg","dateCreated":"2020-10-05T10:44:45.35Z","dateModified":"2020-10-05T10:45:04.655Z","contributedBy":"sumitc91","content":"Given an integer array arr. You have to sort the integers in the array in ascending order by the number of 1's in their binary representation and in case of two or more integers have the same number of 1's you have to sort them in ascending order.\nReturn the sorted array.\n&nbsp;","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/7007c4d9-2958-4b6a-8a5e-379076ab7b5f.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"sorting","slug":"sorting"}],"slug":"sort-integers-by-the-number-of-1-bits-sort-easy-leetcode","total":5},{"id":1553,"title":"Matrix Cells in Distance Order - Sort - Easy - LeetCode","imageUrl":"icon_740965fd-d849-4ae0-8784-87f437a62181.jpg","dateCreated":"2020-10-05T10:29:34.035Z","dateModified":"2020-10-05T10:29:44.075Z","contributedBy":"sumitc91","content":"We are given a matrix with R rows and C columns has cells with integer coordinates (r, c), where 0 &lt;= r &lt; R and 0 &lt;= c &lt; C.\nAdditionally, we are given a cell in that matrix with coordinates (r0, c0).\nReturn the coordinates of all cells in the matrix, sorted by their dist","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/740965fd-d849-4ae0-8784-87f437a62181.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"graph","slug":"graph"},{"name":"leetcode","slug":"leetcode"},{"name":"sorting","slug":"sorting"}],"slug":"matrix-cells-in-distance-order-sort-easy-leetcode","total":5},{"id":36,"title":"Implement Quick Sort Using C-Sharp.","imageUrl":"ac952349-b324-4976-91ac-a217eabcde0f_Sorting_quicksort_anim.gif","dateCreated":"2018-07-19T07:01:11.967Z","dateModified":"2018-07-19T07:01:25.109Z","contributedBy":"AskGif","content":"Quicksort (sometimes called partition-exchange sort) is an efficient sorting algorithm, serving as a systematic method for placing the elements of an array in order. Developed by Tony Hoare in 1959 and published in 1961, it is still a commonly used algorithm for sorting. When implemented well, it","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/ac952349-b324-4976-91ac-a217eabcde0f_Sorting_quicksort_anim.gif","category":{"name":"coding","slug":"coding"},"tags":[{"name":"c-sharp","slug":"c-sharp"},{"name":"interview","slug":"interview"},{"name":"algorithm","slug":"algorithm"},{"name":"sorting","slug":"sorting"}],"slug":"implement-quick-sort-using-c-sharp","total":5},{"id":35,"title":"Implement Merge Sort Using C-Sharp","imageUrl":"afd5c0fc-11e4-4b0d-b893-9ce977173328_merge_sort.png","dateCreated":"2018-07-19T05:35:20.326Z","dateModified":"2018-07-19T05:35:32.691Z","contributedBy":"AskGif","content":"In computer science, merge sort (also commonly spelled mergesort) is an efficient, general-purpose, comparison-based sorting algorithm. Most implementations produce a stable sort, which means that the implementation preserves the input order of equal elements in the sorted output. Merge sort is a","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/afd5c0fc-11e4-4b0d-b893-9ce977173328_merge_sort.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"c-sharp","slug":"c-sharp"},{"name":"sorting","slug":"sorting"},{"name":"algorithm","slug":"algorithm"},{"name":"interview","slug":"interview"}],"slug":"implement-merge-sort-using-c-sharp","total":5}]