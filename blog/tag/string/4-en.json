[{"id":1311,"title":"String Compression","imageUrl":"dca61cdd-a186-46ce-bdee-60a1e2febdd4-q3.jpg","dateCreated":"2020-05-21T16:38:51.76Z","dateModified":"2020-05-21T16:39:04.845Z","contributedBy":"AskGif","content":"Given an array of characters, compress it in-place.\r\nThe length after compression must always be smaller than or equal to the original array.\r\nEvery element of the array should be a character (not int) of length 1.\r\nAfter you are done modifying the input array in-place, retur","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/dca61cdd-a186-46ce-bdee-60a1e2febdd4-q3.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"leetcode","slug":"leetcode"},{"name":"algorithm","slug":"algorithm"},{"name":"string","slug":"string"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"}],"slug":"string-compression","total":76},{"id":1309,"title":"Repeated Substring Pattern","imageUrl":"17cff796-0ff5-4ca5-9eb0-9bca50142c96-q3.jpg","dateCreated":"2020-05-16T11:59:28.213Z","dateModified":"2020-05-16T11:59:40.15Z","contributedBy":"AskGif","content":"Given a non-empty string check if it can be constructed by taking a substring of it and appending multiple copies of the substring together. You may assume the given string consists of lowercase English letters only and its length will not exceed 10000.\r\nExample 1:\r\nInput: \"abab\"</p","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/17cff796-0ff5-4ca5-9eb0-9bca50142c96-q3.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"},{"name":"algorithm","slug":"algorithm"},{"name":"leetcode","slug":"leetcode"},{"name":"string","slug":"string"}],"slug":"repeated-substring-pattern","total":76},{"id":1308,"title":"Detect Capital","imageUrl":"0d288d6f-a8e0-4be1-96e1-e945c388e72a-q3.jpg","dateCreated":"2020-05-15T12:22:00.353Z","dateModified":"2020-05-16T11:17:30.692Z","contributedBy":"AskGif","content":"Given a word, you need to judge whether the usage of capitals in it is right or not.\r\nWe define the usage of capitals in a word to be right when one of the following cases holds:\r\nAll letters in this word are capitals, like \"USA\".\r\nAll letters in this word are not capitals, l","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/0d288d6f-a8e0-4be1-96e1-e945c388e72a-q3.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"leetcode","slug":"leetcode"},{"name":"data-structure","slug":"data-structure"},{"name":"string","slug":"string"},{"name":"algorithm","slug":"algorithm"},{"name":"easy","slug":"easy"}],"slug":"detect-capital","total":76},{"id":1307,"title":"Longest Uncommon Subsequence I","imageUrl":"ca18c56c-568f-405d-b579-53c576fa306a-q3.jpg","dateCreated":"2020-05-13T15:51:12.178Z","dateModified":"2020-05-13T15:57:07.859Z","contributedBy":"AskGif","content":"Given two strings, you need to find the longest uncommon subsequence of these two strings. The longest uncommon subsequence is defined as the longest subsequence of one of these strings and this subsequence should not be any subsequence of the other string.\r\nA subsequence is a sequence tha","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/ca18c56c-568f-405d-b579-53c576fa306a-q3.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"leetcode","slug":"leetcode"},{"name":"algorithm","slug":"algorithm"},{"name":"easy","slug":"easy"},{"name":"string","slug":"string"},{"name":"data-structure","slug":"data-structure"}],"slug":"longest-uncommon-subsequence-i","total":76},{"id":1305,"title":"Reverse String II","imageUrl":"2f7253c7-1fbf-46e3-83f8-d5cd6242d178-q3.jpg","dateCreated":"2020-05-11T15:35:55.195Z","dateModified":"2020-05-11T15:37:02.172Z","contributedBy":"AskGif","content":"Given a string and an integer k, you need to reverse the first k characters for every 2k characters counting from the start of the string. If there are less than k characters left, reverse all of them. If there are less than 2k but greater than or equal to k characters, then reverse the first k c","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/2f7253c7-1fbf-46e3-83f8-d5cd6242d178-q3.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"leetcode","slug":"leetcode"},{"name":"algorithm","slug":"algorithm"},{"name":"easy","slug":"easy"},{"name":"data-structure","slug":"data-structure"},{"name":"string","slug":"string"}],"slug":"reverse-string-ii","total":76},{"id":1304,"title":"Student Attendance Record I","imageUrl":"23658f8c-7957-4dd2-8aa8-c9e2196bbcad-q3.jpg","dateCreated":"2020-05-11T14:22:55.838Z","dateModified":"2020-05-11T14:23:33.207Z","contributedBy":"AskGif","content":"You are given a string representing an attendance record for a student. The record only contains the following three characters:\r\n'A' : Absent.\r\n'L': Late.\r\n'P' : Present.\r\nA student could be rewarded if his attendance record doesn't contain more than one 'A' (absent) ","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/23658f8c-7957-4dd2-8aa8-c9e2196bbcad-q3.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"leetcode","slug":"leetcode"},{"name":"string","slug":"string"},{"name":"data-structure","slug":"data-structure"},{"name":"algorithm","slug":"algorithm"},{"name":"easy","slug":"easy"}],"slug":"student-attendance-record-i","total":76},{"id":1299,"title":"Reverse Words in a String III","imageUrl":"882563fe-a3ed-4595-a3ca-0fce73590710-q3.jpg","dateCreated":"2020-05-11T11:15:25.241Z","dateModified":"2020-05-11T11:15:36.838Z","contributedBy":"AskGif","content":"Given a string, you need to reverse the order of characters in each word within a sentence while still preserving whitespace and initial word order.\r\nExample 1:\r\nInput: \"Let's take LeetCode contest\"\r\nOutput: \"s'teL ekat edoCteeL tsetnoc\"\r\n&nbsp;\r\nNote: In the st","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/882563fe-a3ed-4595-a3ca-0fce73590710-q3.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"leetcode","slug":"leetcode"},{"name":"algorithm","slug":"algorithm"},{"name":"easy","slug":"easy"},{"name":"string","slug":"string"},{"name":"data-structure","slug":"data-structure"}],"slug":"reverse-words-in-a-string-iii","total":76},{"id":1298,"title":"Construct String from Binary Tree","imageUrl":"2f9f448c-8e37-4321-a8f4-7d3d12990da2-q3.jpg","dateCreated":"2020-05-11T10:52:03.732Z","dateModified":"2020-05-11T10:52:17.475Z","contributedBy":"AskGif","content":"You need to construct a string consists of parenthesis and integers from a binary tree with the preorder traversing way.\r\nThe null node needs to be represented by an empty parenthesis pair \"()\". And you need to omit all the empty parenthesis pairs that don't affect the one-to-one mapping r","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/2f9f448c-8e37-4321-a8f4-7d3d12990da2-q3.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"binary-tree","slug":"binary-tree"},{"name":"algorithm","slug":"algorithm"},{"name":"easy","slug":"easy"},{"name":"data-structure","slug":"data-structure"},{"name":"leetcode","slug":"leetcode"},{"name":"string","slug":"string"}],"slug":"construct-string-from-binary-tree","total":76},{"id":1297,"title":"Robot Return to Origin","imageUrl":"983cdc50-b5e8-433a-b790-2befd9885107-q3.jpg","dateCreated":"2020-05-11T09:23:26.997Z","dateModified":"2020-05-11T09:29:29.347Z","contributedBy":"AskGif","content":"There is a robot starting at position (0, 0), the origin, on a 2D plane. Given a sequence of its moves, judge if this robot ends up at (0, 0) after it completes its moves.\r\nThe move sequence is represented by a string, and the character moves[i] represents its ith move. Valid moves are R (","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/983cdc50-b5e8-433a-b790-2befd9885107-q3.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"data-structure","slug":"data-structure"},{"name":"algorithm","slug":"algorithm"},{"name":"easy","slug":"easy"},{"name":"leetcode","slug":"leetcode"},{"name":"string","slug":"string"}],"slug":"robot-return-to-origin","total":76},{"id":1296,"title":"Valid Palindrome II","imageUrl":"e38ac653-0e88-46b9-9776-7d2113d4687a-q3.jpg","dateCreated":"2020-05-11T08:26:48.606Z","dateModified":"2020-05-11T08:27:03.261Z","contributedBy":"AskGif","content":"Given a non-empty string s, you may delete at most one character. Judge whether you can make it a palindrome.\r\n&nbsp;\r\nExample 1:\r\n<pre class=\"language-markup\"><code>Input: \"aba\"\r\n\r\nOutput: True</code></pre>\r\n&nbsp;\r\nExample 2:\r\n<pre class=\"language-markup\"><code>I","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/e38ac653-0e88-46b9-9776-7d2113d4687a-q3.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"string","slug":"string"},{"name":"leetcode","slug":"leetcode"},{"name":"easy","slug":"easy"}],"slug":"valid-palindrome-ii","total":76},{"id":1295,"title":"Repeated String Match","imageUrl":"dd9a38cb-aaef-4710-bcc5-52d22d499fbb-q3.jpg","dateCreated":"2020-05-10T14:01:13.344Z","dateModified":"2020-05-10T14:01:28.432Z","contributedBy":"AskGif","content":"Given two strings A and B, find the minimum number of times A has to be repeated such that B is a substring of it. If no such solution, return -1.\r\nFor example, with A = \"abcd\" and B = \"cdabcdab\".\r\nReturn 3, because by repeating A three times (&ldquo;abcdabcdabcd&rdquo;), B is a sub","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/dd9a38cb-aaef-4710-bcc5-52d22d499fbb-q3.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"leetcode","slug":"leetcode"},{"name":"algorithm","slug":"algorithm"},{"name":"data-structure","slug":"data-structure"},{"name":"string","slug":"string"},{"name":"easy","slug":"easy"}],"slug":"repeated-string-match","total":76},{"id":1294,"title":"Count Binary Substrings","imageUrl":"2426b649-4f7c-4d32-8c9a-9201b1f2886d-q3.jpg","dateCreated":"2020-05-10T13:02:35.408Z","dateModified":"2020-05-10T13:02:48.971Z","contributedBy":"AskGif","content":"Give a string s, count the number of non-empty (contiguous) substrings that have the same number of 0's and 1's, and all the 0's and all the 1's in these substrings are grouped consecutively.\r\nSubstrings that occur multiple times are counted the number of times they occur.\r\n&nbsp;</","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/2426b649-4f7c-4d32-8c9a-9201b1f2886d-q3.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"leetcode","slug":"leetcode"},{"name":"algorithm","slug":"algorithm"},{"name":"string","slug":"string"},{"name":"data-structure","slug":"data-structure"},{"name":"easy","slug":"easy"}],"slug":"count-binary-substrings","total":76}]