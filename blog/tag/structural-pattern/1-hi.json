[{"id":77,"title":"What is Composite pattern?","imageUrl":"7ce89db3-2021-4218-9d92-d15805039607_Composite_Pattern.jpg","dateCreated":"2018-08-01T16:08:32.863Z","dateModified":"2018-08-01T17:21:15.513Z","contributedBy":"AskGif","content":"In software engineering, the composite pattern is a partitioning design pattern. The composite pattern describes a group of objects that are treated the same way as a single instance of the same type of object. The intent of a composite is to \"compose\" objects into tree structures to represent pa","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/7ce89db3-2021-4218-9d92-d15805039607_Composite_Pattern.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"design-patterns","slug":"design-patterns"},{"name":"interview","slug":"interview"},{"name":"structural-pattern","slug":"structural-pattern"},{"name":"प्रशन","slug":"questions"}],"slug":"what-is-composite-pattern"},{"id":76,"title":"प्रॉक्सी पैटर्न क्या है?","imageUrl":"aaeafdf4-c3d7-4245-809f-7be5d5a4ac59_Proxy_Pattern.jpg","dateCreated":"2018-08-01T16:04:57.813Z","dateModified":"2018-08-01T17:22:28.188Z","contributedBy":"AskGif","content":"In computer programming, the proxy pattern is a software design pattern.\r\n&nbsp;\r\nA proxy, in its most general form, is a class functioning as an interface to something else. The proxy could interface to anything: a network connection, a large object in memory, a file, or some other","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/aaeafdf4-c3d7-4245-809f-7be5d5a4ac59_Proxy_Pattern.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"प्रशन","slug":"questions"},{"name":"design-patterns","slug":"design-patterns"},{"name":"structural-pattern","slug":"structural-pattern"},{"name":"interview","slug":"interview"}],"slug":"what-is-proxy-pattern"},{"id":72,"title":"फेकाडे पैटर्न क्या है?","imageUrl":"509c3ba4-0943-4aba-aa8e-7bbf8cdad079_Facade_design_pattern.png","dateCreated":"2018-08-01T15:23:05.846Z","dateModified":"2018-08-01T17:22:14.215Z","contributedBy":"AskGif","content":"The facade pattern (also spelt fa&ccedil;ade) is a software-design pattern commonly used with object-oriented programming. Analogous to a facade in architecture, a facade is an object that serves as a front-facing interface masking more complex underlying or structural code. A facade can:\r\n<p","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/509c3ba4-0943-4aba-aa8e-7bbf8cdad079_Facade_design_pattern.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"structural-pattern","slug":"structural-pattern"},{"name":"interview","slug":"interview"},{"name":"प्रशन","slug":"questions"},{"name":"design-patterns","slug":"design-patterns"}],"slug":"what-is-facade-pattern"},{"id":69,"title":"एडाप्टर पैटर्न क्या है?","imageUrl":"d3a5fc87-6928-4196-b3ae-d8e4ed5b9811_adapter-pattern.jpg","dateCreated":"2018-08-01T13:09:38.32Z","dateModified":"2018-08-01T17:20:54.998Z","contributedBy":"AskGif","content":"In software engineering, the adapter pattern is a software design pattern (also known as Wrapper, an alternative naming shared with the Decorator pattern) that allows the interface of an existing class to be used as another interface. It is often used to make existing classes work with others wit","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/d3a5fc87-6928-4196-b3ae-d8e4ed5b9811_adapter-pattern.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"प्रशन","slug":"questions"},{"name":"design-patterns","slug":"design-patterns"},{"name":"structural-pattern","slug":"structural-pattern"},{"name":"interview","slug":"interview"}],"slug":"what-is-adapter-pattern"},{"id":67,"title":"सजावट पैटर्न क्या है?","imageUrl":"c2eb4ba8-15a8-4f6f-9ad5-6788bdecbe58_decorator-pattern.jpg","dateCreated":"2018-08-01T12:35:29.821Z","dateModified":"2018-08-01T17:21:52.547Z","contributedBy":"AskGif","content":"In object-oriented programming, the decorator pattern is a design pattern that allows the behaviour to be added to an individual object, either statically or dynamically, without affecting the behaviour of other objects from the same class. The decorator pattern is often useful for adhering to th","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/c2eb4ba8-15a8-4f6f-9ad5-6788bdecbe58_decorator-pattern.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"प्रशन","slug":"questions"},{"name":"interview","slug":"interview"},{"name":"design-patterns","slug":"design-patterns"},{"name":"structural-pattern","slug":"structural-pattern"}],"slug":"what-is-decorator-pattern"}]