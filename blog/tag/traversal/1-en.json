[{"id":112,"title":"Search an element in binary tree without recursion.","imageUrl":"b3ea6acf-6279-4e29-b3cd-bb09edbc2784_binary-tree.jpg","dateCreated":"2018-08-16T09:08:38.069Z","dateModified":"2018-08-16T09:09:08.341Z","contributedBy":"AskGif","content":"We can use level order traversal for solving this problem. The only change required in level order traversal is, instead of printing the date we just need to check whether the root data is equal to the element we want to search.\r\nsource:&nbsp;Data Structures and Algorithms Made Easy in Jav","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/b3ea6acf-6279-4e29-b3cd-bb09edbc2784_binary-tree.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"interview","slug":"interview"},{"name":"java","slug":"java"},{"name":"traversal","slug":"traversal"},{"name":"tree","slug":"tree"},{"name":"questions","slug":"questions"},{"name":"binary-tree","slug":"binary-tree"},{"name":"level-order","slug":"level-order"}],"slug":"search-an-element-in-binary-tree-without-recursion","total":6},{"id":111,"title":"Find maximum element in binary tree without recursion.","imageUrl":"852f8357-9b87-4af3-9054-484bbc13f1fd_BST_Example.jpg","dateCreated":"2018-08-16T08:35:11.21Z","dateModified":"2018-08-16T08:36:54.976Z","contributedBy":"AskGif","content":"We could have used either PreOrder, InOrder or PostOrder traversal to find the maximum in a Tree but as it is mentioned that we need to find the maximum without using Recursion.\r\nUsing Level Order Traversal we can find the Maximum element. We just need to observe the elements data while de","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/852f8357-9b87-4af3-9054-484bbc13f1fd_BST_Example.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"level-order","slug":"level-order"},{"name":"tree","slug":"tree"},{"name":"questions","slug":"questions"},{"name":"binary-tree","slug":"binary-tree"},{"name":"algorithm","slug":"algorithm"},{"name":"interview","slug":"interview"},{"name":"traversal","slug":"traversal"}],"slug":"find-maximum-element-in-binary-tree-without-recursion","total":6},{"id":108,"title":"How to implement Level Order Traversal in Binary Tree?","imageUrl":"7833549b-eb6c-47f7-a6b0-1364f1434f70_binary_tree_breadth-first_traversal.png","dateCreated":"2018-08-14T14:06:33.296Z","dateModified":"2018-08-14T14:06:56.625Z","contributedBy":"AskGif","content":"Trees can also be traversed in level-order, where we visit every node on a level before going to a lower level. This search is referred to as a breadth-first search (BFS), as the search tree is broadened as much as possible on each depth before going to the next depth.\r\nJava implementation","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/7833549b-eb6c-47f7-a6b0-1364f1434f70_binary_tree_breadth-first_traversal.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"java","slug":"java"},{"name":"tree","slug":"tree"},{"name":"interview","slug":"interview"},{"name":"questions","slug":"questions"},{"name":"level-order","slug":"level-order"},{"name":"traversal","slug":"traversal"}],"slug":"how-to-implement-level-order-traversal-in-binary-tree","total":6},{"id":105,"title":"How to implement PostOrder Traversal in Binary Tree?","imageUrl":"d82cf369-0894-48fd-ba39-de927c3291d9_post-order-traversal.png","dateCreated":"2018-08-09T14:28:23.665Z","dateModified":"2018-08-09T14:29:04.831Z","contributedBy":"AskGif","content":"PostOrder Traversal is different from InOrder Traversal and PreOrder Traversal. In this Traversal approach we first traverse through left and then right and at the end, we traverse to the node data.\r\nIn PostOrder traversal, the root is visited after both subtrees. PostOrder traversal is de","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/d82cf369-0894-48fd-ba39-de927c3291d9_post-order-traversal.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"tree","slug":"tree"},{"name":"traversal","slug":"traversal"},{"name":"java","slug":"java"},{"name":"recursion","slug":"recursion"},{"name":"questions","slug":"questions"},{"name":"postorder","slug":"postorder"},{"name":"interview","slug":"interview"}],"slug":"how-to-implement-postorder-traversal-in-binary-tree","total":6},{"id":104,"title":"How to implement InOrder Traversal in Binary Tree?","imageUrl":"bf7ea477-0b3a-4e79-9923-feb2fab2a727_inorder_traversal in Java.jpg","dateCreated":"2018-08-09T14:17:47.233Z","dateModified":"2018-08-09T14:28:44.293Z","contributedBy":"AskGif","content":"The Technique for traversal in an Inorder is slightly different from what we were doing in PreOrder Traversal. Here we go through left node, then data and then the right node.\r\nIn an InOrder traversal, the root is visited between the subtrees. InOrder traversal is defined as follows:\r\n","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/bf7ea477-0b3a-4e79-9923-feb2fab2a727_inorder_traversal in Java.jpg","category":{"name":"coding","slug":"coding"},"tags":[{"name":"traversal","slug":"traversal"},{"name":"interview","slug":"interview"},{"name":"questions","slug":"questions"},{"name":"recursion","slug":"recursion"},{"name":"inorder","slug":"inorder"},{"name":"java","slug":"java"},{"name":"tree","slug":"tree"}],"slug":"how-to-implement-inorder-traversal-in-binary-tree","total":6},{"id":103,"title":"How to implement PreOrder Traversal in Binary Tree?","imageUrl":"67ec7449-0264-479c-9093-17e4045d3a45_preorder-traversal.png","dateCreated":"2018-08-09T14:09:46.468Z","dateModified":"2018-08-09T14:28:57.791Z","contributedBy":"AskGif","content":"In pre-order traversal, each node is processed before (pre) either of it's sub-trees. This is the simplest traversal to understand. However, even though each node is processed before the subtrees, it still requires that some information must be maintained while moving down the tree.\r\nPreor","ampImage":"https://raw.githubusercontent.com/sumitc91/AmpImage/main/Blogs/67ec7449-0264-479c-9093-17e4045d3a45_preorder-traversal.png","category":{"name":"coding","slug":"coding"},"tags":[{"name":"questions","slug":"questions"},{"name":"tree","slug":"tree"},{"name":"preorder","slug":"preorder"},{"name":"traversal","slug":"traversal"},{"name":"java","slug":"java"},{"name":"recursion","slug":"recursion"},{"name":"interview","slug":"interview"}],"slug":"how-to-implement-preorder-traversal-in-binary-tree","total":6}]